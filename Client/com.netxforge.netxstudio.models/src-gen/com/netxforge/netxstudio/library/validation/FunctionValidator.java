/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package com.netxforge.netxstudio.library.validation;

import com.netxforge.netxstudio.generics.DiagramInfo;
import com.netxforge.netxstudio.generics.MultiImage;

import com.netxforge.netxstudio.library.Expression;
import com.netxforge.netxstudio.library.Function;
import com.netxforge.netxstudio.library.NetXResource;
import com.netxforge.netxstudio.library.Parameter;
import com.netxforge.netxstudio.library.Tolerance;

import com.netxforge.netxstudio.metrics.Metric;

import com.netxforge.netxstudio.operators.FunctionRelationship;

import com.netxforge.netxstudio.protocols.Protocol;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link com.netxforge.netxstudio.library.Function}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface FunctionValidator {
	boolean validate();

	boolean validateDiagrams(EList<DiagramInfo> value);
	boolean validateIcons(MultiImage value);
	boolean validateFunctions(EList<Function> value);
	boolean validateFunctionResources(EList<NetXResource> value);
	boolean validateFunctionMetricRefs(EList<Metric> value);
	boolean validateFunctionRelationshipRefs(EList<FunctionRelationship> value);
	boolean validateFunctionExpressionRefs(EList<Expression> value);
	boolean validateToleranceRefs(EList<Tolerance> value);
	boolean validateProtocolRefs(EList<Protocol> value);
	boolean validateParameterRefs(EList<Parameter> value);
	boolean validateAllFunctionResources(EList<NetXResource> value);
	boolean validateAllFunctions(EList<Function> value);
	boolean validateDescription(String value);
	boolean validateFunctionName(String value);
}
