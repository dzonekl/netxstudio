package com.netxforge.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.netxforge.services.NetxscriptGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalNetxscriptParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_NUMBER", "RULE_INT", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'-'", "'+'", "'false'", "'PROFILE'", "'STATUS'", "'ALL'", "'count()'", "'sum()'", "'min()'", "'max()'", "'mean()'", "'deviation()'", "'erlangB()'", "'clear()'", "'MONTH'", "'WEEK'", "'DAY'", "'HOUR'", "'RED'", "'AMBER'", "'GREEN'", "'YELLOW'", "'METRIC'", "'CAP'", "'FORECAST'", "'FORECAST_CAP'", "'TRENDED'", "'UTILIZATION'", "'TOLERANCE'", "'DERIVED'", "'AVG'", "'BH'", "'mod'", "'import'", "'def'", "'('", "')'", "','", "'{'", "'}'", "';'", "'return'", "'if'", "'else'", "'while'", "'var'", "'='", "'+='", "'&&'", "'||'", "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'*'", "'/'", "'%'", "'['", "']'", "'.'", "'PARAM'", "'NODETYPE'", "'this'", "'->'", "'FUNCTION'", "'EQUIPMENT'", "'RESOURCE'", "'LINK'", "'!'", "'true'"
    };
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int RULE_ID=4;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__29=29;
    public static final int T__65=65;
    public static final int T__28=28;
    public static final int T__62=62;
    public static final int T__27=27;
    public static final int T__63=63;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int RULE_ANY_OTHER=11;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int T__61=61;
    public static final int T__60=60;
    public static final int EOF=-1;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__19=19;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__16=16;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__15=15;
    public static final int T__53=53;
    public static final int T__18=18;
    public static final int T__54=54;
    public static final int T__17=17;
    public static final int RULE_NUMBER=6;
    public static final int T__12=12;
    public static final int T__14=14;
    public static final int T__13=13;
    public static final int T__59=59;
    public static final int RULE_INT=7;
    public static final int T__50=50;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__80=80;
    public static final int T__46=46;
    public static final int T__81=81;
    public static final int T__47=47;
    public static final int T__82=82;
    public static final int T__44=44;
    public static final int T__83=83;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int RULE_SL_COMMENT=9;
    public static final int RULE_ML_COMMENT=8;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int RULE_STRING=5;
    public static final int T__32=32;
    public static final int T__71=71;
    public static final int T__33=33;
    public static final int T__72=72;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__70=70;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int RULE_WS=10;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;

    // delegates
    // delegators


        public InternalNetxscriptParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalNetxscriptParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalNetxscriptParser.tokenNames; }
    public String getGrammarFileName() { return "../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g"; }


     
     	private NetxscriptGrammarAccess grammarAccess;
     	
        public void setGrammarAccess(NetxscriptGrammarAccess grammarAccess) {
        	this.grammarAccess = grammarAccess;
        }
        
        @Override
        protected Grammar getGrammar() {
        	return grammarAccess.getGrammar();
        }
        
        @Override
        protected String getValueForTokenName(String tokenName) {
        	return tokenName;
        }




    // $ANTLR start "entryRuleMod"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:61:1: entryRuleMod : ruleMod EOF ;
    public final void entryRuleMod() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:62:1: ( ruleMod EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:63:1: ruleMod EOF
            {
             before(grammarAccess.getModRule()); 
            pushFollow(FOLLOW_ruleMod_in_entryRuleMod61);
            ruleMod();

            state._fsp--;

             after(grammarAccess.getModRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMod68); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMod"


    // $ANTLR start "ruleMod"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:70:1: ruleMod : ( ( rule__Mod__Group__0 ) ) ;
    public final void ruleMod() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:74:2: ( ( ( rule__Mod__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:75:1: ( ( rule__Mod__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:75:1: ( ( rule__Mod__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:76:1: ( rule__Mod__Group__0 )
            {
             before(grammarAccess.getModAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:77:1: ( rule__Mod__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:77:2: rule__Mod__Group__0
            {
            pushFollow(FOLLOW_rule__Mod__Group__0_in_ruleMod94);
            rule__Mod__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getModAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMod"


    // $ANTLR start "entryRuleImport"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:89:1: entryRuleImport : ruleImport EOF ;
    public final void entryRuleImport() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:90:1: ( ruleImport EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:91:1: ruleImport EOF
            {
             before(grammarAccess.getImportRule()); 
            pushFollow(FOLLOW_ruleImport_in_entryRuleImport121);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getImportRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleImport128); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:98:1: ruleImport : ( ( rule__Import__Group__0 ) ) ;
    public final void ruleImport() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:102:2: ( ( ( rule__Import__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:103:1: ( ( rule__Import__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:103:1: ( ( rule__Import__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:104:1: ( rule__Import__Group__0 )
            {
             before(grammarAccess.getImportAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:105:1: ( rule__Import__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:105:2: rule__Import__Group__0
            {
            pushFollow(FOLLOW_rule__Import__Group__0_in_ruleImport154);
            rule__Import__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleFunction"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:117:1: entryRuleFunction : ruleFunction EOF ;
    public final void entryRuleFunction() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:118:1: ( ruleFunction EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:119:1: ruleFunction EOF
            {
             before(grammarAccess.getFunctionRule()); 
            pushFollow(FOLLOW_ruleFunction_in_entryRuleFunction181);
            ruleFunction();

            state._fsp--;

             after(grammarAccess.getFunctionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFunction188); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:126:1: ruleFunction : ( ( rule__Function__Group__0 ) ) ;
    public final void ruleFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:130:2: ( ( ( rule__Function__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:131:1: ( ( rule__Function__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:131:1: ( ( rule__Function__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:132:1: ( rule__Function__Group__0 )
            {
             before(grammarAccess.getFunctionAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:133:1: ( rule__Function__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:133:2: rule__Function__Group__0
            {
            pushFollow(FOLLOW_rule__Function__Group__0_in_ruleFunction214);
            rule__Function__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleArgument"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:145:1: entryRuleArgument : ruleArgument EOF ;
    public final void entryRuleArgument() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:146:1: ( ruleArgument EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:147:1: ruleArgument EOF
            {
             before(grammarAccess.getArgumentRule()); 
            pushFollow(FOLLOW_ruleArgument_in_entryRuleArgument241);
            ruleArgument();

            state._fsp--;

             after(grammarAccess.getArgumentRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleArgument248); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArgument"


    // $ANTLR start "ruleArgument"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:154:1: ruleArgument : ( ( rule__Argument__NameAssignment ) ) ;
    public final void ruleArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:158:2: ( ( ( rule__Argument__NameAssignment ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:159:1: ( ( rule__Argument__NameAssignment ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:159:1: ( ( rule__Argument__NameAssignment ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:160:1: ( rule__Argument__NameAssignment )
            {
             before(grammarAccess.getArgumentAccess().getNameAssignment()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:161:1: ( rule__Argument__NameAssignment )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:161:2: rule__Argument__NameAssignment
            {
            pushFollow(FOLLOW_rule__Argument__NameAssignment_in_ruleArgument274);
            rule__Argument__NameAssignment();

            state._fsp--;


            }

             after(grammarAccess.getArgumentAccess().getNameAssignment()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArgument"


    // $ANTLR start "entryRuleBlock"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:177:1: entryRuleBlock : ruleBlock EOF ;
    public final void entryRuleBlock() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:178:1: ( ruleBlock EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:179:1: ruleBlock EOF
            {
             before(grammarAccess.getBlockRule()); 
            pushFollow(FOLLOW_ruleBlock_in_entryRuleBlock305);
            ruleBlock();

            state._fsp--;

             after(grammarAccess.getBlockRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleBlock312); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:186:1: ruleBlock : ( ( rule__Block__Group__0 ) ) ;
    public final void ruleBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:190:2: ( ( ( rule__Block__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:191:1: ( ( rule__Block__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:191:1: ( ( rule__Block__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:192:1: ( rule__Block__Group__0 )
            {
             before(grammarAccess.getBlockAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:193:1: ( rule__Block__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:193:2: rule__Block__Group__0
            {
            pushFollow(FOLLOW_rule__Block__Group__0_in_ruleBlock338);
            rule__Block__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getBlockAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:205:1: entryRuleStatement : ruleStatement EOF ;
    public final void entryRuleStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:206:1: ( ruleStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:207:1: ruleStatement EOF
            {
             before(grammarAccess.getStatementRule()); 
            pushFollow(FOLLOW_ruleStatement_in_entryRuleStatement365);
            ruleStatement();

            state._fsp--;

             after(grammarAccess.getStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatement372); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:214:1: ruleStatement : ( ( rule__Statement__Alternatives ) ) ;
    public final void ruleStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:218:2: ( ( ( rule__Statement__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:219:1: ( ( rule__Statement__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:219:1: ( ( rule__Statement__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:220:1: ( rule__Statement__Alternatives )
            {
             before(grammarAccess.getStatementAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:221:1: ( rule__Statement__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:221:2: rule__Statement__Alternatives
            {
            pushFollow(FOLLOW_rule__Statement__Alternatives_in_ruleStatement398);
            rule__Statement__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getStatementAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleReturnStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:233:1: entryRuleReturnStatement : ruleReturnStatement EOF ;
    public final void entryRuleReturnStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:234:1: ( ruleReturnStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:235:1: ruleReturnStatement EOF
            {
             before(grammarAccess.getReturnStatementRule()); 
            pushFollow(FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement425);
            ruleReturnStatement();

            state._fsp--;

             after(grammarAccess.getReturnStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReturnStatement432); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReturnStatement"


    // $ANTLR start "ruleReturnStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:242:1: ruleReturnStatement : ( ( rule__ReturnStatement__Group__0 ) ) ;
    public final void ruleReturnStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:246:2: ( ( ( rule__ReturnStatement__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:247:1: ( ( rule__ReturnStatement__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:247:1: ( ( rule__ReturnStatement__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:248:1: ( rule__ReturnStatement__Group__0 )
            {
             before(grammarAccess.getReturnStatementAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:249:1: ( rule__ReturnStatement__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:249:2: rule__ReturnStatement__Group__0
            {
            pushFollow(FOLLOW_rule__ReturnStatement__Group__0_in_ruleReturnStatement458);
            rule__ReturnStatement__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReturnStatementAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReturnStatement"


    // $ANTLR start "entryRuleIfStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:261:1: entryRuleIfStatement : ruleIfStatement EOF ;
    public final void entryRuleIfStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:262:1: ( ruleIfStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:263:1: ruleIfStatement EOF
            {
             before(grammarAccess.getIfStatementRule()); 
            pushFollow(FOLLOW_ruleIfStatement_in_entryRuleIfStatement485);
            ruleIfStatement();

            state._fsp--;

             after(grammarAccess.getIfStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIfStatement492); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIfStatement"


    // $ANTLR start "ruleIfStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:270:1: ruleIfStatement : ( ( rule__IfStatement__Group__0 ) ) ;
    public final void ruleIfStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:274:2: ( ( ( rule__IfStatement__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:275:1: ( ( rule__IfStatement__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:275:1: ( ( rule__IfStatement__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:276:1: ( rule__IfStatement__Group__0 )
            {
             before(grammarAccess.getIfStatementAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:277:1: ( rule__IfStatement__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:277:2: rule__IfStatement__Group__0
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__0_in_ruleIfStatement518);
            rule__IfStatement__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIfStatementAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIfStatement"


    // $ANTLR start "entryRuleWhileStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:289:1: entryRuleWhileStatement : ruleWhileStatement EOF ;
    public final void entryRuleWhileStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:290:1: ( ruleWhileStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:291:1: ruleWhileStatement EOF
            {
             before(grammarAccess.getWhileStatementRule()); 
            pushFollow(FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement545);
            ruleWhileStatement();

            state._fsp--;

             after(grammarAccess.getWhileStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleWhileStatement552); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWhileStatement"


    // $ANTLR start "ruleWhileStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:298:1: ruleWhileStatement : ( ( rule__WhileStatement__Group__0 ) ) ;
    public final void ruleWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:302:2: ( ( ( rule__WhileStatement__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:303:1: ( ( rule__WhileStatement__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:303:1: ( ( rule__WhileStatement__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:304:1: ( rule__WhileStatement__Group__0 )
            {
             before(grammarAccess.getWhileStatementAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:305:1: ( rule__WhileStatement__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:305:2: rule__WhileStatement__Group__0
            {
            pushFollow(FOLLOW_rule__WhileStatement__Group__0_in_ruleWhileStatement578);
            rule__WhileStatement__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getWhileStatementAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWhileStatement"


    // $ANTLR start "entryRuleVariableStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:317:1: entryRuleVariableStatement : ruleVariableStatement EOF ;
    public final void entryRuleVariableStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:318:1: ( ruleVariableStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:319:1: ruleVariableStatement EOF
            {
             before(grammarAccess.getVariableStatementRule()); 
            pushFollow(FOLLOW_ruleVariableStatement_in_entryRuleVariableStatement605);
            ruleVariableStatement();

            state._fsp--;

             after(grammarAccess.getVariableStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVariableStatement612); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVariableStatement"


    // $ANTLR start "ruleVariableStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:326:1: ruleVariableStatement : ( ( rule__VariableStatement__Group__0 ) ) ;
    public final void ruleVariableStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:330:2: ( ( ( rule__VariableStatement__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:331:1: ( ( rule__VariableStatement__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:331:1: ( ( rule__VariableStatement__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:332:1: ( rule__VariableStatement__Group__0 )
            {
             before(grammarAccess.getVariableStatementAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:333:1: ( rule__VariableStatement__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:333:2: rule__VariableStatement__Group__0
            {
            pushFollow(FOLLOW_rule__VariableStatement__Group__0_in_ruleVariableStatement638);
            rule__VariableStatement__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVariableStatementAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVariableStatement"


    // $ANTLR start "entryRuleAssignmentStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:345:1: entryRuleAssignmentStatement : ruleAssignmentStatement EOF ;
    public final void entryRuleAssignmentStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:346:1: ( ruleAssignmentStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:347:1: ruleAssignmentStatement EOF
            {
             before(grammarAccess.getAssignmentStatementRule()); 
            pushFollow(FOLLOW_ruleAssignmentStatement_in_entryRuleAssignmentStatement665);
            ruleAssignmentStatement();

            state._fsp--;

             after(grammarAccess.getAssignmentStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAssignmentStatement672); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignmentStatement"


    // $ANTLR start "ruleAssignmentStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:354:1: ruleAssignmentStatement : ( ( rule__AssignmentStatement__Group__0 ) ) ;
    public final void ruleAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:358:2: ( ( ( rule__AssignmentStatement__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:359:1: ( ( rule__AssignmentStatement__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:359:1: ( ( rule__AssignmentStatement__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:360:1: ( rule__AssignmentStatement__Group__0 )
            {
             before(grammarAccess.getAssignmentStatementAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:361:1: ( rule__AssignmentStatement__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:361:2: rule__AssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_rule__AssignmentStatement__Group__0_in_ruleAssignmentStatement698);
            rule__AssignmentStatement__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAssignmentStatementAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignmentStatement"


    // $ANTLR start "entryRulePlusAssignmentStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:373:1: entryRulePlusAssignmentStatement : rulePlusAssignmentStatement EOF ;
    public final void entryRulePlusAssignmentStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:374:1: ( rulePlusAssignmentStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:375:1: rulePlusAssignmentStatement EOF
            {
             before(grammarAccess.getPlusAssignmentStatementRule()); 
            pushFollow(FOLLOW_rulePlusAssignmentStatement_in_entryRulePlusAssignmentStatement725);
            rulePlusAssignmentStatement();

            state._fsp--;

             after(grammarAccess.getPlusAssignmentStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePlusAssignmentStatement732); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePlusAssignmentStatement"


    // $ANTLR start "rulePlusAssignmentStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:382:1: rulePlusAssignmentStatement : ( ( rule__PlusAssignmentStatement__Group__0 ) ) ;
    public final void rulePlusAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:386:2: ( ( ( rule__PlusAssignmentStatement__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:387:1: ( ( rule__PlusAssignmentStatement__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:387:1: ( ( rule__PlusAssignmentStatement__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:388:1: ( rule__PlusAssignmentStatement__Group__0 )
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:389:1: ( rule__PlusAssignmentStatement__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:389:2: rule__PlusAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__0_in_rulePlusAssignmentStatement758);
            rule__PlusAssignmentStatement__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPlusAssignmentStatementAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePlusAssignmentStatement"


    // $ANTLR start "entryRuleReferenceAssignmentStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:401:1: entryRuleReferenceAssignmentStatement : ruleReferenceAssignmentStatement EOF ;
    public final void entryRuleReferenceAssignmentStatement() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:402:1: ( ruleReferenceAssignmentStatement EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:403:1: ruleReferenceAssignmentStatement EOF
            {
             before(grammarAccess.getReferenceAssignmentStatementRule()); 
            pushFollow(FOLLOW_ruleReferenceAssignmentStatement_in_entryRuleReferenceAssignmentStatement785);
            ruleReferenceAssignmentStatement();

            state._fsp--;

             after(grammarAccess.getReferenceAssignmentStatementRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReferenceAssignmentStatement792); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReferenceAssignmentStatement"


    // $ANTLR start "ruleReferenceAssignmentStatement"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:410:1: ruleReferenceAssignmentStatement : ( ( rule__ReferenceAssignmentStatement__Group__0 ) ) ;
    public final void ruleReferenceAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:414:2: ( ( ( rule__ReferenceAssignmentStatement__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:415:1: ( ( rule__ReferenceAssignmentStatement__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:415:1: ( ( rule__ReferenceAssignmentStatement__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:416:1: ( rule__ReferenceAssignmentStatement__Group__0 )
            {
             before(grammarAccess.getReferenceAssignmentStatementAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:417:1: ( rule__ReferenceAssignmentStatement__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:417:2: rule__ReferenceAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__0_in_ruleReferenceAssignmentStatement818);
            rule__ReferenceAssignmentStatement__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getReferenceAssignmentStatementAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReferenceAssignmentStatement"


    // $ANTLR start "entryRuleExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:429:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:430:1: ( ruleExpression EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:431:1: ruleExpression EOF
            {
             before(grammarAccess.getExpressionRule()); 
            pushFollow(FOLLOW_ruleExpression_in_entryRuleExpression845);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getExpressionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleExpression852); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:438:1: ruleExpression : ( ruleLogical ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:442:2: ( ( ruleLogical ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:443:1: ( ruleLogical )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:443:1: ( ruleLogical )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:444:1: ruleLogical
            {
             before(grammarAccess.getExpressionAccess().getLogicalParserRuleCall()); 
            pushFollow(FOLLOW_ruleLogical_in_ruleExpression878);
            ruleLogical();

            state._fsp--;

             after(grammarAccess.getExpressionAccess().getLogicalParserRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleLogical"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:457:1: entryRuleLogical : ruleLogical EOF ;
    public final void entryRuleLogical() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:458:1: ( ruleLogical EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:459:1: ruleLogical EOF
            {
             before(grammarAccess.getLogicalRule()); 
            pushFollow(FOLLOW_ruleLogical_in_entryRuleLogical904);
            ruleLogical();

            state._fsp--;

             after(grammarAccess.getLogicalRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLogical911); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLogical"


    // $ANTLR start "ruleLogical"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:466:1: ruleLogical : ( ( rule__Logical__Group__0 ) ) ;
    public final void ruleLogical() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:470:2: ( ( ( rule__Logical__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:471:1: ( ( rule__Logical__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:471:1: ( ( rule__Logical__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:472:1: ( rule__Logical__Group__0 )
            {
             before(grammarAccess.getLogicalAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:473:1: ( rule__Logical__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:473:2: rule__Logical__Group__0
            {
            pushFollow(FOLLOW_rule__Logical__Group__0_in_ruleLogical937);
            rule__Logical__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLogicalAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLogical"


    // $ANTLR start "entryRuleEquality"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:485:1: entryRuleEquality : ruleEquality EOF ;
    public final void entryRuleEquality() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:486:1: ( ruleEquality EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:487:1: ruleEquality EOF
            {
             before(grammarAccess.getEqualityRule()); 
            pushFollow(FOLLOW_ruleEquality_in_entryRuleEquality964);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getEqualityRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleEquality971); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEquality"


    // $ANTLR start "ruleEquality"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:494:1: ruleEquality : ( ( rule__Equality__Group__0 ) ) ;
    public final void ruleEquality() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:498:2: ( ( ( rule__Equality__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:499:1: ( ( rule__Equality__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:499:1: ( ( rule__Equality__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:500:1: ( rule__Equality__Group__0 )
            {
             before(grammarAccess.getEqualityAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:501:1: ( rule__Equality__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:501:2: rule__Equality__Group__0
            {
            pushFollow(FOLLOW_rule__Equality__Group__0_in_ruleEquality997);
            rule__Equality__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEquality"


    // $ANTLR start "entryRuleComparison"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:513:1: entryRuleComparison : ruleComparison EOF ;
    public final void entryRuleComparison() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:514:1: ( ruleComparison EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:515:1: ruleComparison EOF
            {
             before(grammarAccess.getComparisonRule()); 
            pushFollow(FOLLOW_ruleComparison_in_entryRuleComparison1024);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getComparisonRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleComparison1031); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:522:1: ruleComparison : ( ( rule__Comparison__Group__0 ) ) ;
    public final void ruleComparison() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:526:2: ( ( ( rule__Comparison__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:527:1: ( ( rule__Comparison__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:527:1: ( ( rule__Comparison__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:528:1: ( rule__Comparison__Group__0 )
            {
             before(grammarAccess.getComparisonAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:529:1: ( rule__Comparison__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:529:2: rule__Comparison__Group__0
            {
            pushFollow(FOLLOW_rule__Comparison__Group__0_in_ruleComparison1057);
            rule__Comparison__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAddition"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:541:1: entryRuleAddition : ruleAddition EOF ;
    public final void entryRuleAddition() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:542:1: ( ruleAddition EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:543:1: ruleAddition EOF
            {
             before(grammarAccess.getAdditionRule()); 
            pushFollow(FOLLOW_ruleAddition_in_entryRuleAddition1084);
            ruleAddition();

            state._fsp--;

             after(grammarAccess.getAdditionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleAddition1091); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:550:1: ruleAddition : ( ( rule__Addition__Group__0 ) ) ;
    public final void ruleAddition() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:554:2: ( ( ( rule__Addition__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:555:1: ( ( rule__Addition__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:555:1: ( ( rule__Addition__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:556:1: ( rule__Addition__Group__0 )
            {
             before(grammarAccess.getAdditionAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:557:1: ( rule__Addition__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:557:2: rule__Addition__Group__0
            {
            pushFollow(FOLLOW_rule__Addition__Group__0_in_ruleAddition1117);
            rule__Addition__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getAdditionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "entryRuleMultiplication"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:569:1: entryRuleMultiplication : ruleMultiplication EOF ;
    public final void entryRuleMultiplication() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:570:1: ( ruleMultiplication EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:571:1: ruleMultiplication EOF
            {
             before(grammarAccess.getMultiplicationRule()); 
            pushFollow(FOLLOW_ruleMultiplication_in_entryRuleMultiplication1144);
            ruleMultiplication();

            state._fsp--;

             after(grammarAccess.getMultiplicationRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleMultiplication1151); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:578:1: ruleMultiplication : ( ( rule__Multiplication__Group__0 ) ) ;
    public final void ruleMultiplication() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:582:2: ( ( ( rule__Multiplication__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:583:1: ( ( rule__Multiplication__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:583:1: ( ( rule__Multiplication__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:584:1: ( rule__Multiplication__Group__0 )
            {
             before(grammarAccess.getMultiplicationAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:585:1: ( rule__Multiplication__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:585:2: rule__Multiplication__Group__0
            {
            pushFollow(FOLLOW_rule__Multiplication__Group__0_in_ruleMultiplication1177);
            rule__Multiplication__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getMultiplicationAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "entryRuleUnary"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:597:1: entryRuleUnary : ruleUnary EOF ;
    public final void entryRuleUnary() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:598:1: ( ruleUnary EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:599:1: ruleUnary EOF
            {
             before(grammarAccess.getUnaryRule()); 
            pushFollow(FOLLOW_ruleUnary_in_entryRuleUnary1204);
            ruleUnary();

            state._fsp--;

             after(grammarAccess.getUnaryRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnary1211); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnary"


    // $ANTLR start "ruleUnary"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:606:1: ruleUnary : ( ( rule__Unary__Alternatives ) ) ;
    public final void ruleUnary() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:610:2: ( ( ( rule__Unary__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:611:1: ( ( rule__Unary__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:611:1: ( ( rule__Unary__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:612:1: ( rule__Unary__Alternatives )
            {
             before(grammarAccess.getUnaryAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:613:1: ( rule__Unary__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:613:2: rule__Unary__Alternatives
            {
            pushFollow(FOLLOW_rule__Unary__Alternatives_in_ruleUnary1237);
            rule__Unary__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getUnaryAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnary"


    // $ANTLR start "entryRuleUnaryOperator"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:625:1: entryRuleUnaryOperator : ruleUnaryOperator EOF ;
    public final void entryRuleUnaryOperator() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:626:1: ( ruleUnaryOperator EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:627:1: ruleUnaryOperator EOF
            {
             before(grammarAccess.getUnaryOperatorRule()); 
            pushFollow(FOLLOW_ruleUnaryOperator_in_entryRuleUnaryOperator1264);
            ruleUnaryOperator();

            state._fsp--;

             after(grammarAccess.getUnaryOperatorRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleUnaryOperator1271); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnaryOperator"


    // $ANTLR start "ruleUnaryOperator"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:634:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:638:2: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:639:1: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:639:1: ( ( rule__UnaryOperator__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:640:1: ( rule__UnaryOperator__Alternatives )
            {
             before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:641:1: ( rule__UnaryOperator__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:641:2: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_rule__UnaryOperator__Alternatives_in_ruleUnaryOperator1297);
            rule__UnaryOperator__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "entryRulePrimaryExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:653:1: entryRulePrimaryExpression : rulePrimaryExpression EOF ;
    public final void entryRulePrimaryExpression() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:654:1: ( rulePrimaryExpression EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:655:1: rulePrimaryExpression EOF
            {
             before(grammarAccess.getPrimaryExpressionRule()); 
            pushFollow(FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression1324);
            rulePrimaryExpression();

            state._fsp--;

             after(grammarAccess.getPrimaryExpressionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrimaryExpression1331); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryExpression"


    // $ANTLR start "rulePrimaryExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:662:1: rulePrimaryExpression : ( ( rule__PrimaryExpression__Alternatives ) ) ;
    public final void rulePrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:666:2: ( ( ( rule__PrimaryExpression__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:667:1: ( ( rule__PrimaryExpression__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:667:1: ( ( rule__PrimaryExpression__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:668:1: ( rule__PrimaryExpression__Alternatives )
            {
             before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:669:1: ( rule__PrimaryExpression__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:669:2: rule__PrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_rule__PrimaryExpression__Alternatives_in_rulePrimaryExpression1357);
            rule__PrimaryExpression__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryExpression"


    // $ANTLR start "entryRuleLiteral"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:681:1: entryRuleLiteral : ruleLiteral EOF ;
    public final void entryRuleLiteral() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:682:1: ( ruleLiteral EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:683:1: ruleLiteral EOF
            {
             before(grammarAccess.getLiteralRule()); 
            pushFollow(FOLLOW_ruleLiteral_in_entryRuleLiteral1384);
            ruleLiteral();

            state._fsp--;

             after(grammarAccess.getLiteralRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLiteral1391); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:690:1: ruleLiteral : ( ( rule__Literal__Alternatives ) ) ;
    public final void ruleLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:694:2: ( ( ( rule__Literal__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:695:1: ( ( rule__Literal__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:695:1: ( ( rule__Literal__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:696:1: ( rule__Literal__Alternatives )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:697:1: ( rule__Literal__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:697:2: rule__Literal__Alternatives
            {
            pushFollow(FOLLOW_rule__Literal__Alternatives_in_ruleLiteral1417);
            rule__Literal__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleNumberLiteral"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:709:1: entryRuleNumberLiteral : ruleNumberLiteral EOF ;
    public final void entryRuleNumberLiteral() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:710:1: ( ruleNumberLiteral EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:711:1: ruleNumberLiteral EOF
            {
             before(grammarAccess.getNumberLiteralRule()); 
            pushFollow(FOLLOW_ruleNumberLiteral_in_entryRuleNumberLiteral1444);
            ruleNumberLiteral();

            state._fsp--;

             after(grammarAccess.getNumberLiteralRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNumberLiteral1451); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumberLiteral"


    // $ANTLR start "ruleNumberLiteral"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:718:1: ruleNumberLiteral : ( ( rule__NumberLiteral__Group__0 ) ) ;
    public final void ruleNumberLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:722:2: ( ( ( rule__NumberLiteral__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:723:1: ( ( rule__NumberLiteral__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:723:1: ( ( rule__NumberLiteral__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:724:1: ( rule__NumberLiteral__Group__0 )
            {
             before(grammarAccess.getNumberLiteralAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:725:1: ( rule__NumberLiteral__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:725:2: rule__NumberLiteral__Group__0
            {
            pushFollow(FOLLOW_rule__NumberLiteral__Group__0_in_ruleNumberLiteral1477);
            rule__NumberLiteral__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNumberLiteralAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumberLiteral"


    // $ANTLR start "entryRuleParenthesizedExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:737:1: entryRuleParenthesizedExpression : ruleParenthesizedExpression EOF ;
    public final void entryRuleParenthesizedExpression() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:738:1: ( ruleParenthesizedExpression EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:739:1: ruleParenthesizedExpression EOF
            {
             before(grammarAccess.getParenthesizedExpressionRule()); 
            pushFollow(FOLLOW_ruleParenthesizedExpression_in_entryRuleParenthesizedExpression1504);
            ruleParenthesizedExpression();

            state._fsp--;

             after(grammarAccess.getParenthesizedExpressionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleParenthesizedExpression1511); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParenthesizedExpression"


    // $ANTLR start "ruleParenthesizedExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:746:1: ruleParenthesizedExpression : ( ( rule__ParenthesizedExpression__Group__0 ) ) ;
    public final void ruleParenthesizedExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:750:2: ( ( ( rule__ParenthesizedExpression__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:751:1: ( ( rule__ParenthesizedExpression__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:751:1: ( ( rule__ParenthesizedExpression__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:752:1: ( rule__ParenthesizedExpression__Group__0 )
            {
             before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:753:1: ( rule__ParenthesizedExpression__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:753:2: rule__ParenthesizedExpression__Group__0
            {
            pushFollow(FOLLOW_rule__ParenthesizedExpression__Group__0_in_ruleParenthesizedExpression1537);
            rule__ParenthesizedExpression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParenthesizedExpression"


    // $ANTLR start "entryRuleFunctionCall"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:765:1: entryRuleFunctionCall : ruleFunctionCall EOF ;
    public final void entryRuleFunctionCall() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:766:1: ( ruleFunctionCall EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:767:1: ruleFunctionCall EOF
            {
             before(grammarAccess.getFunctionCallRule()); 
            pushFollow(FOLLOW_ruleFunctionCall_in_entryRuleFunctionCall1564);
            ruleFunctionCall();

            state._fsp--;

             after(grammarAccess.getFunctionCallRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleFunctionCall1571); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionCall"


    // $ANTLR start "ruleFunctionCall"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:774:1: ruleFunctionCall : ( ( rule__FunctionCall__Group__0 ) ) ;
    public final void ruleFunctionCall() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:778:2: ( ( ( rule__FunctionCall__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:779:1: ( ( rule__FunctionCall__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:779:1: ( ( rule__FunctionCall__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:780:1: ( rule__FunctionCall__Group__0 )
            {
             before(grammarAccess.getFunctionCallAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:781:1: ( rule__FunctionCall__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:781:2: rule__FunctionCall__Group__0
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group__0_in_ruleFunctionCall1597);
            rule__FunctionCall__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionCallAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionCall"


    // $ANTLR start "entryRuleIndexedCall"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:793:1: entryRuleIndexedCall : ruleIndexedCall EOF ;
    public final void entryRuleIndexedCall() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:794:1: ( ruleIndexedCall EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:795:1: ruleIndexedCall EOF
            {
             before(grammarAccess.getIndexedCallRule()); 
            pushFollow(FOLLOW_ruleIndexedCall_in_entryRuleIndexedCall1624);
            ruleIndexedCall();

            state._fsp--;

             after(grammarAccess.getIndexedCallRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleIndexedCall1631); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIndexedCall"


    // $ANTLR start "ruleIndexedCall"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:802:1: ruleIndexedCall : ( ( rule__IndexedCall__Group__0 ) ) ;
    public final void ruleIndexedCall() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:806:2: ( ( ( rule__IndexedCall__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:807:1: ( ( rule__IndexedCall__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:807:1: ( ( rule__IndexedCall__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:808:1: ( rule__IndexedCall__Group__0 )
            {
             before(grammarAccess.getIndexedCallAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:809:1: ( rule__IndexedCall__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:809:2: rule__IndexedCall__Group__0
            {
            pushFollow(FOLLOW_rule__IndexedCall__Group__0_in_ruleIndexedCall1657);
            rule__IndexedCall__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getIndexedCallAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIndexedCall"


    // $ANTLR start "entryRuleNativeExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:821:1: entryRuleNativeExpression : ruleNativeExpression EOF ;
    public final void entryRuleNativeExpression() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:822:1: ( ruleNativeExpression EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:823:1: ruleNativeExpression EOF
            {
             before(grammarAccess.getNativeExpressionRule()); 
            pushFollow(FOLLOW_ruleNativeExpression_in_entryRuleNativeExpression1684);
            ruleNativeExpression();

            state._fsp--;

             after(grammarAccess.getNativeExpressionRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNativeExpression1691); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNativeExpression"


    // $ANTLR start "ruleNativeExpression"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:830:1: ruleNativeExpression : ( ( rule__NativeExpression__Group__0 ) ) ;
    public final void ruleNativeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:834:2: ( ( ( rule__NativeExpression__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:835:1: ( ( rule__NativeExpression__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:835:1: ( ( rule__NativeExpression__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:836:1: ( rule__NativeExpression__Group__0 )
            {
             before(grammarAccess.getNativeExpressionAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:837:1: ( rule__NativeExpression__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:837:2: rule__NativeExpression__Group__0
            {
            pushFollow(FOLLOW_rule__NativeExpression__Group__0_in_ruleNativeExpression1717);
            rule__NativeExpression__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNativeExpressionAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNativeExpression"


    // $ANTLR start "entryRuleVarOrArgumentCall"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:849:1: entryRuleVarOrArgumentCall : ruleVarOrArgumentCall EOF ;
    public final void entryRuleVarOrArgumentCall() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:850:1: ( ruleVarOrArgumentCall EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:851:1: ruleVarOrArgumentCall EOF
            {
             before(grammarAccess.getVarOrArgumentCallRule()); 
            pushFollow(FOLLOW_ruleVarOrArgumentCall_in_entryRuleVarOrArgumentCall1744);
            ruleVarOrArgumentCall();

            state._fsp--;

             after(grammarAccess.getVarOrArgumentCallRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleVarOrArgumentCall1751); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarOrArgumentCall"


    // $ANTLR start "ruleVarOrArgumentCall"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:858:1: ruleVarOrArgumentCall : ( ( rule__VarOrArgumentCall__Group__0 ) ) ;
    public final void ruleVarOrArgumentCall() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:862:2: ( ( ( rule__VarOrArgumentCall__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:863:1: ( ( rule__VarOrArgumentCall__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:863:1: ( ( rule__VarOrArgumentCall__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:864:1: ( rule__VarOrArgumentCall__Group__0 )
            {
             before(grammarAccess.getVarOrArgumentCallAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:865:1: ( rule__VarOrArgumentCall__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:865:2: rule__VarOrArgumentCall__Group__0
            {
            pushFollow(FOLLOW_rule__VarOrArgumentCall__Group__0_in_ruleVarOrArgumentCall1777);
            rule__VarOrArgumentCall__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getVarOrArgumentCallAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarOrArgumentCall"


    // $ANTLR start "entryRuleRange"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:877:1: entryRuleRange : ruleRange EOF ;
    public final void entryRuleRange() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:878:1: ( ruleRange EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:879:1: ruleRange EOF
            {
             before(grammarAccess.getRangeRule()); 
            pushFollow(FOLLOW_ruleRange_in_entryRuleRange1804);
            ruleRange();

            state._fsp--;

             after(grammarAccess.getRangeRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRange1811); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRange"


    // $ANTLR start "ruleRange"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:886:1: ruleRange : ( ruleRangeLiteral ) ;
    public final void ruleRange() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:890:2: ( ( ruleRangeLiteral ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:891:1: ( ruleRangeLiteral )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:891:1: ( ruleRangeLiteral )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:892:1: ruleRangeLiteral
            {
             before(grammarAccess.getRangeAccess().getRangeLiteralParserRuleCall()); 
            pushFollow(FOLLOW_ruleRangeLiteral_in_ruleRange1837);
            ruleRangeLiteral();

            state._fsp--;

             after(grammarAccess.getRangeAccess().getRangeLiteralParserRuleCall()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRange"


    // $ANTLR start "entryRuleRangeLiteral"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:905:1: entryRuleRangeLiteral : ruleRangeLiteral EOF ;
    public final void entryRuleRangeLiteral() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:906:1: ( ruleRangeLiteral EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:907:1: ruleRangeLiteral EOF
            {
             before(grammarAccess.getRangeLiteralRule()); 
            pushFollow(FOLLOW_ruleRangeLiteral_in_entryRuleRangeLiteral1863);
            ruleRangeLiteral();

            state._fsp--;

             after(grammarAccess.getRangeLiteralRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRangeLiteral1870); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRangeLiteral"


    // $ANTLR start "ruleRangeLiteral"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:914:1: ruleRangeLiteral : ( ( rule__RangeLiteral__Group__0 ) ) ;
    public final void ruleRangeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:918:2: ( ( ( rule__RangeLiteral__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:919:1: ( ( rule__RangeLiteral__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:919:1: ( ( rule__RangeLiteral__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:920:1: ( rule__RangeLiteral__Group__0 )
            {
             before(grammarAccess.getRangeLiteralAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:921:1: ( rule__RangeLiteral__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:921:2: rule__RangeLiteral__Group__0
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group__0_in_ruleRangeLiteral1896);
            rule__RangeLiteral__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getRangeLiteralAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRangeLiteral"


    // $ANTLR start "entryRuleReference"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:933:1: entryRuleReference : ruleReference EOF ;
    public final void entryRuleReference() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:934:1: ( ruleReference EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:935:1: ruleReference EOF
            {
             before(grammarAccess.getReferenceRule()); 
            pushFollow(FOLLOW_ruleReference_in_entryRuleReference1923);
            ruleReference();

            state._fsp--;

             after(grammarAccess.getReferenceRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleReference1930); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleReference"


    // $ANTLR start "ruleReference"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:942:1: ruleReference : ( ( rule__Reference__Alternatives ) ) ;
    public final void ruleReference() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:946:2: ( ( ( rule__Reference__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:947:1: ( ( rule__Reference__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:947:1: ( ( rule__Reference__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:948:1: ( rule__Reference__Alternatives )
            {
             before(grammarAccess.getReferenceAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:949:1: ( rule__Reference__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:949:2: rule__Reference__Alternatives
            {
            pushFollow(FOLLOW_rule__Reference__Alternatives_in_ruleReference1956);
            rule__Reference__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getReferenceAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleReference"


    // $ANTLR start "entryRuleParamRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:961:1: entryRuleParamRef : ruleParamRef EOF ;
    public final void entryRuleParamRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:962:1: ( ruleParamRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:963:1: ruleParamRef EOF
            {
             before(grammarAccess.getParamRefRule()); 
            pushFollow(FOLLOW_ruleParamRef_in_entryRuleParamRef1983);
            ruleParamRef();

            state._fsp--;

             after(grammarAccess.getParamRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleParamRef1990); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleParamRef"


    // $ANTLR start "ruleParamRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:970:1: ruleParamRef : ( ( rule__ParamRef__Group__0 ) ) ;
    public final void ruleParamRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:974:2: ( ( ( rule__ParamRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:975:1: ( ( rule__ParamRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:975:1: ( ( rule__ParamRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:976:1: ( rule__ParamRef__Group__0 )
            {
             before(grammarAccess.getParamRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:977:1: ( rule__ParamRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:977:2: rule__ParamRef__Group__0
            {
            pushFollow(FOLLOW_rule__ParamRef__Group__0_in_ruleParamRef2016);
            rule__ParamRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getParamRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleParamRef"


    // $ANTLR start "entryRuleNodeTypeRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:989:1: entryRuleNodeTypeRef : ruleNodeTypeRef EOF ;
    public final void entryRuleNodeTypeRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:990:1: ( ruleNodeTypeRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:991:1: ruleNodeTypeRef EOF
            {
             before(grammarAccess.getNodeTypeRefRule()); 
            pushFollow(FOLLOW_ruleNodeTypeRef_in_entryRuleNodeTypeRef2043);
            ruleNodeTypeRef();

            state._fsp--;

             after(grammarAccess.getNodeTypeRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleNodeTypeRef2050); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNodeTypeRef"


    // $ANTLR start "ruleNodeTypeRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:998:1: ruleNodeTypeRef : ( ( rule__NodeTypeRef__Group__0 ) ) ;
    public final void ruleNodeTypeRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1002:2: ( ( ( rule__NodeTypeRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1003:1: ( ( rule__NodeTypeRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1003:1: ( ( rule__NodeTypeRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1004:1: ( rule__NodeTypeRef__Group__0 )
            {
             before(grammarAccess.getNodeTypeRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1005:1: ( rule__NodeTypeRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1005:2: rule__NodeTypeRef__Group__0
            {
            pushFollow(FOLLOW_rule__NodeTypeRef__Group__0_in_ruleNodeTypeRef2076);
            rule__NodeTypeRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getNodeTypeRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNodeTypeRef"


    // $ANTLR start "entryRuleContextRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1017:1: entryRuleContextRef : ruleContextRef EOF ;
    public final void entryRuleContextRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1018:1: ( ruleContextRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1019:1: ruleContextRef EOF
            {
             before(grammarAccess.getContextRefRule()); 
            pushFollow(FOLLOW_ruleContextRef_in_entryRuleContextRef2103);
            ruleContextRef();

            state._fsp--;

             after(grammarAccess.getContextRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleContextRef2110); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleContextRef"


    // $ANTLR start "ruleContextRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1026:1: ruleContextRef : ( ( rule__ContextRef__Group__0 ) ) ;
    public final void ruleContextRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1030:2: ( ( ( rule__ContextRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1031:1: ( ( rule__ContextRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1031:1: ( ( rule__ContextRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1032:1: ( rule__ContextRef__Group__0 )
            {
             before(grammarAccess.getContextRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1033:1: ( rule__ContextRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1033:2: rule__ContextRef__Group__0
            {
            pushFollow(FOLLOW_rule__ContextRef__Group__0_in_ruleContextRef2136);
            rule__ContextRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getContextRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleContextRef"


    // $ANTLR start "entryRulePrimaryRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1045:1: entryRulePrimaryRef : rulePrimaryRef EOF ;
    public final void entryRulePrimaryRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1046:1: ( rulePrimaryRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1047:1: rulePrimaryRef EOF
            {
             before(grammarAccess.getPrimaryRefRule()); 
            pushFollow(FOLLOW_rulePrimaryRef_in_entryRulePrimaryRef2163);
            rulePrimaryRef();

            state._fsp--;

             after(grammarAccess.getPrimaryRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRulePrimaryRef2170); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePrimaryRef"


    // $ANTLR start "rulePrimaryRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1054:1: rulePrimaryRef : ( ( rule__PrimaryRef__Group__0 ) ) ;
    public final void rulePrimaryRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1058:2: ( ( ( rule__PrimaryRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1059:1: ( ( rule__PrimaryRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1059:1: ( ( rule__PrimaryRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1060:1: ( rule__PrimaryRef__Group__0 )
            {
             before(grammarAccess.getPrimaryRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1061:1: ( rule__PrimaryRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1061:2: rule__PrimaryRef__Group__0
            {
            pushFollow(FOLLOW_rule__PrimaryRef__Group__0_in_rulePrimaryRef2196);
            rule__PrimaryRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePrimaryRef"


    // $ANTLR start "entryRuleComponentRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1073:1: entryRuleComponentRef : ruleComponentRef EOF ;
    public final void entryRuleComponentRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1074:1: ( ruleComponentRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1075:1: ruleComponentRef EOF
            {
             before(grammarAccess.getComponentRefRule()); 
            pushFollow(FOLLOW_ruleComponentRef_in_entryRuleComponentRef2223);
            ruleComponentRef();

            state._fsp--;

             after(grammarAccess.getComponentRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleComponentRef2230); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComponentRef"


    // $ANTLR start "ruleComponentRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1082:1: ruleComponentRef : ( ( rule__ComponentRef__Group__0 ) ) ;
    public final void ruleComponentRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1086:2: ( ( ( rule__ComponentRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1087:1: ( ( rule__ComponentRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1087:1: ( ( rule__ComponentRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1088:1: ( rule__ComponentRef__Group__0 )
            {
             before(grammarAccess.getComponentRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1089:1: ( rule__ComponentRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1089:2: rule__ComponentRef__Group__0
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group__0_in_ruleComponentRef2256);
            rule__ComponentRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getComponentRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComponentRef"


    // $ANTLR start "entryRuleLeafReference"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1101:1: entryRuleLeafReference : ruleLeafReference EOF ;
    public final void entryRuleLeafReference() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1102:1: ( ruleLeafReference EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1103:1: ruleLeafReference EOF
            {
             before(grammarAccess.getLeafReferenceRule()); 
            pushFollow(FOLLOW_ruleLeafReference_in_entryRuleLeafReference2283);
            ruleLeafReference();

            state._fsp--;

             after(grammarAccess.getLeafReferenceRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLeafReference2290); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLeafReference"


    // $ANTLR start "ruleLeafReference"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1110:1: ruleLeafReference : ( ( rule__LeafReference__Alternatives ) ) ;
    public final void ruleLeafReference() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1114:2: ( ( ( rule__LeafReference__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1115:1: ( ( rule__LeafReference__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1115:1: ( ( rule__LeafReference__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1116:1: ( rule__LeafReference__Alternatives )
            {
             before(grammarAccess.getLeafReferenceAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1117:1: ( rule__LeafReference__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1117:2: rule__LeafReference__Alternatives
            {
            pushFollow(FOLLOW_rule__LeafReference__Alternatives_in_ruleLeafReference2316);
            rule__LeafReference__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getLeafReferenceAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLeafReference"


    // $ANTLR start "entryRuleResourceRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1129:1: entryRuleResourceRef : ruleResourceRef EOF ;
    public final void entryRuleResourceRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1130:1: ( ruleResourceRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1131:1: ruleResourceRef EOF
            {
             before(grammarAccess.getResourceRefRule()); 
            pushFollow(FOLLOW_ruleResourceRef_in_entryRuleResourceRef2343);
            ruleResourceRef();

            state._fsp--;

             after(grammarAccess.getResourceRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleResourceRef2350); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleResourceRef"


    // $ANTLR start "ruleResourceRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1138:1: ruleResourceRef : ( ( rule__ResourceRef__Group__0 ) ) ;
    public final void ruleResourceRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1142:2: ( ( ( rule__ResourceRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1143:1: ( ( rule__ResourceRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1143:1: ( ( rule__ResourceRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1144:1: ( rule__ResourceRef__Group__0 )
            {
             before(grammarAccess.getResourceRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1145:1: ( rule__ResourceRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1145:2: rule__ResourceRef__Group__0
            {
            pushFollow(FOLLOW_rule__ResourceRef__Group__0_in_ruleResourceRef2376);
            rule__ResourceRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getResourceRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleResourceRef"


    // $ANTLR start "entryRuleStatusRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1157:1: entryRuleStatusRef : ruleStatusRef EOF ;
    public final void entryRuleStatusRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1158:1: ( ruleStatusRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1159:1: ruleStatusRef EOF
            {
             before(grammarAccess.getStatusRefRule()); 
            pushFollow(FOLLOW_ruleStatusRef_in_entryRuleStatusRef2403);
            ruleStatusRef();

            state._fsp--;

             after(grammarAccess.getStatusRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleStatusRef2410); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStatusRef"


    // $ANTLR start "ruleStatusRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1166:1: ruleStatusRef : ( ( rule__StatusRef__Group__0 ) ) ;
    public final void ruleStatusRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1170:2: ( ( ( rule__StatusRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1171:1: ( ( rule__StatusRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1171:1: ( ( rule__StatusRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1172:1: ( rule__StatusRef__Group__0 )
            {
             before(grammarAccess.getStatusRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1173:1: ( rule__StatusRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1173:2: rule__StatusRef__Group__0
            {
            pushFollow(FOLLOW_rule__StatusRef__Group__0_in_ruleStatusRef2436);
            rule__StatusRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getStatusRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStatusRef"


    // $ANTLR start "entryRuleRangeRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1185:1: entryRuleRangeRef : ruleRangeRef EOF ;
    public final void entryRuleRangeRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1186:1: ( ruleRangeRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1187:1: ruleRangeRef EOF
            {
             before(grammarAccess.getRangeRefRule()); 
            pushFollow(FOLLOW_ruleRangeRef_in_entryRuleRangeRef2463);
            ruleRangeRef();

            state._fsp--;

             after(grammarAccess.getRangeRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleRangeRef2470); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRangeRef"


    // $ANTLR start "ruleRangeRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1194:1: ruleRangeRef : ( ( rule__RangeRef__Group__0 ) ) ;
    public final void ruleRangeRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1198:2: ( ( ( rule__RangeRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1199:1: ( ( rule__RangeRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1199:1: ( ( rule__RangeRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1200:1: ( rule__RangeRef__Group__0 )
            {
             before(grammarAccess.getRangeRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1201:1: ( rule__RangeRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1201:2: rule__RangeRef__Group__0
            {
            pushFollow(FOLLOW_rule__RangeRef__Group__0_in_ruleRangeRef2496);
            rule__RangeRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getRangeRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRangeRef"


    // $ANTLR start "entryRuleInterval"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1213:1: entryRuleInterval : ruleInterval EOF ;
    public final void entryRuleInterval() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1214:1: ( ruleInterval EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1215:1: ruleInterval EOF
            {
             before(grammarAccess.getIntervalRule()); 
            pushFollow(FOLLOW_ruleInterval_in_entryRuleInterval2523);
            ruleInterval();

            state._fsp--;

             after(grammarAccess.getIntervalRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleInterval2530); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInterval"


    // $ANTLR start "ruleInterval"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1222:1: ruleInterval : ( ( rule__Interval__Alternatives ) ) ;
    public final void ruleInterval() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1226:2: ( ( ( rule__Interval__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1227:1: ( ( rule__Interval__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1227:1: ( ( rule__Interval__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1228:1: ( rule__Interval__Alternatives )
            {
             before(grammarAccess.getIntervalAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1229:1: ( rule__Interval__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1229:2: rule__Interval__Alternatives
            {
            pushFollow(FOLLOW_rule__Interval__Alternatives_in_ruleInterval2556);
            rule__Interval__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getIntervalAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInterval"


    // $ANTLR start "entryRuleLinkRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1241:1: entryRuleLinkRef : ruleLinkRef EOF ;
    public final void entryRuleLinkRef() throws RecognitionException {
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1242:1: ( ruleLinkRef EOF )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1243:1: ruleLinkRef EOF
            {
             before(grammarAccess.getLinkRefRule()); 
            pushFollow(FOLLOW_ruleLinkRef_in_entryRuleLinkRef2583);
            ruleLinkRef();

            state._fsp--;

             after(grammarAccess.getLinkRefRule()); 
            match(input,EOF,FOLLOW_EOF_in_entryRuleLinkRef2590); 

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLinkRef"


    // $ANTLR start "ruleLinkRef"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1250:1: ruleLinkRef : ( ( rule__LinkRef__Group__0 ) ) ;
    public final void ruleLinkRef() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1254:2: ( ( ( rule__LinkRef__Group__0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1255:1: ( ( rule__LinkRef__Group__0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1255:1: ( ( rule__LinkRef__Group__0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1256:1: ( rule__LinkRef__Group__0 )
            {
             before(grammarAccess.getLinkRefAccess().getGroup()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1257:1: ( rule__LinkRef__Group__0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1257:2: rule__LinkRef__Group__0
            {
            pushFollow(FOLLOW_rule__LinkRef__Group__0_in_ruleLinkRef2616);
            rule__LinkRef__Group__0();

            state._fsp--;


            }

             after(grammarAccess.getLinkRefAccess().getGroup()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLinkRef"


    // $ANTLR start "ruleNativeFunction"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1270:1: ruleNativeFunction : ( ( rule__NativeFunction__Alternatives ) ) ;
    public final void ruleNativeFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1274:1: ( ( ( rule__NativeFunction__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1275:1: ( ( rule__NativeFunction__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1275:1: ( ( rule__NativeFunction__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1276:1: ( rule__NativeFunction__Alternatives )
            {
             before(grammarAccess.getNativeFunctionAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1277:1: ( rule__NativeFunction__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1277:2: rule__NativeFunction__Alternatives
            {
            pushFollow(FOLLOW_rule__NativeFunction__Alternatives_in_ruleNativeFunction2653);
            rule__NativeFunction__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getNativeFunctionAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNativeFunction"


    // $ANTLR start "ruleIntervalKind"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1289:1: ruleIntervalKind : ( ( rule__IntervalKind__Alternatives ) ) ;
    public final void ruleIntervalKind() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1293:1: ( ( ( rule__IntervalKind__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1294:1: ( ( rule__IntervalKind__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1294:1: ( ( rule__IntervalKind__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1295:1: ( rule__IntervalKind__Alternatives )
            {
             before(grammarAccess.getIntervalKindAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1296:1: ( rule__IntervalKind__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1296:2: rule__IntervalKind__Alternatives
            {
            pushFollow(FOLLOW_rule__IntervalKind__Alternatives_in_ruleIntervalKind2689);
            rule__IntervalKind__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getIntervalKindAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntervalKind"


    // $ANTLR start "ruleToleranceLevel"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1308:1: ruleToleranceLevel : ( ( rule__ToleranceLevel__Alternatives ) ) ;
    public final void ruleToleranceLevel() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1312:1: ( ( ( rule__ToleranceLevel__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1313:1: ( ( rule__ToleranceLevel__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1313:1: ( ( rule__ToleranceLevel__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1314:1: ( rule__ToleranceLevel__Alternatives )
            {
             before(grammarAccess.getToleranceLevelAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1315:1: ( rule__ToleranceLevel__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1315:2: rule__ToleranceLevel__Alternatives
            {
            pushFollow(FOLLOW_rule__ToleranceLevel__Alternatives_in_ruleToleranceLevel2725);
            rule__ToleranceLevel__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getToleranceLevelAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleToleranceLevel"


    // $ANTLR start "ruleValueRange"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1327:1: ruleValueRange : ( ( rule__ValueRange__Alternatives ) ) ;
    public final void ruleValueRange() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1331:1: ( ( ( rule__ValueRange__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1332:1: ( ( rule__ValueRange__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1332:1: ( ( rule__ValueRange__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1333:1: ( rule__ValueRange__Alternatives )
            {
             before(grammarAccess.getValueRangeAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1334:1: ( rule__ValueRange__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1334:2: rule__ValueRange__Alternatives
            {
            pushFollow(FOLLOW_rule__ValueRange__Alternatives_in_ruleValueRange2761);
            rule__ValueRange__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getValueRangeAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValueRange"


    // $ANTLR start "ruleValueKind"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1346:1: ruleValueKind : ( ( rule__ValueKind__Alternatives ) ) ;
    public final void ruleValueKind() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1350:1: ( ( ( rule__ValueKind__Alternatives ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1351:1: ( ( rule__ValueKind__Alternatives ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1351:1: ( ( rule__ValueKind__Alternatives ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1352:1: ( rule__ValueKind__Alternatives )
            {
             before(grammarAccess.getValueKindAccess().getAlternatives()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1353:1: ( rule__ValueKind__Alternatives )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1353:2: rule__ValueKind__Alternatives
            {
            pushFollow(FOLLOW_rule__ValueKind__Alternatives_in_ruleValueKind2797);
            rule__ValueKind__Alternatives();

            state._fsp--;


            }

             after(grammarAccess.getValueKindAccess().getAlternatives()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleValueKind"


    // $ANTLR start "rule__Mod__Alternatives_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1364:1: rule__Mod__Alternatives_2 : ( ( ( ( rule__Mod__FunctionsAssignment_2_0 ) ) ( ( rule__Mod__FunctionsAssignment_2_0 )* ) ) | ( ( ( rule__Mod__StatementsAssignment_2_1 ) ) ( ( rule__Mod__StatementsAssignment_2_1 )* ) ) );
    public final void rule__Mod__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1368:1: ( ( ( ( rule__Mod__FunctionsAssignment_2_0 ) ) ( ( rule__Mod__FunctionsAssignment_2_0 )* ) ) | ( ( ( rule__Mod__StatementsAssignment_2_1 ) ) ( ( rule__Mod__StatementsAssignment_2_1 )* ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==46) ) {
                alt3=1;
            }
            else if ( (LA3_0==RULE_ID||LA3_0==RULE_NUMBER||(LA3_0>=12 && LA3_0<=14)||LA3_0==47||LA3_0==50||(LA3_0>=53 && LA3_0<=54)||(LA3_0>=56 && LA3_0<=57)||LA3_0==71||(LA3_0>=74 && LA3_0<=76)||(LA3_0>=82 && LA3_0<=83)) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1369:1: ( ( ( rule__Mod__FunctionsAssignment_2_0 ) ) ( ( rule__Mod__FunctionsAssignment_2_0 )* ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1369:1: ( ( ( rule__Mod__FunctionsAssignment_2_0 ) ) ( ( rule__Mod__FunctionsAssignment_2_0 )* ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1370:1: ( ( rule__Mod__FunctionsAssignment_2_0 ) ) ( ( rule__Mod__FunctionsAssignment_2_0 )* )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1370:1: ( ( rule__Mod__FunctionsAssignment_2_0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1371:1: ( rule__Mod__FunctionsAssignment_2_0 )
                    {
                     before(grammarAccess.getModAccess().getFunctionsAssignment_2_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1372:1: ( rule__Mod__FunctionsAssignment_2_0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1372:2: rule__Mod__FunctionsAssignment_2_0
                    {
                    pushFollow(FOLLOW_rule__Mod__FunctionsAssignment_2_0_in_rule__Mod__Alternatives_22834);
                    rule__Mod__FunctionsAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getModAccess().getFunctionsAssignment_2_0()); 

                    }

                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1375:1: ( ( rule__Mod__FunctionsAssignment_2_0 )* )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1376:1: ( rule__Mod__FunctionsAssignment_2_0 )*
                    {
                     before(grammarAccess.getModAccess().getFunctionsAssignment_2_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1377:1: ( rule__Mod__FunctionsAssignment_2_0 )*
                    loop1:
                    do {
                        int alt1=2;
                        int LA1_0 = input.LA(1);

                        if ( (LA1_0==46) ) {
                            alt1=1;
                        }


                        switch (alt1) {
                    	case 1 :
                    	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1377:2: rule__Mod__FunctionsAssignment_2_0
                    	    {
                    	    pushFollow(FOLLOW_rule__Mod__FunctionsAssignment_2_0_in_rule__Mod__Alternatives_22846);
                    	    rule__Mod__FunctionsAssignment_2_0();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop1;
                        }
                    } while (true);

                     after(grammarAccess.getModAccess().getFunctionsAssignment_2_0()); 

                    }


                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1382:6: ( ( ( rule__Mod__StatementsAssignment_2_1 ) ) ( ( rule__Mod__StatementsAssignment_2_1 )* ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1382:6: ( ( ( rule__Mod__StatementsAssignment_2_1 ) ) ( ( rule__Mod__StatementsAssignment_2_1 )* ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1383:1: ( ( rule__Mod__StatementsAssignment_2_1 ) ) ( ( rule__Mod__StatementsAssignment_2_1 )* )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1383:1: ( ( rule__Mod__StatementsAssignment_2_1 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1384:1: ( rule__Mod__StatementsAssignment_2_1 )
                    {
                     before(grammarAccess.getModAccess().getStatementsAssignment_2_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1385:1: ( rule__Mod__StatementsAssignment_2_1 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1385:2: rule__Mod__StatementsAssignment_2_1
                    {
                    pushFollow(FOLLOW_rule__Mod__StatementsAssignment_2_1_in_rule__Mod__Alternatives_22869);
                    rule__Mod__StatementsAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getModAccess().getStatementsAssignment_2_1()); 

                    }

                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1388:1: ( ( rule__Mod__StatementsAssignment_2_1 )* )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1389:1: ( rule__Mod__StatementsAssignment_2_1 )*
                    {
                     before(grammarAccess.getModAccess().getStatementsAssignment_2_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1390:1: ( rule__Mod__StatementsAssignment_2_1 )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ID||LA2_0==RULE_NUMBER||(LA2_0>=12 && LA2_0<=14)||LA2_0==47||LA2_0==50||(LA2_0>=53 && LA2_0<=54)||(LA2_0>=56 && LA2_0<=57)||LA2_0==71||(LA2_0>=74 && LA2_0<=76)||(LA2_0>=82 && LA2_0<=83)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1390:2: rule__Mod__StatementsAssignment_2_1
                    	    {
                    	    pushFollow(FOLLOW_rule__Mod__StatementsAssignment_2_1_in_rule__Mod__Alternatives_22881);
                    	    rule__Mod__StatementsAssignment_2_1();

                    	    state._fsp--;


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                     after(grammarAccess.getModAccess().getStatementsAssignment_2_1()); 

                    }


                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Alternatives_2"


    // $ANTLR start "rule__Statement__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1401:1: rule__Statement__Alternatives : ( ( ( rule__Statement__Group_0__0 ) ) | ( ruleIfStatement ) | ( ruleWhileStatement ) | ( ruleBlock ) );
    public final void rule__Statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1405:1: ( ( ( rule__Statement__Group_0__0 ) ) | ( ruleIfStatement ) | ( ruleWhileStatement ) | ( ruleBlock ) )
            int alt4=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case RULE_NUMBER:
            case 12:
            case 13:
            case 14:
            case 47:
            case 53:
            case 57:
            case 71:
            case 74:
            case 75:
            case 76:
            case 82:
            case 83:
                {
                alt4=1;
                }
                break;
            case 54:
                {
                alt4=2;
                }
                break;
            case 56:
                {
                alt4=3;
                }
                break;
            case 50:
                {
                alt4=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1406:1: ( ( rule__Statement__Group_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1406:1: ( ( rule__Statement__Group_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1407:1: ( rule__Statement__Group_0__0 )
                    {
                     before(grammarAccess.getStatementAccess().getGroup_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1408:1: ( rule__Statement__Group_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1408:2: rule__Statement__Group_0__0
                    {
                    pushFollow(FOLLOW_rule__Statement__Group_0__0_in_rule__Statement__Alternatives2918);
                    rule__Statement__Group_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getStatementAccess().getGroup_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1412:6: ( ruleIfStatement )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1412:6: ( ruleIfStatement )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1413:1: ruleIfStatement
                    {
                     before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleIfStatement_in_rule__Statement__Alternatives2936);
                    ruleIfStatement();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1418:6: ( ruleWhileStatement )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1418:6: ( ruleWhileStatement )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1419:1: ruleWhileStatement
                    {
                     before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleWhileStatement_in_rule__Statement__Alternatives2953);
                    ruleWhileStatement();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1424:6: ( ruleBlock )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1424:6: ( ruleBlock )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1425:1: ruleBlock
                    {
                     before(grammarAccess.getStatementAccess().getBlockParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleBlock_in_rule__Statement__Alternatives2970);
                    ruleBlock();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getBlockParserRuleCall_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Alternatives"


    // $ANTLR start "rule__Statement__Alternatives_0_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1435:1: rule__Statement__Alternatives_0_0 : ( ( ruleVariableStatement ) | ( ruleAssignmentStatement ) | ( rulePlusAssignmentStatement ) | ( ruleReferenceAssignmentStatement ) | ( ( rule__Statement__ExpressionAssignment_0_0_4 ) ) | ( ruleReturnStatement ) );
    public final void rule__Statement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1439:1: ( ( ruleVariableStatement ) | ( ruleAssignmentStatement ) | ( rulePlusAssignmentStatement ) | ( ruleReferenceAssignmentStatement ) | ( ( rule__Statement__ExpressionAssignment_0_0_4 ) ) | ( ruleReturnStatement ) )
            int alt5=6;
            alt5 = dfa5.predict(input);
            switch (alt5) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1440:1: ( ruleVariableStatement )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1440:1: ( ruleVariableStatement )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1441:1: ruleVariableStatement
                    {
                     before(grammarAccess.getStatementAccess().getVariableStatementParserRuleCall_0_0_0()); 
                    pushFollow(FOLLOW_ruleVariableStatement_in_rule__Statement__Alternatives_0_03002);
                    ruleVariableStatement();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getVariableStatementParserRuleCall_0_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1446:6: ( ruleAssignmentStatement )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1446:6: ( ruleAssignmentStatement )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1447:1: ruleAssignmentStatement
                    {
                     before(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0_0_1()); 
                    pushFollow(FOLLOW_ruleAssignmentStatement_in_rule__Statement__Alternatives_0_03019);
                    ruleAssignmentStatement();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getAssignmentStatementParserRuleCall_0_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1452:6: ( rulePlusAssignmentStatement )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1452:6: ( rulePlusAssignmentStatement )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1453:1: rulePlusAssignmentStatement
                    {
                     before(grammarAccess.getStatementAccess().getPlusAssignmentStatementParserRuleCall_0_0_2()); 
                    pushFollow(FOLLOW_rulePlusAssignmentStatement_in_rule__Statement__Alternatives_0_03036);
                    rulePlusAssignmentStatement();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getPlusAssignmentStatementParserRuleCall_0_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1458:6: ( ruleReferenceAssignmentStatement )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1458:6: ( ruleReferenceAssignmentStatement )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1459:1: ruleReferenceAssignmentStatement
                    {
                     before(grammarAccess.getStatementAccess().getReferenceAssignmentStatementParserRuleCall_0_0_3()); 
                    pushFollow(FOLLOW_ruleReferenceAssignmentStatement_in_rule__Statement__Alternatives_0_03053);
                    ruleReferenceAssignmentStatement();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getReferenceAssignmentStatementParserRuleCall_0_0_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1464:6: ( ( rule__Statement__ExpressionAssignment_0_0_4 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1464:6: ( ( rule__Statement__ExpressionAssignment_0_0_4 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1465:1: ( rule__Statement__ExpressionAssignment_0_0_4 )
                    {
                     before(grammarAccess.getStatementAccess().getExpressionAssignment_0_0_4()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1466:1: ( rule__Statement__ExpressionAssignment_0_0_4 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1466:2: rule__Statement__ExpressionAssignment_0_0_4
                    {
                    pushFollow(FOLLOW_rule__Statement__ExpressionAssignment_0_0_4_in_rule__Statement__Alternatives_0_03070);
                    rule__Statement__ExpressionAssignment_0_0_4();

                    state._fsp--;


                    }

                     after(grammarAccess.getStatementAccess().getExpressionAssignment_0_0_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1470:6: ( ruleReturnStatement )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1470:6: ( ruleReturnStatement )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1471:1: ruleReturnStatement
                    {
                     before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_0_0_5()); 
                    pushFollow(FOLLOW_ruleReturnStatement_in_rule__Statement__Alternatives_0_03088);
                    ruleReturnStatement();

                    state._fsp--;

                     after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_0_0_5()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Alternatives_0_0"


    // $ANTLR start "rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1481:1: rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0 : ( ( ruleContextRef ) | ( ruleNodeTypeRef ) );
    public final void rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1485:1: ( ( ruleContextRef ) | ( ruleNodeTypeRef ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==76) ) {
                alt6=1;
            }
            else if ( (LA6_0==75) ) {
                alt6=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1486:1: ( ruleContextRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1486:1: ( ruleContextRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1487:1: ruleContextRef
                    {
                     before(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefContextRefParserRuleCall_1_0_0()); 
                    pushFollow(FOLLOW_ruleContextRef_in_rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_03120);
                    ruleContextRef();

                    state._fsp--;

                     after(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefContextRefParserRuleCall_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1492:6: ( ruleNodeTypeRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1492:6: ( ruleNodeTypeRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1493:1: ruleNodeTypeRef
                    {
                     before(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefNodeTypeRefParserRuleCall_1_0_1()); 
                    pushFollow(FOLLOW_ruleNodeTypeRef_in_rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_03137);
                    ruleNodeTypeRef();

                    state._fsp--;

                     after(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefNodeTypeRefParserRuleCall_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0"


    // $ANTLR start "rule__Logical__Alternatives_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1503:1: rule__Logical__Alternatives_1_0 : ( ( ( rule__Logical__Group_1_0_0__0 ) ) | ( ( rule__Logical__Group_1_0_1__0 ) ) );
    public final void rule__Logical__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1507:1: ( ( ( rule__Logical__Group_1_0_0__0 ) ) | ( ( rule__Logical__Group_1_0_1__0 ) ) )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==60) ) {
                alt7=1;
            }
            else if ( (LA7_0==61) ) {
                alt7=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1508:1: ( ( rule__Logical__Group_1_0_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1508:1: ( ( rule__Logical__Group_1_0_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1509:1: ( rule__Logical__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getLogicalAccess().getGroup_1_0_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1510:1: ( rule__Logical__Group_1_0_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1510:2: rule__Logical__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_rule__Logical__Group_1_0_0__0_in_rule__Logical__Alternatives_1_03169);
                    rule__Logical__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLogicalAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1514:6: ( ( rule__Logical__Group_1_0_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1514:6: ( ( rule__Logical__Group_1_0_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1515:1: ( rule__Logical__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getLogicalAccess().getGroup_1_0_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1516:1: ( rule__Logical__Group_1_0_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1516:2: rule__Logical__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_rule__Logical__Group_1_0_1__0_in_rule__Logical__Alternatives_1_03187);
                    rule__Logical__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLogicalAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Alternatives_1_0"


    // $ANTLR start "rule__Equality__Alternatives_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1525:1: rule__Equality__Alternatives_1_0 : ( ( ( rule__Equality__Group_1_0_0__0 ) ) | ( ( rule__Equality__Group_1_0_1__0 ) ) );
    public final void rule__Equality__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1529:1: ( ( ( rule__Equality__Group_1_0_0__0 ) ) | ( ( rule__Equality__Group_1_0_1__0 ) ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==62) ) {
                alt8=1;
            }
            else if ( (LA8_0==63) ) {
                alt8=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1530:1: ( ( rule__Equality__Group_1_0_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1530:1: ( ( rule__Equality__Group_1_0_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1531:1: ( rule__Equality__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getEqualityAccess().getGroup_1_0_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1532:1: ( rule__Equality__Group_1_0_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1532:2: rule__Equality__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_rule__Equality__Group_1_0_0__0_in_rule__Equality__Alternatives_1_03220);
                    rule__Equality__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getEqualityAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1536:6: ( ( rule__Equality__Group_1_0_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1536:6: ( ( rule__Equality__Group_1_0_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1537:1: ( rule__Equality__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getEqualityAccess().getGroup_1_0_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1538:1: ( rule__Equality__Group_1_0_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1538:2: rule__Equality__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_rule__Equality__Group_1_0_1__0_in_rule__Equality__Alternatives_1_03238);
                    rule__Equality__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getEqualityAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Alternatives_1_0"


    // $ANTLR start "rule__Comparison__Alternatives_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1547:1: rule__Comparison__Alternatives_1_0 : ( ( ( rule__Comparison__Group_1_0_0__0 ) ) | ( ( rule__Comparison__Group_1_0_1__0 ) ) | ( ( rule__Comparison__Group_1_0_2__0 ) ) | ( ( rule__Comparison__Group_1_0_3__0 ) ) );
    public final void rule__Comparison__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1551:1: ( ( ( rule__Comparison__Group_1_0_0__0 ) ) | ( ( rule__Comparison__Group_1_0_1__0 ) ) | ( ( rule__Comparison__Group_1_0_2__0 ) ) | ( ( rule__Comparison__Group_1_0_3__0 ) ) )
            int alt9=4;
            switch ( input.LA(1) ) {
            case 64:
                {
                alt9=1;
                }
                break;
            case 65:
                {
                alt9=2;
                }
                break;
            case 66:
                {
                alt9=3;
                }
                break;
            case 67:
                {
                alt9=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1552:1: ( ( rule__Comparison__Group_1_0_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1552:1: ( ( rule__Comparison__Group_1_0_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1553:1: ( rule__Comparison__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getComparisonAccess().getGroup_1_0_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1554:1: ( rule__Comparison__Group_1_0_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1554:2: rule__Comparison__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_rule__Comparison__Group_1_0_0__0_in_rule__Comparison__Alternatives_1_03271);
                    rule__Comparison__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getComparisonAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1558:6: ( ( rule__Comparison__Group_1_0_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1558:6: ( ( rule__Comparison__Group_1_0_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1559:1: ( rule__Comparison__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getComparisonAccess().getGroup_1_0_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1560:1: ( rule__Comparison__Group_1_0_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1560:2: rule__Comparison__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_rule__Comparison__Group_1_0_1__0_in_rule__Comparison__Alternatives_1_03289);
                    rule__Comparison__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getComparisonAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1564:6: ( ( rule__Comparison__Group_1_0_2__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1564:6: ( ( rule__Comparison__Group_1_0_2__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1565:1: ( rule__Comparison__Group_1_0_2__0 )
                    {
                     before(grammarAccess.getComparisonAccess().getGroup_1_0_2()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1566:1: ( rule__Comparison__Group_1_0_2__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1566:2: rule__Comparison__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_rule__Comparison__Group_1_0_2__0_in_rule__Comparison__Alternatives_1_03307);
                    rule__Comparison__Group_1_0_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getComparisonAccess().getGroup_1_0_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1570:6: ( ( rule__Comparison__Group_1_0_3__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1570:6: ( ( rule__Comparison__Group_1_0_3__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1571:1: ( rule__Comparison__Group_1_0_3__0 )
                    {
                     before(grammarAccess.getComparisonAccess().getGroup_1_0_3()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1572:1: ( rule__Comparison__Group_1_0_3__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1572:2: rule__Comparison__Group_1_0_3__0
                    {
                    pushFollow(FOLLOW_rule__Comparison__Group_1_0_3__0_in_rule__Comparison__Alternatives_1_03325);
                    rule__Comparison__Group_1_0_3__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getComparisonAccess().getGroup_1_0_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Alternatives_1_0"


    // $ANTLR start "rule__Addition__Alternatives_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1581:1: rule__Addition__Alternatives_1_0 : ( ( ( rule__Addition__Group_1_0_0__0 ) ) | ( ( rule__Addition__Group_1_0_1__0 ) ) );
    public final void rule__Addition__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1585:1: ( ( ( rule__Addition__Group_1_0_0__0 ) ) | ( ( rule__Addition__Group_1_0_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==13) ) {
                alt10=1;
            }
            else if ( (LA10_0==12) ) {
                alt10=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1586:1: ( ( rule__Addition__Group_1_0_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1586:1: ( ( rule__Addition__Group_1_0_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1587:1: ( rule__Addition__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getAdditionAccess().getGroup_1_0_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1588:1: ( rule__Addition__Group_1_0_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1588:2: rule__Addition__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_rule__Addition__Group_1_0_0__0_in_rule__Addition__Alternatives_1_03358);
                    rule__Addition__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAdditionAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1592:6: ( ( rule__Addition__Group_1_0_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1592:6: ( ( rule__Addition__Group_1_0_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1593:1: ( rule__Addition__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getAdditionAccess().getGroup_1_0_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1594:1: ( rule__Addition__Group_1_0_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1594:2: rule__Addition__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_rule__Addition__Group_1_0_1__0_in_rule__Addition__Alternatives_1_03376);
                    rule__Addition__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getAdditionAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Alternatives_1_0"


    // $ANTLR start "rule__Multiplication__Alternatives_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1603:1: rule__Multiplication__Alternatives_1_0 : ( ( ( rule__Multiplication__Group_1_0_0__0 ) ) | ( ( rule__Multiplication__Group_1_0_1__0 ) ) | ( ( rule__Multiplication__Group_1_0_2__0 ) ) );
    public final void rule__Multiplication__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1607:1: ( ( ( rule__Multiplication__Group_1_0_0__0 ) ) | ( ( rule__Multiplication__Group_1_0_1__0 ) ) | ( ( rule__Multiplication__Group_1_0_2__0 ) ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case 68:
                {
                alt11=1;
                }
                break;
            case 69:
                {
                alt11=2;
                }
                break;
            case 70:
                {
                alt11=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1608:1: ( ( rule__Multiplication__Group_1_0_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1608:1: ( ( rule__Multiplication__Group_1_0_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1609:1: ( rule__Multiplication__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1610:1: ( rule__Multiplication__Group_1_0_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1610:2: rule__Multiplication__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_rule__Multiplication__Group_1_0_0__0_in_rule__Multiplication__Alternatives_1_03409);
                    rule__Multiplication__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getMultiplicationAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1614:6: ( ( rule__Multiplication__Group_1_0_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1614:6: ( ( rule__Multiplication__Group_1_0_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1615:1: ( rule__Multiplication__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1616:1: ( rule__Multiplication__Group_1_0_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1616:2: rule__Multiplication__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_rule__Multiplication__Group_1_0_1__0_in_rule__Multiplication__Alternatives_1_03427);
                    rule__Multiplication__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getMultiplicationAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1620:6: ( ( rule__Multiplication__Group_1_0_2__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1620:6: ( ( rule__Multiplication__Group_1_0_2__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1621:1: ( rule__Multiplication__Group_1_0_2__0 )
                    {
                     before(grammarAccess.getMultiplicationAccess().getGroup_1_0_2()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1622:1: ( rule__Multiplication__Group_1_0_2__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1622:2: rule__Multiplication__Group_1_0_2__0
                    {
                    pushFollow(FOLLOW_rule__Multiplication__Group_1_0_2__0_in_rule__Multiplication__Alternatives_1_03445);
                    rule__Multiplication__Group_1_0_2__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getMultiplicationAccess().getGroup_1_0_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Alternatives_1_0"


    // $ANTLR start "rule__Unary__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1631:1: rule__Unary__Alternatives : ( ( rulePrimaryExpression ) | ( ( rule__Unary__Group_1__0 ) ) );
    public final void rule__Unary__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1635:1: ( ( rulePrimaryExpression ) | ( ( rule__Unary__Group_1__0 ) ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_ID||LA12_0==RULE_NUMBER||LA12_0==14||LA12_0==47||LA12_0==71||(LA12_0>=74 && LA12_0<=76)||LA12_0==83) ) {
                alt12=1;
            }
            else if ( ((LA12_0>=12 && LA12_0<=13)||LA12_0==82) ) {
                alt12=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1636:1: ( rulePrimaryExpression )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1636:1: ( rulePrimaryExpression )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1637:1: rulePrimaryExpression
                    {
                     before(grammarAccess.getUnaryAccess().getPrimaryExpressionParserRuleCall_0()); 
                    pushFollow(FOLLOW_rulePrimaryExpression_in_rule__Unary__Alternatives3478);
                    rulePrimaryExpression();

                    state._fsp--;

                     after(grammarAccess.getUnaryAccess().getPrimaryExpressionParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1642:6: ( ( rule__Unary__Group_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1642:6: ( ( rule__Unary__Group_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1643:1: ( rule__Unary__Group_1__0 )
                    {
                     before(grammarAccess.getUnaryAccess().getGroup_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1644:1: ( rule__Unary__Group_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1644:2: rule__Unary__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__Unary__Group_1__0_in_rule__Unary__Alternatives3495);
                    rule__Unary__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getUnaryAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Alternatives"


    // $ANTLR start "rule__Unary__Alternatives_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1653:1: rule__Unary__Alternatives_1_0 : ( ( ( rule__Unary__Group_1_0_0__0 ) ) | ( ( rule__Unary__Group_1_0_1__0 ) ) );
    public final void rule__Unary__Alternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1657:1: ( ( ( rule__Unary__Group_1_0_0__0 ) ) | ( ( rule__Unary__Group_1_0_1__0 ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==82) ) {
                alt13=1;
            }
            else if ( ((LA13_0>=12 && LA13_0<=13)) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1658:1: ( ( rule__Unary__Group_1_0_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1658:1: ( ( rule__Unary__Group_1_0_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1659:1: ( rule__Unary__Group_1_0_0__0 )
                    {
                     before(grammarAccess.getUnaryAccess().getGroup_1_0_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1660:1: ( rule__Unary__Group_1_0_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1660:2: rule__Unary__Group_1_0_0__0
                    {
                    pushFollow(FOLLOW_rule__Unary__Group_1_0_0__0_in_rule__Unary__Alternatives_1_03528);
                    rule__Unary__Group_1_0_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getUnaryAccess().getGroup_1_0_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1664:6: ( ( rule__Unary__Group_1_0_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1664:6: ( ( rule__Unary__Group_1_0_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1665:1: ( rule__Unary__Group_1_0_1__0 )
                    {
                     before(grammarAccess.getUnaryAccess().getGroup_1_0_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1666:1: ( rule__Unary__Group_1_0_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1666:2: rule__Unary__Group_1_0_1__0
                    {
                    pushFollow(FOLLOW_rule__Unary__Group_1_0_1__0_in_rule__Unary__Alternatives_1_03546);
                    rule__Unary__Group_1_0_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getUnaryAccess().getGroup_1_0_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Alternatives_1_0"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1675:1: rule__UnaryOperator__Alternatives : ( ( '-' ) | ( '+' ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1679:1: ( ( '-' ) | ( '+' ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==12) ) {
                alt14=1;
            }
            else if ( (LA14_0==13) ) {
                alt14=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1680:1: ( '-' )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1680:1: ( '-' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1681:1: '-'
                    {
                     before(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_0()); 
                    match(input,12,FOLLOW_12_in_rule__UnaryOperator__Alternatives3580); 
                     after(grammarAccess.getUnaryOperatorAccess().getHyphenMinusKeyword_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1688:6: ( '+' )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1688:6: ( '+' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1689:1: '+'
                    {
                     before(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_1()); 
                    match(input,13,FOLLOW_13_in_rule__UnaryOperator__Alternatives3600); 
                     after(grammarAccess.getUnaryOperatorAccess().getPlusSignKeyword_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__PrimaryExpression__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1701:1: rule__PrimaryExpression__Alternatives : ( ( ruleLiteral ) | ( ruleRange ) | ( ruleNativeExpression ) | ( ruleReference ) | ( ruleFunctionCall ) | ( ruleIndexedCall ) | ( ruleParenthesizedExpression ) );
    public final void rule__PrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1705:1: ( ( ruleLiteral ) | ( ruleRange ) | ( ruleNativeExpression ) | ( ruleReference ) | ( ruleFunctionCall ) | ( ruleIndexedCall ) | ( ruleParenthesizedExpression ) )
            int alt15=7;
            alt15 = dfa15.predict(input);
            switch (alt15) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1706:1: ( ruleLiteral )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1706:1: ( ruleLiteral )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1707:1: ruleLiteral
                    {
                     before(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleLiteral_in_rule__PrimaryExpression__Alternatives3634);
                    ruleLiteral();

                    state._fsp--;

                     after(grammarAccess.getPrimaryExpressionAccess().getLiteralParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1712:6: ( ruleRange )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1712:6: ( ruleRange )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1713:1: ruleRange
                    {
                     before(grammarAccess.getPrimaryExpressionAccess().getRangeParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleRange_in_rule__PrimaryExpression__Alternatives3651);
                    ruleRange();

                    state._fsp--;

                     after(grammarAccess.getPrimaryExpressionAccess().getRangeParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1718:6: ( ruleNativeExpression )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1718:6: ( ruleNativeExpression )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1719:1: ruleNativeExpression
                    {
                     before(grammarAccess.getPrimaryExpressionAccess().getNativeExpressionParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleNativeExpression_in_rule__PrimaryExpression__Alternatives3668);
                    ruleNativeExpression();

                    state._fsp--;

                     after(grammarAccess.getPrimaryExpressionAccess().getNativeExpressionParserRuleCall_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1724:6: ( ruleReference )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1724:6: ( ruleReference )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1725:1: ruleReference
                    {
                     before(grammarAccess.getPrimaryExpressionAccess().getReferenceParserRuleCall_3()); 
                    pushFollow(FOLLOW_ruleReference_in_rule__PrimaryExpression__Alternatives3685);
                    ruleReference();

                    state._fsp--;

                     after(grammarAccess.getPrimaryExpressionAccess().getReferenceParserRuleCall_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1730:6: ( ruleFunctionCall )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1730:6: ( ruleFunctionCall )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1731:1: ruleFunctionCall
                    {
                     before(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_4()); 
                    pushFollow(FOLLOW_ruleFunctionCall_in_rule__PrimaryExpression__Alternatives3702);
                    ruleFunctionCall();

                    state._fsp--;

                     after(grammarAccess.getPrimaryExpressionAccess().getFunctionCallParserRuleCall_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1736:6: ( ruleIndexedCall )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1736:6: ( ruleIndexedCall )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1737:1: ruleIndexedCall
                    {
                     before(grammarAccess.getPrimaryExpressionAccess().getIndexedCallParserRuleCall_5()); 
                    pushFollow(FOLLOW_ruleIndexedCall_in_rule__PrimaryExpression__Alternatives3719);
                    ruleIndexedCall();

                    state._fsp--;

                     after(grammarAccess.getPrimaryExpressionAccess().getIndexedCallParserRuleCall_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1742:6: ( ruleParenthesizedExpression )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1742:6: ( ruleParenthesizedExpression )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1743:1: ruleParenthesizedExpression
                    {
                     before(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_6()); 
                    pushFollow(FOLLOW_ruleParenthesizedExpression_in_rule__PrimaryExpression__Alternatives3736);
                    ruleParenthesizedExpression();

                    state._fsp--;

                     after(grammarAccess.getPrimaryExpressionAccess().getParenthesizedExpressionParserRuleCall_6()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryExpression__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1753:1: rule__Literal__Alternatives : ( ( ruleNumberLiteral ) | ( ( rule__Literal__Group_1__0 ) ) );
    public final void rule__Literal__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1757:1: ( ( ruleNumberLiteral ) | ( ( rule__Literal__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==RULE_NUMBER) ) {
                alt16=1;
            }
            else if ( (LA16_0==14||LA16_0==83) ) {
                alt16=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1758:1: ( ruleNumberLiteral )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1758:1: ( ruleNumberLiteral )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1759:1: ruleNumberLiteral
                    {
                     before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleNumberLiteral_in_rule__Literal__Alternatives3768);
                    ruleNumberLiteral();

                    state._fsp--;

                     after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1764:6: ( ( rule__Literal__Group_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1764:6: ( ( rule__Literal__Group_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1765:1: ( rule__Literal__Group_1__0 )
                    {
                     before(grammarAccess.getLiteralAccess().getGroup_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1766:1: ( rule__Literal__Group_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1766:2: rule__Literal__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__Literal__Group_1__0_in_rule__Literal__Alternatives3785);
                    rule__Literal__Group_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getGroup_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives"


    // $ANTLR start "rule__Literal__Alternatives_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1775:1: rule__Literal__Alternatives_1_1 : ( ( ( rule__Literal__ConditionAssignment_1_1_0 ) ) | ( 'false' ) );
    public final void rule__Literal__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1779:1: ( ( ( rule__Literal__ConditionAssignment_1_1_0 ) ) | ( 'false' ) )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==83) ) {
                alt17=1;
            }
            else if ( (LA17_0==14) ) {
                alt17=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1780:1: ( ( rule__Literal__ConditionAssignment_1_1_0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1780:1: ( ( rule__Literal__ConditionAssignment_1_1_0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1781:1: ( rule__Literal__ConditionAssignment_1_1_0 )
                    {
                     before(grammarAccess.getLiteralAccess().getConditionAssignment_1_1_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1782:1: ( rule__Literal__ConditionAssignment_1_1_0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1782:2: rule__Literal__ConditionAssignment_1_1_0
                    {
                    pushFollow(FOLLOW_rule__Literal__ConditionAssignment_1_1_0_in_rule__Literal__Alternatives_1_13818);
                    rule__Literal__ConditionAssignment_1_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getLiteralAccess().getConditionAssignment_1_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1786:6: ( 'false' )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1786:6: ( 'false' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1787:1: 'false'
                    {
                     before(grammarAccess.getLiteralAccess().getFalseKeyword_1_1_1()); 
                    match(input,14,FOLLOW_14_in_rule__Literal__Alternatives_1_13837); 
                     after(grammarAccess.getLiteralAccess().getFalseKeyword_1_1_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Alternatives_1_1"


    // $ANTLR start "rule__NativeExpression__Alternatives_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1799:1: rule__NativeExpression__Alternatives_1 : ( ( ( rule__NativeExpression__RangeAssignment_1_0 ) ) | ( ( rule__NativeExpression__RefAssignment_1_1 ) ) | ( ( rule__NativeExpression__VarAssignment_1_2 ) ) );
    public final void rule__NativeExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1803:1: ( ( ( rule__NativeExpression__RangeAssignment_1_0 ) ) | ( ( rule__NativeExpression__RefAssignment_1_1 ) ) | ( ( rule__NativeExpression__VarAssignment_1_2 ) ) )
            int alt18=3;
            switch ( input.LA(1) ) {
            case 71:
                {
                alt18=1;
                }
                break;
            case 74:
            case 75:
            case 76:
                {
                alt18=2;
                }
                break;
            case RULE_ID:
                {
                alt18=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1804:1: ( ( rule__NativeExpression__RangeAssignment_1_0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1804:1: ( ( rule__NativeExpression__RangeAssignment_1_0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1805:1: ( rule__NativeExpression__RangeAssignment_1_0 )
                    {
                     before(grammarAccess.getNativeExpressionAccess().getRangeAssignment_1_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1806:1: ( rule__NativeExpression__RangeAssignment_1_0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1806:2: rule__NativeExpression__RangeAssignment_1_0
                    {
                    pushFollow(FOLLOW_rule__NativeExpression__RangeAssignment_1_0_in_rule__NativeExpression__Alternatives_13871);
                    rule__NativeExpression__RangeAssignment_1_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getNativeExpressionAccess().getRangeAssignment_1_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1810:6: ( ( rule__NativeExpression__RefAssignment_1_1 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1810:6: ( ( rule__NativeExpression__RefAssignment_1_1 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1811:1: ( rule__NativeExpression__RefAssignment_1_1 )
                    {
                     before(grammarAccess.getNativeExpressionAccess().getRefAssignment_1_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1812:1: ( rule__NativeExpression__RefAssignment_1_1 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1812:2: rule__NativeExpression__RefAssignment_1_1
                    {
                    pushFollow(FOLLOW_rule__NativeExpression__RefAssignment_1_1_in_rule__NativeExpression__Alternatives_13889);
                    rule__NativeExpression__RefAssignment_1_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getNativeExpressionAccess().getRefAssignment_1_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1816:6: ( ( rule__NativeExpression__VarAssignment_1_2 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1816:6: ( ( rule__NativeExpression__VarAssignment_1_2 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1817:1: ( rule__NativeExpression__VarAssignment_1_2 )
                    {
                     before(grammarAccess.getNativeExpressionAccess().getVarAssignment_1_2()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1818:1: ( rule__NativeExpression__VarAssignment_1_2 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1818:2: rule__NativeExpression__VarAssignment_1_2
                    {
                    pushFollow(FOLLOW_rule__NativeExpression__VarAssignment_1_2_in_rule__NativeExpression__Alternatives_13907);
                    rule__NativeExpression__VarAssignment_1_2();

                    state._fsp--;


                    }

                     after(grammarAccess.getNativeExpressionAccess().getVarAssignment_1_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Alternatives_1"


    // $ANTLR start "rule__Reference__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1827:1: rule__Reference__Alternatives : ( ( ruleContextRef ) | ( ruleNodeTypeRef ) | ( ruleParamRef ) );
    public final void rule__Reference__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1831:1: ( ( ruleContextRef ) | ( ruleNodeTypeRef ) | ( ruleParamRef ) )
            int alt19=3;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt19=1;
                }
                break;
            case 75:
                {
                alt19=2;
                }
                break;
            case 74:
                {
                alt19=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1832:1: ( ruleContextRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1832:1: ( ruleContextRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1833:1: ruleContextRef
                    {
                     before(grammarAccess.getReferenceAccess().getContextRefParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleContextRef_in_rule__Reference__Alternatives3940);
                    ruleContextRef();

                    state._fsp--;

                     after(grammarAccess.getReferenceAccess().getContextRefParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1838:6: ( ruleNodeTypeRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1838:6: ( ruleNodeTypeRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1839:1: ruleNodeTypeRef
                    {
                     before(grammarAccess.getReferenceAccess().getNodeTypeRefParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleNodeTypeRef_in_rule__Reference__Alternatives3957);
                    ruleNodeTypeRef();

                    state._fsp--;

                     after(grammarAccess.getReferenceAccess().getNodeTypeRefParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1844:6: ( ruleParamRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1844:6: ( ruleParamRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1845:1: ruleParamRef
                    {
                     before(grammarAccess.getReferenceAccess().getParamRefParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleParamRef_in_rule__Reference__Alternatives3974);
                    ruleParamRef();

                    state._fsp--;

                     after(grammarAccess.getReferenceAccess().getParamRefParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Reference__Alternatives"


    // $ANTLR start "rule__ContextRef__Alternatives_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1855:1: rule__ContextRef__Alternatives_2 : ( ( ( rule__ContextRef__PrimaryRefAssignment_2_0 ) ) | ( ( rule__ContextRef__RangeRefAssignment_2_1 ) ) );
    public final void rule__ContextRef__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1859:1: ( ( ( rule__ContextRef__PrimaryRefAssignment_2_0 ) ) | ( ( rule__ContextRef__RangeRefAssignment_2_1 ) ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==73) ) {
                alt20=1;
            }
            else if ( ((LA20_0>=34 && LA20_0<=41)) ) {
                alt20=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1860:1: ( ( rule__ContextRef__PrimaryRefAssignment_2_0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1860:1: ( ( rule__ContextRef__PrimaryRefAssignment_2_0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1861:1: ( rule__ContextRef__PrimaryRefAssignment_2_0 )
                    {
                     before(grammarAccess.getContextRefAccess().getPrimaryRefAssignment_2_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1862:1: ( rule__ContextRef__PrimaryRefAssignment_2_0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1862:2: rule__ContextRef__PrimaryRefAssignment_2_0
                    {
                    pushFollow(FOLLOW_rule__ContextRef__PrimaryRefAssignment_2_0_in_rule__ContextRef__Alternatives_24006);
                    rule__ContextRef__PrimaryRefAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getContextRefAccess().getPrimaryRefAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1866:6: ( ( rule__ContextRef__RangeRefAssignment_2_1 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1866:6: ( ( rule__ContextRef__RangeRefAssignment_2_1 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1867:1: ( rule__ContextRef__RangeRefAssignment_2_1 )
                    {
                     before(grammarAccess.getContextRefAccess().getRangeRefAssignment_2_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1868:1: ( rule__ContextRef__RangeRefAssignment_2_1 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1868:2: rule__ContextRef__RangeRefAssignment_2_1
                    {
                    pushFollow(FOLLOW_rule__ContextRef__RangeRefAssignment_2_1_in_rule__ContextRef__Alternatives_24024);
                    rule__ContextRef__RangeRefAssignment_2_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getContextRefAccess().getRangeRefAssignment_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__Alternatives_2"


    // $ANTLR start "rule__ComponentRef__Alternatives_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1877:1: rule__ComponentRef__Alternatives_2 : ( ( ( rule__ComponentRef__Group_2_0__0 ) ) | ( ( rule__ComponentRef__Group_2_1__0 ) ) | ( 'PROFILE' ) | ( 'STATUS' ) );
    public final void rule__ComponentRef__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1881:1: ( ( ( rule__ComponentRef__Group_2_0__0 ) ) | ( ( rule__ComponentRef__Group_2_1__0 ) ) | ( 'PROFILE' ) | ( 'STATUS' ) )
            int alt21=4;
            switch ( input.LA(1) ) {
            case 78:
                {
                alt21=1;
                }
                break;
            case 79:
                {
                alt21=2;
                }
                break;
            case 15:
                {
                alt21=3;
                }
                break;
            case 16:
                {
                alt21=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1882:1: ( ( rule__ComponentRef__Group_2_0__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1882:1: ( ( rule__ComponentRef__Group_2_0__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1883:1: ( rule__ComponentRef__Group_2_0__0 )
                    {
                     before(grammarAccess.getComponentRefAccess().getGroup_2_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1884:1: ( rule__ComponentRef__Group_2_0__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1884:2: rule__ComponentRef__Group_2_0__0
                    {
                    pushFollow(FOLLOW_rule__ComponentRef__Group_2_0__0_in_rule__ComponentRef__Alternatives_24057);
                    rule__ComponentRef__Group_2_0__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getComponentRefAccess().getGroup_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1888:6: ( ( rule__ComponentRef__Group_2_1__0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1888:6: ( ( rule__ComponentRef__Group_2_1__0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1889:1: ( rule__ComponentRef__Group_2_1__0 )
                    {
                     before(grammarAccess.getComponentRefAccess().getGroup_2_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1890:1: ( rule__ComponentRef__Group_2_1__0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1890:2: rule__ComponentRef__Group_2_1__0
                    {
                    pushFollow(FOLLOW_rule__ComponentRef__Group_2_1__0_in_rule__ComponentRef__Alternatives_24075);
                    rule__ComponentRef__Group_2_1__0();

                    state._fsp--;


                    }

                     after(grammarAccess.getComponentRefAccess().getGroup_2_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1894:6: ( 'PROFILE' )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1894:6: ( 'PROFILE' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1895:1: 'PROFILE'
                    {
                     before(grammarAccess.getComponentRefAccess().getPROFILEKeyword_2_2()); 
                    match(input,15,FOLLOW_15_in_rule__ComponentRef__Alternatives_24094); 
                     after(grammarAccess.getComponentRefAccess().getPROFILEKeyword_2_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1902:6: ( 'STATUS' )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1902:6: ( 'STATUS' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1903:1: 'STATUS'
                    {
                     before(grammarAccess.getComponentRefAccess().getSTATUSKeyword_2_3()); 
                    match(input,16,FOLLOW_16_in_rule__ComponentRef__Alternatives_24114); 
                     after(grammarAccess.getComponentRefAccess().getSTATUSKeyword_2_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Alternatives_2"


    // $ANTLR start "rule__LeafReference__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1915:1: rule__LeafReference__Alternatives : ( ( ruleResourceRef ) | ( ruleLinkRef ) | ( ruleStatusRef ) );
    public final void rule__LeafReference__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1919:1: ( ( ruleResourceRef ) | ( ruleLinkRef ) | ( ruleStatusRef ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case 80:
                {
                alt22=1;
                }
                break;
            case 81:
                {
                alt22=2;
                }
                break;
            case 30:
            case 31:
            case 32:
            case 33:
                {
                alt22=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1920:1: ( ruleResourceRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1920:1: ( ruleResourceRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1921:1: ruleResourceRef
                    {
                     before(grammarAccess.getLeafReferenceAccess().getResourceRefParserRuleCall_0()); 
                    pushFollow(FOLLOW_ruleResourceRef_in_rule__LeafReference__Alternatives4148);
                    ruleResourceRef();

                    state._fsp--;

                     after(grammarAccess.getLeafReferenceAccess().getResourceRefParserRuleCall_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1926:6: ( ruleLinkRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1926:6: ( ruleLinkRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1927:1: ruleLinkRef
                    {
                     before(grammarAccess.getLeafReferenceAccess().getLinkRefParserRuleCall_1()); 
                    pushFollow(FOLLOW_ruleLinkRef_in_rule__LeafReference__Alternatives4165);
                    ruleLinkRef();

                    state._fsp--;

                     after(grammarAccess.getLeafReferenceAccess().getLinkRefParserRuleCall_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1932:6: ( ruleStatusRef )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1932:6: ( ruleStatusRef )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1933:1: ruleStatusRef
                    {
                     before(grammarAccess.getLeafReferenceAccess().getStatusRefParserRuleCall_2()); 
                    pushFollow(FOLLOW_ruleStatusRef_in_rule__LeafReference__Alternatives4182);
                    ruleStatusRef();

                    state._fsp--;

                     after(grammarAccess.getLeafReferenceAccess().getStatusRefParserRuleCall_2()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LeafReference__Alternatives"


    // $ANTLR start "rule__ResourceRef__Alternatives_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1943:1: rule__ResourceRef__Alternatives_2 : ( ( ( rule__ResourceRef__ResourceAssignment_2_0 ) ) | ( 'ALL' ) );
    public final void rule__ResourceRef__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1947:1: ( ( ( rule__ResourceRef__ResourceAssignment_2_0 ) ) | ( 'ALL' ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_ID) ) {
                alt23=1;
            }
            else if ( (LA23_0==17) ) {
                alt23=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1948:1: ( ( rule__ResourceRef__ResourceAssignment_2_0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1948:1: ( ( rule__ResourceRef__ResourceAssignment_2_0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1949:1: ( rule__ResourceRef__ResourceAssignment_2_0 )
                    {
                     before(grammarAccess.getResourceRefAccess().getResourceAssignment_2_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1950:1: ( rule__ResourceRef__ResourceAssignment_2_0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1950:2: rule__ResourceRef__ResourceAssignment_2_0
                    {
                    pushFollow(FOLLOW_rule__ResourceRef__ResourceAssignment_2_0_in_rule__ResourceRef__Alternatives_24214);
                    rule__ResourceRef__ResourceAssignment_2_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getResourceRefAccess().getResourceAssignment_2_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1954:6: ( 'ALL' )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1954:6: ( 'ALL' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1955:1: 'ALL'
                    {
                     before(grammarAccess.getResourceRefAccess().getALLKeyword_2_1()); 
                    match(input,17,FOLLOW_17_in_rule__ResourceRef__Alternatives_24233); 
                     after(grammarAccess.getResourceRefAccess().getALLKeyword_2_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Alternatives_2"


    // $ANTLR start "rule__Interval__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1967:1: rule__Interval__Alternatives : ( ( ( rule__Interval__IntervalAssignment_0 ) ) | ( ( rule__Interval__KindAssignment_1 ) ) );
    public final void rule__Interval__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1971:1: ( ( ( rule__Interval__IntervalAssignment_0 ) ) | ( ( rule__Interval__KindAssignment_1 ) ) )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==RULE_NUMBER) ) {
                alt24=1;
            }
            else if ( ((LA24_0>=26 && LA24_0<=29)) ) {
                alt24=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1972:1: ( ( rule__Interval__IntervalAssignment_0 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1972:1: ( ( rule__Interval__IntervalAssignment_0 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1973:1: ( rule__Interval__IntervalAssignment_0 )
                    {
                     before(grammarAccess.getIntervalAccess().getIntervalAssignment_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1974:1: ( rule__Interval__IntervalAssignment_0 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1974:2: rule__Interval__IntervalAssignment_0
                    {
                    pushFollow(FOLLOW_rule__Interval__IntervalAssignment_0_in_rule__Interval__Alternatives4267);
                    rule__Interval__IntervalAssignment_0();

                    state._fsp--;


                    }

                     after(grammarAccess.getIntervalAccess().getIntervalAssignment_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1978:6: ( ( rule__Interval__KindAssignment_1 ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1978:6: ( ( rule__Interval__KindAssignment_1 ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1979:1: ( rule__Interval__KindAssignment_1 )
                    {
                     before(grammarAccess.getIntervalAccess().getKindAssignment_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1980:1: ( rule__Interval__KindAssignment_1 )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1980:2: rule__Interval__KindAssignment_1
                    {
                    pushFollow(FOLLOW_rule__Interval__KindAssignment_1_in_rule__Interval__Alternatives4285);
                    rule__Interval__KindAssignment_1();

                    state._fsp--;


                    }

                     after(grammarAccess.getIntervalAccess().getKindAssignment_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Interval__Alternatives"


    // $ANTLR start "rule__NativeFunction__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1989:1: rule__NativeFunction__Alternatives : ( ( ( 'count()' ) ) | ( ( 'sum()' ) ) | ( ( 'min()' ) ) | ( ( 'max()' ) ) | ( ( 'mean()' ) ) | ( ( 'deviation()' ) ) | ( ( 'erlangB()' ) ) | ( ( 'clear()' ) ) );
    public final void rule__NativeFunction__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1993:1: ( ( ( 'count()' ) ) | ( ( 'sum()' ) ) | ( ( 'min()' ) ) | ( ( 'max()' ) ) | ( ( 'mean()' ) ) | ( ( 'deviation()' ) ) | ( ( 'erlangB()' ) ) | ( ( 'clear()' ) ) )
            int alt25=8;
            switch ( input.LA(1) ) {
            case 18:
                {
                alt25=1;
                }
                break;
            case 19:
                {
                alt25=2;
                }
                break;
            case 20:
                {
                alt25=3;
                }
                break;
            case 21:
                {
                alt25=4;
                }
                break;
            case 22:
                {
                alt25=5;
                }
                break;
            case 23:
                {
                alt25=6;
                }
                break;
            case 24:
                {
                alt25=7;
                }
                break;
            case 25:
                {
                alt25=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }

            switch (alt25) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1994:1: ( ( 'count()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1994:1: ( ( 'count()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1995:1: ( 'count()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getCOUNTEnumLiteralDeclaration_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1996:1: ( 'count()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:1996:3: 'count()'
                    {
                    match(input,18,FOLLOW_18_in_rule__NativeFunction__Alternatives4319); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getCOUNTEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2001:6: ( ( 'sum()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2001:6: ( ( 'sum()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2002:1: ( 'sum()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getSUMEnumLiteralDeclaration_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2003:1: ( 'sum()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2003:3: 'sum()'
                    {
                    match(input,19,FOLLOW_19_in_rule__NativeFunction__Alternatives4340); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getSUMEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2008:6: ( ( 'min()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2008:6: ( ( 'min()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2009:1: ( 'min()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getMINEnumLiteralDeclaration_2()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2010:1: ( 'min()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2010:3: 'min()'
                    {
                    match(input,20,FOLLOW_20_in_rule__NativeFunction__Alternatives4361); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getMINEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2015:6: ( ( 'max()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2015:6: ( ( 'max()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2016:1: ( 'max()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getMAXEnumLiteralDeclaration_3()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2017:1: ( 'max()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2017:3: 'max()'
                    {
                    match(input,21,FOLLOW_21_in_rule__NativeFunction__Alternatives4382); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getMAXEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2022:6: ( ( 'mean()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2022:6: ( ( 'mean()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2023:1: ( 'mean()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getMEANEnumLiteralDeclaration_4()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2024:1: ( 'mean()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2024:3: 'mean()'
                    {
                    match(input,22,FOLLOW_22_in_rule__NativeFunction__Alternatives4403); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getMEANEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2029:6: ( ( 'deviation()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2029:6: ( ( 'deviation()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2030:1: ( 'deviation()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getDEVIATIONEnumLiteralDeclaration_5()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2031:1: ( 'deviation()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2031:3: 'deviation()'
                    {
                    match(input,23,FOLLOW_23_in_rule__NativeFunction__Alternatives4424); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getDEVIATIONEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2036:6: ( ( 'erlangB()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2036:6: ( ( 'erlangB()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2037:1: ( 'erlangB()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getERLANGBEnumLiteralDeclaration_6()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2038:1: ( 'erlangB()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2038:3: 'erlangB()'
                    {
                    match(input,24,FOLLOW_24_in_rule__NativeFunction__Alternatives4445); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getERLANGBEnumLiteralDeclaration_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2043:6: ( ( 'clear()' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2043:6: ( ( 'clear()' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2044:1: ( 'clear()' )
                    {
                     before(grammarAccess.getNativeFunctionAccess().getCLEAREnumLiteralDeclaration_7()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2045:1: ( 'clear()' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2045:3: 'clear()'
                    {
                    match(input,25,FOLLOW_25_in_rule__NativeFunction__Alternatives4466); 

                    }

                     after(grammarAccess.getNativeFunctionAccess().getCLEAREnumLiteralDeclaration_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeFunction__Alternatives"


    // $ANTLR start "rule__IntervalKind__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2055:1: rule__IntervalKind__Alternatives : ( ( ( 'MONTH' ) ) | ( ( 'WEEK' ) ) | ( ( 'DAY' ) ) | ( ( 'HOUR' ) ) );
    public final void rule__IntervalKind__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2059:1: ( ( ( 'MONTH' ) ) | ( ( 'WEEK' ) ) | ( ( 'DAY' ) ) | ( ( 'HOUR' ) ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case 26:
                {
                alt26=1;
                }
                break;
            case 27:
                {
                alt26=2;
                }
                break;
            case 28:
                {
                alt26=3;
                }
                break;
            case 29:
                {
                alt26=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2060:1: ( ( 'MONTH' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2060:1: ( ( 'MONTH' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2061:1: ( 'MONTH' )
                    {
                     before(grammarAccess.getIntervalKindAccess().getMONTHEnumLiteralDeclaration_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2062:1: ( 'MONTH' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2062:3: 'MONTH'
                    {
                    match(input,26,FOLLOW_26_in_rule__IntervalKind__Alternatives4502); 

                    }

                     after(grammarAccess.getIntervalKindAccess().getMONTHEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2067:6: ( ( 'WEEK' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2067:6: ( ( 'WEEK' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2068:1: ( 'WEEK' )
                    {
                     before(grammarAccess.getIntervalKindAccess().getWEEKEnumLiteralDeclaration_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2069:1: ( 'WEEK' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2069:3: 'WEEK'
                    {
                    match(input,27,FOLLOW_27_in_rule__IntervalKind__Alternatives4523); 

                    }

                     after(grammarAccess.getIntervalKindAccess().getWEEKEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2074:6: ( ( 'DAY' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2074:6: ( ( 'DAY' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2075:1: ( 'DAY' )
                    {
                     before(grammarAccess.getIntervalKindAccess().getDAYEnumLiteralDeclaration_2()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2076:1: ( 'DAY' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2076:3: 'DAY'
                    {
                    match(input,28,FOLLOW_28_in_rule__IntervalKind__Alternatives4544); 

                    }

                     after(grammarAccess.getIntervalKindAccess().getDAYEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2081:6: ( ( 'HOUR' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2081:6: ( ( 'HOUR' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2082:1: ( 'HOUR' )
                    {
                     before(grammarAccess.getIntervalKindAccess().getHOUREnumLiteralDeclaration_3()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2083:1: ( 'HOUR' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2083:3: 'HOUR'
                    {
                    match(input,29,FOLLOW_29_in_rule__IntervalKind__Alternatives4565); 

                    }

                     after(grammarAccess.getIntervalKindAccess().getHOUREnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntervalKind__Alternatives"


    // $ANTLR start "rule__ToleranceLevel__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2093:1: rule__ToleranceLevel__Alternatives : ( ( ( 'RED' ) ) | ( ( 'AMBER' ) ) | ( ( 'GREEN' ) ) | ( ( 'YELLOW' ) ) );
    public final void rule__ToleranceLevel__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2097:1: ( ( ( 'RED' ) ) | ( ( 'AMBER' ) ) | ( ( 'GREEN' ) ) | ( ( 'YELLOW' ) ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case 30:
                {
                alt27=1;
                }
                break;
            case 31:
                {
                alt27=2;
                }
                break;
            case 32:
                {
                alt27=3;
                }
                break;
            case 33:
                {
                alt27=4;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2098:1: ( ( 'RED' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2098:1: ( ( 'RED' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2099:1: ( 'RED' )
                    {
                     before(grammarAccess.getToleranceLevelAccess().getREDEnumLiteralDeclaration_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2100:1: ( 'RED' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2100:3: 'RED'
                    {
                    match(input,30,FOLLOW_30_in_rule__ToleranceLevel__Alternatives4601); 

                    }

                     after(grammarAccess.getToleranceLevelAccess().getREDEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2105:6: ( ( 'AMBER' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2105:6: ( ( 'AMBER' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2106:1: ( 'AMBER' )
                    {
                     before(grammarAccess.getToleranceLevelAccess().getAMBEREnumLiteralDeclaration_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2107:1: ( 'AMBER' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2107:3: 'AMBER'
                    {
                    match(input,31,FOLLOW_31_in_rule__ToleranceLevel__Alternatives4622); 

                    }

                     after(grammarAccess.getToleranceLevelAccess().getAMBEREnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2112:6: ( ( 'GREEN' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2112:6: ( ( 'GREEN' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2113:1: ( 'GREEN' )
                    {
                     before(grammarAccess.getToleranceLevelAccess().getGREENEnumLiteralDeclaration_2()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2114:1: ( 'GREEN' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2114:3: 'GREEN'
                    {
                    match(input,32,FOLLOW_32_in_rule__ToleranceLevel__Alternatives4643); 

                    }

                     after(grammarAccess.getToleranceLevelAccess().getGREENEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2119:6: ( ( 'YELLOW' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2119:6: ( ( 'YELLOW' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2120:1: ( 'YELLOW' )
                    {
                     before(grammarAccess.getToleranceLevelAccess().getYELLOWEnumLiteralDeclaration_3()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2121:1: ( 'YELLOW' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2121:3: 'YELLOW'
                    {
                    match(input,33,FOLLOW_33_in_rule__ToleranceLevel__Alternatives4664); 

                    }

                     after(grammarAccess.getToleranceLevelAccess().getYELLOWEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ToleranceLevel__Alternatives"


    // $ANTLR start "rule__ValueRange__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2131:1: rule__ValueRange__Alternatives : ( ( ( 'METRIC' ) ) | ( ( 'CAP' ) ) | ( ( 'FORECAST' ) ) | ( ( 'FORECAST_CAP' ) ) | ( ( 'TRENDED' ) ) | ( ( 'UTILIZATION' ) ) | ( ( 'TOLERANCE' ) ) | ( ( 'DERIVED' ) ) );
    public final void rule__ValueRange__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2135:1: ( ( ( 'METRIC' ) ) | ( ( 'CAP' ) ) | ( ( 'FORECAST' ) ) | ( ( 'FORECAST_CAP' ) ) | ( ( 'TRENDED' ) ) | ( ( 'UTILIZATION' ) ) | ( ( 'TOLERANCE' ) ) | ( ( 'DERIVED' ) ) )
            int alt28=8;
            switch ( input.LA(1) ) {
            case 34:
                {
                alt28=1;
                }
                break;
            case 35:
                {
                alt28=2;
                }
                break;
            case 36:
                {
                alt28=3;
                }
                break;
            case 37:
                {
                alt28=4;
                }
                break;
            case 38:
                {
                alt28=5;
                }
                break;
            case 39:
                {
                alt28=6;
                }
                break;
            case 40:
                {
                alt28=7;
                }
                break;
            case 41:
                {
                alt28=8;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2136:1: ( ( 'METRIC' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2136:1: ( ( 'METRIC' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2137:1: ( 'METRIC' )
                    {
                     before(grammarAccess.getValueRangeAccess().getMETRICEnumLiteralDeclaration_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2138:1: ( 'METRIC' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2138:3: 'METRIC'
                    {
                    match(input,34,FOLLOW_34_in_rule__ValueRange__Alternatives4700); 

                    }

                     after(grammarAccess.getValueRangeAccess().getMETRICEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2143:6: ( ( 'CAP' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2143:6: ( ( 'CAP' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2144:1: ( 'CAP' )
                    {
                     before(grammarAccess.getValueRangeAccess().getCAPEnumLiteralDeclaration_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2145:1: ( 'CAP' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2145:3: 'CAP'
                    {
                    match(input,35,FOLLOW_35_in_rule__ValueRange__Alternatives4721); 

                    }

                     after(grammarAccess.getValueRangeAccess().getCAPEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;
                case 3 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2150:6: ( ( 'FORECAST' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2150:6: ( ( 'FORECAST' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2151:1: ( 'FORECAST' )
                    {
                     before(grammarAccess.getValueRangeAccess().getFORECASTEnumLiteralDeclaration_2()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2152:1: ( 'FORECAST' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2152:3: 'FORECAST'
                    {
                    match(input,36,FOLLOW_36_in_rule__ValueRange__Alternatives4742); 

                    }

                     after(grammarAccess.getValueRangeAccess().getFORECASTEnumLiteralDeclaration_2()); 

                    }


                    }
                    break;
                case 4 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2157:6: ( ( 'FORECAST_CAP' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2157:6: ( ( 'FORECAST_CAP' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2158:1: ( 'FORECAST_CAP' )
                    {
                     before(grammarAccess.getValueRangeAccess().getFORECAST_CAPEnumLiteralDeclaration_3()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2159:1: ( 'FORECAST_CAP' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2159:3: 'FORECAST_CAP'
                    {
                    match(input,37,FOLLOW_37_in_rule__ValueRange__Alternatives4763); 

                    }

                     after(grammarAccess.getValueRangeAccess().getFORECAST_CAPEnumLiteralDeclaration_3()); 

                    }


                    }
                    break;
                case 5 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2164:6: ( ( 'TRENDED' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2164:6: ( ( 'TRENDED' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2165:1: ( 'TRENDED' )
                    {
                     before(grammarAccess.getValueRangeAccess().getTRENDEDEnumLiteralDeclaration_4()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2166:1: ( 'TRENDED' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2166:3: 'TRENDED'
                    {
                    match(input,38,FOLLOW_38_in_rule__ValueRange__Alternatives4784); 

                    }

                     after(grammarAccess.getValueRangeAccess().getTRENDEDEnumLiteralDeclaration_4()); 

                    }


                    }
                    break;
                case 6 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2171:6: ( ( 'UTILIZATION' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2171:6: ( ( 'UTILIZATION' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2172:1: ( 'UTILIZATION' )
                    {
                     before(grammarAccess.getValueRangeAccess().getUTILIZATIONEnumLiteralDeclaration_5()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2173:1: ( 'UTILIZATION' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2173:3: 'UTILIZATION'
                    {
                    match(input,39,FOLLOW_39_in_rule__ValueRange__Alternatives4805); 

                    }

                     after(grammarAccess.getValueRangeAccess().getUTILIZATIONEnumLiteralDeclaration_5()); 

                    }


                    }
                    break;
                case 7 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2178:6: ( ( 'TOLERANCE' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2178:6: ( ( 'TOLERANCE' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2179:1: ( 'TOLERANCE' )
                    {
                     before(grammarAccess.getValueRangeAccess().getTOLERANCEEnumLiteralDeclaration_6()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2180:1: ( 'TOLERANCE' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2180:3: 'TOLERANCE'
                    {
                    match(input,40,FOLLOW_40_in_rule__ValueRange__Alternatives4826); 

                    }

                     after(grammarAccess.getValueRangeAccess().getTOLERANCEEnumLiteralDeclaration_6()); 

                    }


                    }
                    break;
                case 8 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2185:6: ( ( 'DERIVED' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2185:6: ( ( 'DERIVED' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2186:1: ( 'DERIVED' )
                    {
                     before(grammarAccess.getValueRangeAccess().getDERIVEDEnumLiteralDeclaration_7()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2187:1: ( 'DERIVED' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2187:3: 'DERIVED'
                    {
                    match(input,41,FOLLOW_41_in_rule__ValueRange__Alternatives4847); 

                    }

                     after(grammarAccess.getValueRangeAccess().getDERIVEDEnumLiteralDeclaration_7()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValueRange__Alternatives"


    // $ANTLR start "rule__ValueKind__Alternatives"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2197:1: rule__ValueKind__Alternatives : ( ( ( 'AVG' ) ) | ( ( 'BH' ) ) );
    public final void rule__ValueKind__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2201:1: ( ( ( 'AVG' ) ) | ( ( 'BH' ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==42) ) {
                alt29=1;
            }
            else if ( (LA29_0==43) ) {
                alt29=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2202:1: ( ( 'AVG' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2202:1: ( ( 'AVG' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2203:1: ( 'AVG' )
                    {
                     before(grammarAccess.getValueKindAccess().getAVGEnumLiteralDeclaration_0()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2204:1: ( 'AVG' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2204:3: 'AVG'
                    {
                    match(input,42,FOLLOW_42_in_rule__ValueKind__Alternatives4883); 

                    }

                     after(grammarAccess.getValueKindAccess().getAVGEnumLiteralDeclaration_0()); 

                    }


                    }
                    break;
                case 2 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2209:6: ( ( 'BH' ) )
                    {
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2209:6: ( ( 'BH' ) )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2210:1: ( 'BH' )
                    {
                     before(grammarAccess.getValueKindAccess().getBHEnumLiteralDeclaration_1()); 
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2211:1: ( 'BH' )
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2211:3: 'BH'
                    {
                    match(input,43,FOLLOW_43_in_rule__ValueKind__Alternatives4904); 

                    }

                     after(grammarAccess.getValueKindAccess().getBHEnumLiteralDeclaration_1()); 

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ValueKind__Alternatives"


    // $ANTLR start "rule__Mod__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2223:1: rule__Mod__Group__0 : rule__Mod__Group__0__Impl rule__Mod__Group__1 ;
    public final void rule__Mod__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2227:1: ( rule__Mod__Group__0__Impl rule__Mod__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2228:2: rule__Mod__Group__0__Impl rule__Mod__Group__1
            {
            pushFollow(FOLLOW_rule__Mod__Group__0__Impl_in_rule__Mod__Group__04937);
            rule__Mod__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mod__Group__1_in_rule__Mod__Group__04940);
            rule__Mod__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group__0"


    // $ANTLR start "rule__Mod__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2235:1: rule__Mod__Group__0__Impl : ( ( rule__Mod__Group_0__0 )? ) ;
    public final void rule__Mod__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2239:1: ( ( ( rule__Mod__Group_0__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2240:1: ( ( rule__Mod__Group_0__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2240:1: ( ( rule__Mod__Group_0__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2241:1: ( rule__Mod__Group_0__0 )?
            {
             before(grammarAccess.getModAccess().getGroup_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2242:1: ( rule__Mod__Group_0__0 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==44) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2242:2: rule__Mod__Group_0__0
                    {
                    pushFollow(FOLLOW_rule__Mod__Group_0__0_in_rule__Mod__Group__0__Impl4967);
                    rule__Mod__Group_0__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getModAccess().getGroup_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group__0__Impl"


    // $ANTLR start "rule__Mod__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2252:1: rule__Mod__Group__1 : rule__Mod__Group__1__Impl rule__Mod__Group__2 ;
    public final void rule__Mod__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2256:1: ( rule__Mod__Group__1__Impl rule__Mod__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2257:2: rule__Mod__Group__1__Impl rule__Mod__Group__2
            {
            pushFollow(FOLLOW_rule__Mod__Group__1__Impl_in_rule__Mod__Group__14998);
            rule__Mod__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mod__Group__2_in_rule__Mod__Group__15001);
            rule__Mod__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group__1"


    // $ANTLR start "rule__Mod__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2264:1: rule__Mod__Group__1__Impl : ( ( rule__Mod__ImportsAssignment_1 )* ) ;
    public final void rule__Mod__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2268:1: ( ( ( rule__Mod__ImportsAssignment_1 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2269:1: ( ( rule__Mod__ImportsAssignment_1 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2269:1: ( ( rule__Mod__ImportsAssignment_1 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2270:1: ( rule__Mod__ImportsAssignment_1 )*
            {
             before(grammarAccess.getModAccess().getImportsAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2271:1: ( rule__Mod__ImportsAssignment_1 )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( (LA31_0==45) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2271:2: rule__Mod__ImportsAssignment_1
            	    {
            	    pushFollow(FOLLOW_rule__Mod__ImportsAssignment_1_in_rule__Mod__Group__1__Impl5028);
            	    rule__Mod__ImportsAssignment_1();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);

             after(grammarAccess.getModAccess().getImportsAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group__1__Impl"


    // $ANTLR start "rule__Mod__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2281:1: rule__Mod__Group__2 : rule__Mod__Group__2__Impl ;
    public final void rule__Mod__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2285:1: ( rule__Mod__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2286:2: rule__Mod__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__Mod__Group__2__Impl_in_rule__Mod__Group__25059);
            rule__Mod__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group__2"


    // $ANTLR start "rule__Mod__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2292:1: rule__Mod__Group__2__Impl : ( ( rule__Mod__Alternatives_2 ) ) ;
    public final void rule__Mod__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2296:1: ( ( ( rule__Mod__Alternatives_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2297:1: ( ( rule__Mod__Alternatives_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2297:1: ( ( rule__Mod__Alternatives_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2298:1: ( rule__Mod__Alternatives_2 )
            {
             before(grammarAccess.getModAccess().getAlternatives_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2299:1: ( rule__Mod__Alternatives_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2299:2: rule__Mod__Alternatives_2
            {
            pushFollow(FOLLOW_rule__Mod__Alternatives_2_in_rule__Mod__Group__2__Impl5086);
            rule__Mod__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getModAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group__2__Impl"


    // $ANTLR start "rule__Mod__Group_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2315:1: rule__Mod__Group_0__0 : rule__Mod__Group_0__0__Impl rule__Mod__Group_0__1 ;
    public final void rule__Mod__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2319:1: ( rule__Mod__Group_0__0__Impl rule__Mod__Group_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2320:2: rule__Mod__Group_0__0__Impl rule__Mod__Group_0__1
            {
            pushFollow(FOLLOW_rule__Mod__Group_0__0__Impl_in_rule__Mod__Group_0__05122);
            rule__Mod__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Mod__Group_0__1_in_rule__Mod__Group_0__05125);
            rule__Mod__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group_0__0"


    // $ANTLR start "rule__Mod__Group_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2327:1: rule__Mod__Group_0__0__Impl : ( 'mod' ) ;
    public final void rule__Mod__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2331:1: ( ( 'mod' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2332:1: ( 'mod' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2332:1: ( 'mod' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2333:1: 'mod'
            {
             before(grammarAccess.getModAccess().getModKeyword_0_0()); 
            match(input,44,FOLLOW_44_in_rule__Mod__Group_0__0__Impl5153); 
             after(grammarAccess.getModAccess().getModKeyword_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group_0__0__Impl"


    // $ANTLR start "rule__Mod__Group_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2346:1: rule__Mod__Group_0__1 : rule__Mod__Group_0__1__Impl ;
    public final void rule__Mod__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2350:1: ( rule__Mod__Group_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2351:2: rule__Mod__Group_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Mod__Group_0__1__Impl_in_rule__Mod__Group_0__15184);
            rule__Mod__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group_0__1"


    // $ANTLR start "rule__Mod__Group_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2357:1: rule__Mod__Group_0__1__Impl : ( ( rule__Mod__NameAssignment_0_1 ) ) ;
    public final void rule__Mod__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2361:1: ( ( ( rule__Mod__NameAssignment_0_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2362:1: ( ( rule__Mod__NameAssignment_0_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2362:1: ( ( rule__Mod__NameAssignment_0_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2363:1: ( rule__Mod__NameAssignment_0_1 )
            {
             before(grammarAccess.getModAccess().getNameAssignment_0_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2364:1: ( rule__Mod__NameAssignment_0_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2364:2: rule__Mod__NameAssignment_0_1
            {
            pushFollow(FOLLOW_rule__Mod__NameAssignment_0_1_in_rule__Mod__Group_0__1__Impl5211);
            rule__Mod__NameAssignment_0_1();

            state._fsp--;


            }

             after(grammarAccess.getModAccess().getNameAssignment_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__Group_0__1__Impl"


    // $ANTLR start "rule__Import__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2378:1: rule__Import__Group__0 : rule__Import__Group__0__Impl rule__Import__Group__1 ;
    public final void rule__Import__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2382:1: ( rule__Import__Group__0__Impl rule__Import__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2383:2: rule__Import__Group__0__Impl rule__Import__Group__1
            {
            pushFollow(FOLLOW_rule__Import__Group__0__Impl_in_rule__Import__Group__05245);
            rule__Import__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Import__Group__1_in_rule__Import__Group__05248);
            rule__Import__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__0"


    // $ANTLR start "rule__Import__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2390:1: rule__Import__Group__0__Impl : ( 'import' ) ;
    public final void rule__Import__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2394:1: ( ( 'import' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2395:1: ( 'import' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2395:1: ( 'import' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2396:1: 'import'
            {
             before(grammarAccess.getImportAccess().getImportKeyword_0()); 
            match(input,45,FOLLOW_45_in_rule__Import__Group__0__Impl5276); 
             after(grammarAccess.getImportAccess().getImportKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__0__Impl"


    // $ANTLR start "rule__Import__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2409:1: rule__Import__Group__1 : rule__Import__Group__1__Impl ;
    public final void rule__Import__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2413:1: ( rule__Import__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2414:2: rule__Import__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Import__Group__1__Impl_in_rule__Import__Group__15307);
            rule__Import__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__1"


    // $ANTLR start "rule__Import__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2420:1: rule__Import__Group__1__Impl : ( ( rule__Import__ImportURIAssignment_1 ) ) ;
    public final void rule__Import__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2424:1: ( ( ( rule__Import__ImportURIAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2425:1: ( ( rule__Import__ImportURIAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2425:1: ( ( rule__Import__ImportURIAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2426:1: ( rule__Import__ImportURIAssignment_1 )
            {
             before(grammarAccess.getImportAccess().getImportURIAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2427:1: ( rule__Import__ImportURIAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2427:2: rule__Import__ImportURIAssignment_1
            {
            pushFollow(FOLLOW_rule__Import__ImportURIAssignment_1_in_rule__Import__Group__1__Impl5334);
            rule__Import__ImportURIAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getImportAccess().getImportURIAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2441:1: rule__Function__Group__0 : rule__Function__Group__0__Impl rule__Function__Group__1 ;
    public final void rule__Function__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2445:1: ( rule__Function__Group__0__Impl rule__Function__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2446:2: rule__Function__Group__0__Impl rule__Function__Group__1
            {
            pushFollow(FOLLOW_rule__Function__Group__0__Impl_in_rule__Function__Group__05368);
            rule__Function__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Function__Group__1_in_rule__Function__Group__05371);
            rule__Function__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0"


    // $ANTLR start "rule__Function__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2453:1: rule__Function__Group__0__Impl : ( 'def' ) ;
    public final void rule__Function__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2457:1: ( ( 'def' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2458:1: ( 'def' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2458:1: ( 'def' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2459:1: 'def'
            {
             before(grammarAccess.getFunctionAccess().getDefKeyword_0()); 
            match(input,46,FOLLOW_46_in_rule__Function__Group__0__Impl5399); 
             after(grammarAccess.getFunctionAccess().getDefKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__0__Impl"


    // $ANTLR start "rule__Function__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2472:1: rule__Function__Group__1 : rule__Function__Group__1__Impl rule__Function__Group__2 ;
    public final void rule__Function__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2476:1: ( rule__Function__Group__1__Impl rule__Function__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2477:2: rule__Function__Group__1__Impl rule__Function__Group__2
            {
            pushFollow(FOLLOW_rule__Function__Group__1__Impl_in_rule__Function__Group__15430);
            rule__Function__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Function__Group__2_in_rule__Function__Group__15433);
            rule__Function__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1"


    // $ANTLR start "rule__Function__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2484:1: rule__Function__Group__1__Impl : ( ( rule__Function__NameAssignment_1 ) ) ;
    public final void rule__Function__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2488:1: ( ( ( rule__Function__NameAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2489:1: ( ( rule__Function__NameAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2489:1: ( ( rule__Function__NameAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2490:1: ( rule__Function__NameAssignment_1 )
            {
             before(grammarAccess.getFunctionAccess().getNameAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2491:1: ( rule__Function__NameAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2491:2: rule__Function__NameAssignment_1
            {
            pushFollow(FOLLOW_rule__Function__NameAssignment_1_in_rule__Function__Group__1__Impl5460);
            rule__Function__NameAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAccess().getNameAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__1__Impl"


    // $ANTLR start "rule__Function__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2501:1: rule__Function__Group__2 : rule__Function__Group__2__Impl rule__Function__Group__3 ;
    public final void rule__Function__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2505:1: ( rule__Function__Group__2__Impl rule__Function__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2506:2: rule__Function__Group__2__Impl rule__Function__Group__3
            {
            pushFollow(FOLLOW_rule__Function__Group__2__Impl_in_rule__Function__Group__25490);
            rule__Function__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Function__Group__3_in_rule__Function__Group__25493);
            rule__Function__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2"


    // $ANTLR start "rule__Function__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2513:1: rule__Function__Group__2__Impl : ( '(' ) ;
    public final void rule__Function__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2517:1: ( ( '(' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2518:1: ( '(' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2518:1: ( '(' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2519:1: '('
            {
             before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); 
            match(input,47,FOLLOW_47_in_rule__Function__Group__2__Impl5521); 
             after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__2__Impl"


    // $ANTLR start "rule__Function__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2532:1: rule__Function__Group__3 : rule__Function__Group__3__Impl rule__Function__Group__4 ;
    public final void rule__Function__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2536:1: ( rule__Function__Group__3__Impl rule__Function__Group__4 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2537:2: rule__Function__Group__3__Impl rule__Function__Group__4
            {
            pushFollow(FOLLOW_rule__Function__Group__3__Impl_in_rule__Function__Group__35552);
            rule__Function__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Function__Group__4_in_rule__Function__Group__35555);
            rule__Function__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3"


    // $ANTLR start "rule__Function__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2544:1: rule__Function__Group__3__Impl : ( ( rule__Function__Group_3__0 )? ) ;
    public final void rule__Function__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2548:1: ( ( ( rule__Function__Group_3__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2549:1: ( ( rule__Function__Group_3__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2549:1: ( ( rule__Function__Group_3__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2550:1: ( rule__Function__Group_3__0 )?
            {
             before(grammarAccess.getFunctionAccess().getGroup_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2551:1: ( rule__Function__Group_3__0 )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==RULE_ID) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2551:2: rule__Function__Group_3__0
                    {
                    pushFollow(FOLLOW_rule__Function__Group_3__0_in_rule__Function__Group__3__Impl5582);
                    rule__Function__Group_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFunctionAccess().getGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__3__Impl"


    // $ANTLR start "rule__Function__Group__4"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2561:1: rule__Function__Group__4 : rule__Function__Group__4__Impl rule__Function__Group__5 ;
    public final void rule__Function__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2565:1: ( rule__Function__Group__4__Impl rule__Function__Group__5 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2566:2: rule__Function__Group__4__Impl rule__Function__Group__5
            {
            pushFollow(FOLLOW_rule__Function__Group__4__Impl_in_rule__Function__Group__45613);
            rule__Function__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Function__Group__5_in_rule__Function__Group__45616);
            rule__Function__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4"


    // $ANTLR start "rule__Function__Group__4__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2573:1: rule__Function__Group__4__Impl : ( ')' ) ;
    public final void rule__Function__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2577:1: ( ( ')' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2578:1: ( ')' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2578:1: ( ')' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2579:1: ')'
            {
             before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); 
            match(input,48,FOLLOW_48_in_rule__Function__Group__4__Impl5644); 
             after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__4__Impl"


    // $ANTLR start "rule__Function__Group__5"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2592:1: rule__Function__Group__5 : rule__Function__Group__5__Impl ;
    public final void rule__Function__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2596:1: ( rule__Function__Group__5__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2597:2: rule__Function__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__Function__Group__5__Impl_in_rule__Function__Group__55675);
            rule__Function__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5"


    // $ANTLR start "rule__Function__Group__5__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2603:1: rule__Function__Group__5__Impl : ( ( rule__Function__BlockAssignment_5 ) ) ;
    public final void rule__Function__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2607:1: ( ( ( rule__Function__BlockAssignment_5 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2608:1: ( ( rule__Function__BlockAssignment_5 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2608:1: ( ( rule__Function__BlockAssignment_5 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2609:1: ( rule__Function__BlockAssignment_5 )
            {
             before(grammarAccess.getFunctionAccess().getBlockAssignment_5()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2610:1: ( rule__Function__BlockAssignment_5 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2610:2: rule__Function__BlockAssignment_5
            {
            pushFollow(FOLLOW_rule__Function__BlockAssignment_5_in_rule__Function__Group__5__Impl5702);
            rule__Function__BlockAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAccess().getBlockAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group__5__Impl"


    // $ANTLR start "rule__Function__Group_3__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2632:1: rule__Function__Group_3__0 : rule__Function__Group_3__0__Impl rule__Function__Group_3__1 ;
    public final void rule__Function__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2636:1: ( rule__Function__Group_3__0__Impl rule__Function__Group_3__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2637:2: rule__Function__Group_3__0__Impl rule__Function__Group_3__1
            {
            pushFollow(FOLLOW_rule__Function__Group_3__0__Impl_in_rule__Function__Group_3__05744);
            rule__Function__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Function__Group_3__1_in_rule__Function__Group_3__05747);
            rule__Function__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3__0"


    // $ANTLR start "rule__Function__Group_3__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2644:1: rule__Function__Group_3__0__Impl : ( ( rule__Function__ArgsAssignment_3_0 ) ) ;
    public final void rule__Function__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2648:1: ( ( ( rule__Function__ArgsAssignment_3_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2649:1: ( ( rule__Function__ArgsAssignment_3_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2649:1: ( ( rule__Function__ArgsAssignment_3_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2650:1: ( rule__Function__ArgsAssignment_3_0 )
            {
             before(grammarAccess.getFunctionAccess().getArgsAssignment_3_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2651:1: ( rule__Function__ArgsAssignment_3_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2651:2: rule__Function__ArgsAssignment_3_0
            {
            pushFollow(FOLLOW_rule__Function__ArgsAssignment_3_0_in_rule__Function__Group_3__0__Impl5774);
            rule__Function__ArgsAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAccess().getArgsAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3__0__Impl"


    // $ANTLR start "rule__Function__Group_3__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2661:1: rule__Function__Group_3__1 : rule__Function__Group_3__1__Impl ;
    public final void rule__Function__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2665:1: ( rule__Function__Group_3__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2666:2: rule__Function__Group_3__1__Impl
            {
            pushFollow(FOLLOW_rule__Function__Group_3__1__Impl_in_rule__Function__Group_3__15804);
            rule__Function__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3__1"


    // $ANTLR start "rule__Function__Group_3__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2672:1: rule__Function__Group_3__1__Impl : ( ( rule__Function__Group_3_1__0 )* ) ;
    public final void rule__Function__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2676:1: ( ( ( rule__Function__Group_3_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2677:1: ( ( rule__Function__Group_3_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2677:1: ( ( rule__Function__Group_3_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2678:1: ( rule__Function__Group_3_1__0 )*
            {
             before(grammarAccess.getFunctionAccess().getGroup_3_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2679:1: ( rule__Function__Group_3_1__0 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==49) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2679:2: rule__Function__Group_3_1__0
            	    {
            	    pushFollow(FOLLOW_rule__Function__Group_3_1__0_in_rule__Function__Group_3__1__Impl5831);
            	    rule__Function__Group_3_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

             after(grammarAccess.getFunctionAccess().getGroup_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3__1__Impl"


    // $ANTLR start "rule__Function__Group_3_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2693:1: rule__Function__Group_3_1__0 : rule__Function__Group_3_1__0__Impl rule__Function__Group_3_1__1 ;
    public final void rule__Function__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2697:1: ( rule__Function__Group_3_1__0__Impl rule__Function__Group_3_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2698:2: rule__Function__Group_3_1__0__Impl rule__Function__Group_3_1__1
            {
            pushFollow(FOLLOW_rule__Function__Group_3_1__0__Impl_in_rule__Function__Group_3_1__05866);
            rule__Function__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Function__Group_3_1__1_in_rule__Function__Group_3_1__05869);
            rule__Function__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3_1__0"


    // $ANTLR start "rule__Function__Group_3_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2705:1: rule__Function__Group_3_1__0__Impl : ( ',' ) ;
    public final void rule__Function__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2709:1: ( ( ',' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2710:1: ( ',' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2710:1: ( ',' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2711:1: ','
            {
             before(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); 
            match(input,49,FOLLOW_49_in_rule__Function__Group_3_1__0__Impl5897); 
             after(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3_1__0__Impl"


    // $ANTLR start "rule__Function__Group_3_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2724:1: rule__Function__Group_3_1__1 : rule__Function__Group_3_1__1__Impl ;
    public final void rule__Function__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2728:1: ( rule__Function__Group_3_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2729:2: rule__Function__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Function__Group_3_1__1__Impl_in_rule__Function__Group_3_1__15928);
            rule__Function__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3_1__1"


    // $ANTLR start "rule__Function__Group_3_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2735:1: rule__Function__Group_3_1__1__Impl : ( ( rule__Function__ArgsAssignment_3_1_1 ) ) ;
    public final void rule__Function__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2739:1: ( ( ( rule__Function__ArgsAssignment_3_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2740:1: ( ( rule__Function__ArgsAssignment_3_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2740:1: ( ( rule__Function__ArgsAssignment_3_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2741:1: ( rule__Function__ArgsAssignment_3_1_1 )
            {
             before(grammarAccess.getFunctionAccess().getArgsAssignment_3_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2742:1: ( rule__Function__ArgsAssignment_3_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2742:2: rule__Function__ArgsAssignment_3_1_1
            {
            pushFollow(FOLLOW_rule__Function__ArgsAssignment_3_1_1_in_rule__Function__Group_3_1__1__Impl5955);
            rule__Function__ArgsAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFunctionAccess().getArgsAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__Group_3_1__1__Impl"


    // $ANTLR start "rule__Block__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2756:1: rule__Block__Group__0 : rule__Block__Group__0__Impl rule__Block__Group__1 ;
    public final void rule__Block__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2760:1: ( rule__Block__Group__0__Impl rule__Block__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2761:2: rule__Block__Group__0__Impl rule__Block__Group__1
            {
            pushFollow(FOLLOW_rule__Block__Group__0__Impl_in_rule__Block__Group__05989);
            rule__Block__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Block__Group__1_in_rule__Block__Group__05992);
            rule__Block__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__0"


    // $ANTLR start "rule__Block__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2768:1: rule__Block__Group__0__Impl : ( () ) ;
    public final void rule__Block__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2772:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2773:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2773:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2774:1: ()
            {
             before(grammarAccess.getBlockAccess().getBlockAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2775:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2777:1: 
            {
            }

             after(grammarAccess.getBlockAccess().getBlockAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__0__Impl"


    // $ANTLR start "rule__Block__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2787:1: rule__Block__Group__1 : rule__Block__Group__1__Impl rule__Block__Group__2 ;
    public final void rule__Block__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2791:1: ( rule__Block__Group__1__Impl rule__Block__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2792:2: rule__Block__Group__1__Impl rule__Block__Group__2
            {
            pushFollow(FOLLOW_rule__Block__Group__1__Impl_in_rule__Block__Group__16050);
            rule__Block__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Block__Group__2_in_rule__Block__Group__16053);
            rule__Block__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__1"


    // $ANTLR start "rule__Block__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2799:1: rule__Block__Group__1__Impl : ( '{' ) ;
    public final void rule__Block__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2803:1: ( ( '{' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2804:1: ( '{' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2804:1: ( '{' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2805:1: '{'
            {
             before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); 
            match(input,50,FOLLOW_50_in_rule__Block__Group__1__Impl6081); 
             after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__1__Impl"


    // $ANTLR start "rule__Block__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2818:1: rule__Block__Group__2 : rule__Block__Group__2__Impl rule__Block__Group__3 ;
    public final void rule__Block__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2822:1: ( rule__Block__Group__2__Impl rule__Block__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2823:2: rule__Block__Group__2__Impl rule__Block__Group__3
            {
            pushFollow(FOLLOW_rule__Block__Group__2__Impl_in_rule__Block__Group__26112);
            rule__Block__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Block__Group__3_in_rule__Block__Group__26115);
            rule__Block__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__2"


    // $ANTLR start "rule__Block__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2830:1: rule__Block__Group__2__Impl : ( ( rule__Block__StatementsAssignment_2 )* ) ;
    public final void rule__Block__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2834:1: ( ( ( rule__Block__StatementsAssignment_2 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2835:1: ( ( rule__Block__StatementsAssignment_2 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2835:1: ( ( rule__Block__StatementsAssignment_2 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2836:1: ( rule__Block__StatementsAssignment_2 )*
            {
             before(grammarAccess.getBlockAccess().getStatementsAssignment_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2837:1: ( rule__Block__StatementsAssignment_2 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==RULE_ID||LA34_0==RULE_NUMBER||(LA34_0>=12 && LA34_0<=14)||LA34_0==47||LA34_0==50||(LA34_0>=53 && LA34_0<=54)||(LA34_0>=56 && LA34_0<=57)||LA34_0==71||(LA34_0>=74 && LA34_0<=76)||(LA34_0>=82 && LA34_0<=83)) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2837:2: rule__Block__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_rule__Block__StatementsAssignment_2_in_rule__Block__Group__2__Impl6142);
            	    rule__Block__StatementsAssignment_2();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

             after(grammarAccess.getBlockAccess().getStatementsAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__2__Impl"


    // $ANTLR start "rule__Block__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2847:1: rule__Block__Group__3 : rule__Block__Group__3__Impl ;
    public final void rule__Block__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2851:1: ( rule__Block__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2852:2: rule__Block__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__Block__Group__3__Impl_in_rule__Block__Group__36173);
            rule__Block__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__3"


    // $ANTLR start "rule__Block__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2858:1: rule__Block__Group__3__Impl : ( '}' ) ;
    public final void rule__Block__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2862:1: ( ( '}' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2863:1: ( '}' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2863:1: ( '}' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2864:1: '}'
            {
             before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); 
            match(input,51,FOLLOW_51_in_rule__Block__Group__3__Impl6201); 
             after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__Group__3__Impl"


    // $ANTLR start "rule__Statement__Group_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2885:1: rule__Statement__Group_0__0 : rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1 ;
    public final void rule__Statement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2889:1: ( rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2890:2: rule__Statement__Group_0__0__Impl rule__Statement__Group_0__1
            {
            pushFollow(FOLLOW_rule__Statement__Group_0__0__Impl_in_rule__Statement__Group_0__06240);
            rule__Statement__Group_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Statement__Group_0__1_in_rule__Statement__Group_0__06243);
            rule__Statement__Group_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__0"


    // $ANTLR start "rule__Statement__Group_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2897:1: rule__Statement__Group_0__0__Impl : ( ( rule__Statement__Alternatives_0_0 ) ) ;
    public final void rule__Statement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2901:1: ( ( ( rule__Statement__Alternatives_0_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2902:1: ( ( rule__Statement__Alternatives_0_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2902:1: ( ( rule__Statement__Alternatives_0_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2903:1: ( rule__Statement__Alternatives_0_0 )
            {
             before(grammarAccess.getStatementAccess().getAlternatives_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2904:1: ( rule__Statement__Alternatives_0_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2904:2: rule__Statement__Alternatives_0_0
            {
            pushFollow(FOLLOW_rule__Statement__Alternatives_0_0_in_rule__Statement__Group_0__0__Impl6270);
            rule__Statement__Alternatives_0_0();

            state._fsp--;


            }

             after(grammarAccess.getStatementAccess().getAlternatives_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__0__Impl"


    // $ANTLR start "rule__Statement__Group_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2914:1: rule__Statement__Group_0__1 : rule__Statement__Group_0__1__Impl ;
    public final void rule__Statement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2918:1: ( rule__Statement__Group_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2919:2: rule__Statement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Statement__Group_0__1__Impl_in_rule__Statement__Group_0__16300);
            rule__Statement__Group_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__1"


    // $ANTLR start "rule__Statement__Group_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2925:1: rule__Statement__Group_0__1__Impl : ( ';' ) ;
    public final void rule__Statement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2929:1: ( ( ';' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2930:1: ( ';' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2930:1: ( ';' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2931:1: ';'
            {
             before(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); 
            match(input,52,FOLLOW_52_in_rule__Statement__Group_0__1__Impl6328); 
             after(grammarAccess.getStatementAccess().getSemicolonKeyword_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Group_0__1__Impl"


    // $ANTLR start "rule__ReturnStatement__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2948:1: rule__ReturnStatement__Group__0 : rule__ReturnStatement__Group__0__Impl rule__ReturnStatement__Group__1 ;
    public final void rule__ReturnStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2952:1: ( rule__ReturnStatement__Group__0__Impl rule__ReturnStatement__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2953:2: rule__ReturnStatement__Group__0__Impl rule__ReturnStatement__Group__1
            {
            pushFollow(FOLLOW_rule__ReturnStatement__Group__0__Impl_in_rule__ReturnStatement__Group__06363);
            rule__ReturnStatement__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReturnStatement__Group__1_in_rule__ReturnStatement__Group__06366);
            rule__ReturnStatement__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStatement__Group__0"


    // $ANTLR start "rule__ReturnStatement__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2960:1: rule__ReturnStatement__Group__0__Impl : ( () ) ;
    public final void rule__ReturnStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2964:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2965:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2965:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2966:1: ()
            {
             before(grammarAccess.getReturnStatementAccess().getReturnAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2967:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2969:1: 
            {
            }

             after(grammarAccess.getReturnStatementAccess().getReturnAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStatement__Group__0__Impl"


    // $ANTLR start "rule__ReturnStatement__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2979:1: rule__ReturnStatement__Group__1 : rule__ReturnStatement__Group__1__Impl rule__ReturnStatement__Group__2 ;
    public final void rule__ReturnStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2983:1: ( rule__ReturnStatement__Group__1__Impl rule__ReturnStatement__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2984:2: rule__ReturnStatement__Group__1__Impl rule__ReturnStatement__Group__2
            {
            pushFollow(FOLLOW_rule__ReturnStatement__Group__1__Impl_in_rule__ReturnStatement__Group__16424);
            rule__ReturnStatement__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReturnStatement__Group__2_in_rule__ReturnStatement__Group__16427);
            rule__ReturnStatement__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStatement__Group__1"


    // $ANTLR start "rule__ReturnStatement__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2991:1: rule__ReturnStatement__Group__1__Impl : ( 'return' ) ;
    public final void rule__ReturnStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2995:1: ( ( 'return' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2996:1: ( 'return' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2996:1: ( 'return' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:2997:1: 'return'
            {
             before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); 
            match(input,53,FOLLOW_53_in_rule__ReturnStatement__Group__1__Impl6455); 
             after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStatement__Group__1__Impl"


    // $ANTLR start "rule__ReturnStatement__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3010:1: rule__ReturnStatement__Group__2 : rule__ReturnStatement__Group__2__Impl ;
    public final void rule__ReturnStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3014:1: ( rule__ReturnStatement__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3015:2: rule__ReturnStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ReturnStatement__Group__2__Impl_in_rule__ReturnStatement__Group__26486);
            rule__ReturnStatement__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStatement__Group__2"


    // $ANTLR start "rule__ReturnStatement__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3021:1: rule__ReturnStatement__Group__2__Impl : ( ( rule__ReturnStatement__ExpressionAssignment_2 )? ) ;
    public final void rule__ReturnStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3025:1: ( ( ( rule__ReturnStatement__ExpressionAssignment_2 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3026:1: ( ( rule__ReturnStatement__ExpressionAssignment_2 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3026:1: ( ( rule__ReturnStatement__ExpressionAssignment_2 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3027:1: ( rule__ReturnStatement__ExpressionAssignment_2 )?
            {
             before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3028:1: ( rule__ReturnStatement__ExpressionAssignment_2 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==RULE_ID||LA35_0==RULE_NUMBER||(LA35_0>=12 && LA35_0<=14)||LA35_0==47||LA35_0==71||(LA35_0>=74 && LA35_0<=76)||(LA35_0>=82 && LA35_0<=83)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3028:2: rule__ReturnStatement__ExpressionAssignment_2
                    {
                    pushFollow(FOLLOW_rule__ReturnStatement__ExpressionAssignment_2_in_rule__ReturnStatement__Group__2__Impl6513);
                    rule__ReturnStatement__ExpressionAssignment_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStatement__Group__2__Impl"


    // $ANTLR start "rule__IfStatement__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3044:1: rule__IfStatement__Group__0 : rule__IfStatement__Group__0__Impl rule__IfStatement__Group__1 ;
    public final void rule__IfStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3048:1: ( rule__IfStatement__Group__0__Impl rule__IfStatement__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3049:2: rule__IfStatement__Group__0__Impl rule__IfStatement__Group__1
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__0__Impl_in_rule__IfStatement__Group__06550);
            rule__IfStatement__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IfStatement__Group__1_in_rule__IfStatement__Group__06553);
            rule__IfStatement__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__0"


    // $ANTLR start "rule__IfStatement__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3056:1: rule__IfStatement__Group__0__Impl : ( () ) ;
    public final void rule__IfStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3060:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3061:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3061:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3062:1: ()
            {
             before(grammarAccess.getIfStatementAccess().getIfAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3063:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3065:1: 
            {
            }

             after(grammarAccess.getIfStatementAccess().getIfAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__0__Impl"


    // $ANTLR start "rule__IfStatement__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3075:1: rule__IfStatement__Group__1 : rule__IfStatement__Group__1__Impl rule__IfStatement__Group__2 ;
    public final void rule__IfStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3079:1: ( rule__IfStatement__Group__1__Impl rule__IfStatement__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3080:2: rule__IfStatement__Group__1__Impl rule__IfStatement__Group__2
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__1__Impl_in_rule__IfStatement__Group__16611);
            rule__IfStatement__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IfStatement__Group__2_in_rule__IfStatement__Group__16614);
            rule__IfStatement__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__1"


    // $ANTLR start "rule__IfStatement__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3087:1: rule__IfStatement__Group__1__Impl : ( 'if' ) ;
    public final void rule__IfStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3091:1: ( ( 'if' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3092:1: ( 'if' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3092:1: ( 'if' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3093:1: 'if'
            {
             before(grammarAccess.getIfStatementAccess().getIfKeyword_1()); 
            match(input,54,FOLLOW_54_in_rule__IfStatement__Group__1__Impl6642); 
             after(grammarAccess.getIfStatementAccess().getIfKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__1__Impl"


    // $ANTLR start "rule__IfStatement__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3106:1: rule__IfStatement__Group__2 : rule__IfStatement__Group__2__Impl rule__IfStatement__Group__3 ;
    public final void rule__IfStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3110:1: ( rule__IfStatement__Group__2__Impl rule__IfStatement__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3111:2: rule__IfStatement__Group__2__Impl rule__IfStatement__Group__3
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__2__Impl_in_rule__IfStatement__Group__26673);
            rule__IfStatement__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IfStatement__Group__3_in_rule__IfStatement__Group__26676);
            rule__IfStatement__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__2"


    // $ANTLR start "rule__IfStatement__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3118:1: rule__IfStatement__Group__2__Impl : ( '(' ) ;
    public final void rule__IfStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3122:1: ( ( '(' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3123:1: ( '(' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3123:1: ( '(' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3124:1: '('
            {
             before(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); 
            match(input,47,FOLLOW_47_in_rule__IfStatement__Group__2__Impl6704); 
             after(grammarAccess.getIfStatementAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__2__Impl"


    // $ANTLR start "rule__IfStatement__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3137:1: rule__IfStatement__Group__3 : rule__IfStatement__Group__3__Impl rule__IfStatement__Group__4 ;
    public final void rule__IfStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3141:1: ( rule__IfStatement__Group__3__Impl rule__IfStatement__Group__4 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3142:2: rule__IfStatement__Group__3__Impl rule__IfStatement__Group__4
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__3__Impl_in_rule__IfStatement__Group__36735);
            rule__IfStatement__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IfStatement__Group__4_in_rule__IfStatement__Group__36738);
            rule__IfStatement__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__3"


    // $ANTLR start "rule__IfStatement__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3149:1: rule__IfStatement__Group__3__Impl : ( ( rule__IfStatement__IfAssignment_3 ) ) ;
    public final void rule__IfStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3153:1: ( ( ( rule__IfStatement__IfAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3154:1: ( ( rule__IfStatement__IfAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3154:1: ( ( rule__IfStatement__IfAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3155:1: ( rule__IfStatement__IfAssignment_3 )
            {
             before(grammarAccess.getIfStatementAccess().getIfAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3156:1: ( rule__IfStatement__IfAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3156:2: rule__IfStatement__IfAssignment_3
            {
            pushFollow(FOLLOW_rule__IfStatement__IfAssignment_3_in_rule__IfStatement__Group__3__Impl6765);
            rule__IfStatement__IfAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getIfStatementAccess().getIfAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__3__Impl"


    // $ANTLR start "rule__IfStatement__Group__4"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3166:1: rule__IfStatement__Group__4 : rule__IfStatement__Group__4__Impl rule__IfStatement__Group__5 ;
    public final void rule__IfStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3170:1: ( rule__IfStatement__Group__4__Impl rule__IfStatement__Group__5 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3171:2: rule__IfStatement__Group__4__Impl rule__IfStatement__Group__5
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__4__Impl_in_rule__IfStatement__Group__46795);
            rule__IfStatement__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IfStatement__Group__5_in_rule__IfStatement__Group__46798);
            rule__IfStatement__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__4"


    // $ANTLR start "rule__IfStatement__Group__4__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3178:1: rule__IfStatement__Group__4__Impl : ( ')' ) ;
    public final void rule__IfStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3182:1: ( ( ')' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3183:1: ( ')' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3183:1: ( ')' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3184:1: ')'
            {
             before(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); 
            match(input,48,FOLLOW_48_in_rule__IfStatement__Group__4__Impl6826); 
             after(grammarAccess.getIfStatementAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__4__Impl"


    // $ANTLR start "rule__IfStatement__Group__5"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3197:1: rule__IfStatement__Group__5 : rule__IfStatement__Group__5__Impl rule__IfStatement__Group__6 ;
    public final void rule__IfStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3201:1: ( rule__IfStatement__Group__5__Impl rule__IfStatement__Group__6 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3202:2: rule__IfStatement__Group__5__Impl rule__IfStatement__Group__6
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__5__Impl_in_rule__IfStatement__Group__56857);
            rule__IfStatement__Group__5__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IfStatement__Group__6_in_rule__IfStatement__Group__56860);
            rule__IfStatement__Group__6();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__5"


    // $ANTLR start "rule__IfStatement__Group__5__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3209:1: rule__IfStatement__Group__5__Impl : ( ( rule__IfStatement__ThenAssignment_5 ) ) ;
    public final void rule__IfStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3213:1: ( ( ( rule__IfStatement__ThenAssignment_5 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3214:1: ( ( rule__IfStatement__ThenAssignment_5 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3214:1: ( ( rule__IfStatement__ThenAssignment_5 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3215:1: ( rule__IfStatement__ThenAssignment_5 )
            {
             before(grammarAccess.getIfStatementAccess().getThenAssignment_5()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3216:1: ( rule__IfStatement__ThenAssignment_5 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3216:2: rule__IfStatement__ThenAssignment_5
            {
            pushFollow(FOLLOW_rule__IfStatement__ThenAssignment_5_in_rule__IfStatement__Group__5__Impl6887);
            rule__IfStatement__ThenAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getIfStatementAccess().getThenAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__5__Impl"


    // $ANTLR start "rule__IfStatement__Group__6"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3226:1: rule__IfStatement__Group__6 : rule__IfStatement__Group__6__Impl ;
    public final void rule__IfStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3230:1: ( rule__IfStatement__Group__6__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3231:2: rule__IfStatement__Group__6__Impl
            {
            pushFollow(FOLLOW_rule__IfStatement__Group__6__Impl_in_rule__IfStatement__Group__66917);
            rule__IfStatement__Group__6__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__6"


    // $ANTLR start "rule__IfStatement__Group__6__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3237:1: rule__IfStatement__Group__6__Impl : ( ( rule__IfStatement__Group_6__0 )? ) ;
    public final void rule__IfStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3241:1: ( ( ( rule__IfStatement__Group_6__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3242:1: ( ( rule__IfStatement__Group_6__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3242:1: ( ( rule__IfStatement__Group_6__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3243:1: ( rule__IfStatement__Group_6__0 )?
            {
             before(grammarAccess.getIfStatementAccess().getGroup_6()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3244:1: ( rule__IfStatement__Group_6__0 )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==55) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3244:2: rule__IfStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_rule__IfStatement__Group_6__0_in_rule__IfStatement__Group__6__Impl6944);
                    rule__IfStatement__Group_6__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getIfStatementAccess().getGroup_6()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group__6__Impl"


    // $ANTLR start "rule__IfStatement__Group_6__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3268:1: rule__IfStatement__Group_6__0 : rule__IfStatement__Group_6__0__Impl rule__IfStatement__Group_6__1 ;
    public final void rule__IfStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3272:1: ( rule__IfStatement__Group_6__0__Impl rule__IfStatement__Group_6__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3273:2: rule__IfStatement__Group_6__0__Impl rule__IfStatement__Group_6__1
            {
            pushFollow(FOLLOW_rule__IfStatement__Group_6__0__Impl_in_rule__IfStatement__Group_6__06989);
            rule__IfStatement__Group_6__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IfStatement__Group_6__1_in_rule__IfStatement__Group_6__06992);
            rule__IfStatement__Group_6__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__0"


    // $ANTLR start "rule__IfStatement__Group_6__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3280:1: rule__IfStatement__Group_6__0__Impl : ( 'else' ) ;
    public final void rule__IfStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3284:1: ( ( 'else' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3285:1: ( 'else' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3285:1: ( 'else' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3286:1: 'else'
            {
             before(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); 
            match(input,55,FOLLOW_55_in_rule__IfStatement__Group_6__0__Impl7020); 
             after(grammarAccess.getIfStatementAccess().getElseKeyword_6_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__0__Impl"


    // $ANTLR start "rule__IfStatement__Group_6__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3299:1: rule__IfStatement__Group_6__1 : rule__IfStatement__Group_6__1__Impl ;
    public final void rule__IfStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3303:1: ( rule__IfStatement__Group_6__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3304:2: rule__IfStatement__Group_6__1__Impl
            {
            pushFollow(FOLLOW_rule__IfStatement__Group_6__1__Impl_in_rule__IfStatement__Group_6__17051);
            rule__IfStatement__Group_6__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__1"


    // $ANTLR start "rule__IfStatement__Group_6__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3310:1: rule__IfStatement__Group_6__1__Impl : ( ( rule__IfStatement__ElseAssignment_6_1 ) ) ;
    public final void rule__IfStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3314:1: ( ( ( rule__IfStatement__ElseAssignment_6_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3315:1: ( ( rule__IfStatement__ElseAssignment_6_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3315:1: ( ( rule__IfStatement__ElseAssignment_6_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3316:1: ( rule__IfStatement__ElseAssignment_6_1 )
            {
             before(grammarAccess.getIfStatementAccess().getElseAssignment_6_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3317:1: ( rule__IfStatement__ElseAssignment_6_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3317:2: rule__IfStatement__ElseAssignment_6_1
            {
            pushFollow(FOLLOW_rule__IfStatement__ElseAssignment_6_1_in_rule__IfStatement__Group_6__1__Impl7078);
            rule__IfStatement__ElseAssignment_6_1();

            state._fsp--;


            }

             after(grammarAccess.getIfStatementAccess().getElseAssignment_6_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__Group_6__1__Impl"


    // $ANTLR start "rule__WhileStatement__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3331:1: rule__WhileStatement__Group__0 : rule__WhileStatement__Group__0__Impl rule__WhileStatement__Group__1 ;
    public final void rule__WhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3335:1: ( rule__WhileStatement__Group__0__Impl rule__WhileStatement__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3336:2: rule__WhileStatement__Group__0__Impl rule__WhileStatement__Group__1
            {
            pushFollow(FOLLOW_rule__WhileStatement__Group__0__Impl_in_rule__WhileStatement__Group__07112);
            rule__WhileStatement__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WhileStatement__Group__1_in_rule__WhileStatement__Group__07115);
            rule__WhileStatement__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__0"


    // $ANTLR start "rule__WhileStatement__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3343:1: rule__WhileStatement__Group__0__Impl : ( () ) ;
    public final void rule__WhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3347:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3348:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3348:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3349:1: ()
            {
             before(grammarAccess.getWhileStatementAccess().getWhileAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3350:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3352:1: 
            {
            }

             after(grammarAccess.getWhileStatementAccess().getWhileAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__0__Impl"


    // $ANTLR start "rule__WhileStatement__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3362:1: rule__WhileStatement__Group__1 : rule__WhileStatement__Group__1__Impl rule__WhileStatement__Group__2 ;
    public final void rule__WhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3366:1: ( rule__WhileStatement__Group__1__Impl rule__WhileStatement__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3367:2: rule__WhileStatement__Group__1__Impl rule__WhileStatement__Group__2
            {
            pushFollow(FOLLOW_rule__WhileStatement__Group__1__Impl_in_rule__WhileStatement__Group__17173);
            rule__WhileStatement__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WhileStatement__Group__2_in_rule__WhileStatement__Group__17176);
            rule__WhileStatement__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__1"


    // $ANTLR start "rule__WhileStatement__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3374:1: rule__WhileStatement__Group__1__Impl : ( 'while' ) ;
    public final void rule__WhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3378:1: ( ( 'while' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3379:1: ( 'while' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3379:1: ( 'while' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3380:1: 'while'
            {
             before(grammarAccess.getWhileStatementAccess().getWhileKeyword_1()); 
            match(input,56,FOLLOW_56_in_rule__WhileStatement__Group__1__Impl7204); 
             after(grammarAccess.getWhileStatementAccess().getWhileKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__1__Impl"


    // $ANTLR start "rule__WhileStatement__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3393:1: rule__WhileStatement__Group__2 : rule__WhileStatement__Group__2__Impl rule__WhileStatement__Group__3 ;
    public final void rule__WhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3397:1: ( rule__WhileStatement__Group__2__Impl rule__WhileStatement__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3398:2: rule__WhileStatement__Group__2__Impl rule__WhileStatement__Group__3
            {
            pushFollow(FOLLOW_rule__WhileStatement__Group__2__Impl_in_rule__WhileStatement__Group__27235);
            rule__WhileStatement__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WhileStatement__Group__3_in_rule__WhileStatement__Group__27238);
            rule__WhileStatement__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__2"


    // $ANTLR start "rule__WhileStatement__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3405:1: rule__WhileStatement__Group__2__Impl : ( '(' ) ;
    public final void rule__WhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3409:1: ( ( '(' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3410:1: ( '(' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3410:1: ( '(' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3411:1: '('
            {
             before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_2()); 
            match(input,47,FOLLOW_47_in_rule__WhileStatement__Group__2__Impl7266); 
             after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__2__Impl"


    // $ANTLR start "rule__WhileStatement__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3424:1: rule__WhileStatement__Group__3 : rule__WhileStatement__Group__3__Impl rule__WhileStatement__Group__4 ;
    public final void rule__WhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3428:1: ( rule__WhileStatement__Group__3__Impl rule__WhileStatement__Group__4 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3429:2: rule__WhileStatement__Group__3__Impl rule__WhileStatement__Group__4
            {
            pushFollow(FOLLOW_rule__WhileStatement__Group__3__Impl_in_rule__WhileStatement__Group__37297);
            rule__WhileStatement__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WhileStatement__Group__4_in_rule__WhileStatement__Group__37300);
            rule__WhileStatement__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__3"


    // $ANTLR start "rule__WhileStatement__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3436:1: rule__WhileStatement__Group__3__Impl : ( ( rule__WhileStatement__PredicateAssignment_3 ) ) ;
    public final void rule__WhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3440:1: ( ( ( rule__WhileStatement__PredicateAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3441:1: ( ( rule__WhileStatement__PredicateAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3441:1: ( ( rule__WhileStatement__PredicateAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3442:1: ( rule__WhileStatement__PredicateAssignment_3 )
            {
             before(grammarAccess.getWhileStatementAccess().getPredicateAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3443:1: ( rule__WhileStatement__PredicateAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3443:2: rule__WhileStatement__PredicateAssignment_3
            {
            pushFollow(FOLLOW_rule__WhileStatement__PredicateAssignment_3_in_rule__WhileStatement__Group__3__Impl7327);
            rule__WhileStatement__PredicateAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getWhileStatementAccess().getPredicateAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__3__Impl"


    // $ANTLR start "rule__WhileStatement__Group__4"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3453:1: rule__WhileStatement__Group__4 : rule__WhileStatement__Group__4__Impl rule__WhileStatement__Group__5 ;
    public final void rule__WhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3457:1: ( rule__WhileStatement__Group__4__Impl rule__WhileStatement__Group__5 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3458:2: rule__WhileStatement__Group__4__Impl rule__WhileStatement__Group__5
            {
            pushFollow(FOLLOW_rule__WhileStatement__Group__4__Impl_in_rule__WhileStatement__Group__47357);
            rule__WhileStatement__Group__4__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__WhileStatement__Group__5_in_rule__WhileStatement__Group__47360);
            rule__WhileStatement__Group__5();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__4"


    // $ANTLR start "rule__WhileStatement__Group__4__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3465:1: rule__WhileStatement__Group__4__Impl : ( ')' ) ;
    public final void rule__WhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3469:1: ( ( ')' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3470:1: ( ')' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3470:1: ( ')' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3471:1: ')'
            {
             before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_4()); 
            match(input,48,FOLLOW_48_in_rule__WhileStatement__Group__4__Impl7388); 
             after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__4__Impl"


    // $ANTLR start "rule__WhileStatement__Group__5"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3484:1: rule__WhileStatement__Group__5 : rule__WhileStatement__Group__5__Impl ;
    public final void rule__WhileStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3488:1: ( rule__WhileStatement__Group__5__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3489:2: rule__WhileStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_rule__WhileStatement__Group__5__Impl_in_rule__WhileStatement__Group__57419);
            rule__WhileStatement__Group__5__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__5"


    // $ANTLR start "rule__WhileStatement__Group__5__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3495:1: rule__WhileStatement__Group__5__Impl : ( ( rule__WhileStatement__BodyAssignment_5 ) ) ;
    public final void rule__WhileStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3499:1: ( ( ( rule__WhileStatement__BodyAssignment_5 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3500:1: ( ( rule__WhileStatement__BodyAssignment_5 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3500:1: ( ( rule__WhileStatement__BodyAssignment_5 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3501:1: ( rule__WhileStatement__BodyAssignment_5 )
            {
             before(grammarAccess.getWhileStatementAccess().getBodyAssignment_5()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3502:1: ( rule__WhileStatement__BodyAssignment_5 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3502:2: rule__WhileStatement__BodyAssignment_5
            {
            pushFollow(FOLLOW_rule__WhileStatement__BodyAssignment_5_in_rule__WhileStatement__Group__5__Impl7446);
            rule__WhileStatement__BodyAssignment_5();

            state._fsp--;


            }

             after(grammarAccess.getWhileStatementAccess().getBodyAssignment_5()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__Group__5__Impl"


    // $ANTLR start "rule__VariableStatement__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3524:1: rule__VariableStatement__Group__0 : rule__VariableStatement__Group__0__Impl rule__VariableStatement__Group__1 ;
    public final void rule__VariableStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3528:1: ( rule__VariableStatement__Group__0__Impl rule__VariableStatement__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3529:2: rule__VariableStatement__Group__0__Impl rule__VariableStatement__Group__1
            {
            pushFollow(FOLLOW_rule__VariableStatement__Group__0__Impl_in_rule__VariableStatement__Group__07488);
            rule__VariableStatement__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__VariableStatement__Group__1_in_rule__VariableStatement__Group__07491);
            rule__VariableStatement__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__0"


    // $ANTLR start "rule__VariableStatement__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3536:1: rule__VariableStatement__Group__0__Impl : ( () ) ;
    public final void rule__VariableStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3540:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3541:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3541:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3542:1: ()
            {
             before(grammarAccess.getVariableStatementAccess().getVariableAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3543:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3545:1: 
            {
            }

             after(grammarAccess.getVariableStatementAccess().getVariableAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__0__Impl"


    // $ANTLR start "rule__VariableStatement__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3555:1: rule__VariableStatement__Group__1 : rule__VariableStatement__Group__1__Impl rule__VariableStatement__Group__2 ;
    public final void rule__VariableStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3559:1: ( rule__VariableStatement__Group__1__Impl rule__VariableStatement__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3560:2: rule__VariableStatement__Group__1__Impl rule__VariableStatement__Group__2
            {
            pushFollow(FOLLOW_rule__VariableStatement__Group__1__Impl_in_rule__VariableStatement__Group__17549);
            rule__VariableStatement__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__VariableStatement__Group__2_in_rule__VariableStatement__Group__17552);
            rule__VariableStatement__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__1"


    // $ANTLR start "rule__VariableStatement__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3567:1: rule__VariableStatement__Group__1__Impl : ( 'var' ) ;
    public final void rule__VariableStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3571:1: ( ( 'var' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3572:1: ( 'var' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3572:1: ( 'var' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3573:1: 'var'
            {
             before(grammarAccess.getVariableStatementAccess().getVarKeyword_1()); 
            match(input,57,FOLLOW_57_in_rule__VariableStatement__Group__1__Impl7580); 
             after(grammarAccess.getVariableStatementAccess().getVarKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__1__Impl"


    // $ANTLR start "rule__VariableStatement__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3586:1: rule__VariableStatement__Group__2 : rule__VariableStatement__Group__2__Impl rule__VariableStatement__Group__3 ;
    public final void rule__VariableStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3590:1: ( rule__VariableStatement__Group__2__Impl rule__VariableStatement__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3591:2: rule__VariableStatement__Group__2__Impl rule__VariableStatement__Group__3
            {
            pushFollow(FOLLOW_rule__VariableStatement__Group__2__Impl_in_rule__VariableStatement__Group__27611);
            rule__VariableStatement__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__VariableStatement__Group__3_in_rule__VariableStatement__Group__27614);
            rule__VariableStatement__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__2"


    // $ANTLR start "rule__VariableStatement__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3598:1: rule__VariableStatement__Group__2__Impl : ( ( rule__VariableStatement__NameAssignment_2 ) ) ;
    public final void rule__VariableStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3602:1: ( ( ( rule__VariableStatement__NameAssignment_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3603:1: ( ( rule__VariableStatement__NameAssignment_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3603:1: ( ( rule__VariableStatement__NameAssignment_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3604:1: ( rule__VariableStatement__NameAssignment_2 )
            {
             before(grammarAccess.getVariableStatementAccess().getNameAssignment_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3605:1: ( rule__VariableStatement__NameAssignment_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3605:2: rule__VariableStatement__NameAssignment_2
            {
            pushFollow(FOLLOW_rule__VariableStatement__NameAssignment_2_in_rule__VariableStatement__Group__2__Impl7641);
            rule__VariableStatement__NameAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getVariableStatementAccess().getNameAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__2__Impl"


    // $ANTLR start "rule__VariableStatement__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3615:1: rule__VariableStatement__Group__3 : rule__VariableStatement__Group__3__Impl ;
    public final void rule__VariableStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3619:1: ( rule__VariableStatement__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3620:2: rule__VariableStatement__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__VariableStatement__Group__3__Impl_in_rule__VariableStatement__Group__37671);
            rule__VariableStatement__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__3"


    // $ANTLR start "rule__VariableStatement__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3626:1: rule__VariableStatement__Group__3__Impl : ( ( rule__VariableStatement__Group_3__0 )? ) ;
    public final void rule__VariableStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3630:1: ( ( ( rule__VariableStatement__Group_3__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3631:1: ( ( rule__VariableStatement__Group_3__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3631:1: ( ( rule__VariableStatement__Group_3__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3632:1: ( rule__VariableStatement__Group_3__0 )?
            {
             before(grammarAccess.getVariableStatementAccess().getGroup_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3633:1: ( rule__VariableStatement__Group_3__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==58) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3633:2: rule__VariableStatement__Group_3__0
                    {
                    pushFollow(FOLLOW_rule__VariableStatement__Group_3__0_in_rule__VariableStatement__Group__3__Impl7698);
                    rule__VariableStatement__Group_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getVariableStatementAccess().getGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group__3__Impl"


    // $ANTLR start "rule__VariableStatement__Group_3__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3651:1: rule__VariableStatement__Group_3__0 : rule__VariableStatement__Group_3__0__Impl rule__VariableStatement__Group_3__1 ;
    public final void rule__VariableStatement__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3655:1: ( rule__VariableStatement__Group_3__0__Impl rule__VariableStatement__Group_3__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3656:2: rule__VariableStatement__Group_3__0__Impl rule__VariableStatement__Group_3__1
            {
            pushFollow(FOLLOW_rule__VariableStatement__Group_3__0__Impl_in_rule__VariableStatement__Group_3__07737);
            rule__VariableStatement__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__VariableStatement__Group_3__1_in_rule__VariableStatement__Group_3__07740);
            rule__VariableStatement__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group_3__0"


    // $ANTLR start "rule__VariableStatement__Group_3__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3663:1: rule__VariableStatement__Group_3__0__Impl : ( '=' ) ;
    public final void rule__VariableStatement__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3667:1: ( ( '=' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3668:1: ( '=' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3668:1: ( '=' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3669:1: '='
            {
             before(grammarAccess.getVariableStatementAccess().getEqualsSignKeyword_3_0()); 
            match(input,58,FOLLOW_58_in_rule__VariableStatement__Group_3__0__Impl7768); 
             after(grammarAccess.getVariableStatementAccess().getEqualsSignKeyword_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group_3__0__Impl"


    // $ANTLR start "rule__VariableStatement__Group_3__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3682:1: rule__VariableStatement__Group_3__1 : rule__VariableStatement__Group_3__1__Impl ;
    public final void rule__VariableStatement__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3686:1: ( rule__VariableStatement__Group_3__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3687:2: rule__VariableStatement__Group_3__1__Impl
            {
            pushFollow(FOLLOW_rule__VariableStatement__Group_3__1__Impl_in_rule__VariableStatement__Group_3__17799);
            rule__VariableStatement__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group_3__1"


    // $ANTLR start "rule__VariableStatement__Group_3__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3693:1: rule__VariableStatement__Group_3__1__Impl : ( ( rule__VariableStatement__ExpressionAssignment_3_1 ) ) ;
    public final void rule__VariableStatement__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3697:1: ( ( ( rule__VariableStatement__ExpressionAssignment_3_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3698:1: ( ( rule__VariableStatement__ExpressionAssignment_3_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3698:1: ( ( rule__VariableStatement__ExpressionAssignment_3_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3699:1: ( rule__VariableStatement__ExpressionAssignment_3_1 )
            {
             before(grammarAccess.getVariableStatementAccess().getExpressionAssignment_3_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3700:1: ( rule__VariableStatement__ExpressionAssignment_3_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3700:2: rule__VariableStatement__ExpressionAssignment_3_1
            {
            pushFollow(FOLLOW_rule__VariableStatement__ExpressionAssignment_3_1_in_rule__VariableStatement__Group_3__1__Impl7826);
            rule__VariableStatement__ExpressionAssignment_3_1();

            state._fsp--;


            }

             after(grammarAccess.getVariableStatementAccess().getExpressionAssignment_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__Group_3__1__Impl"


    // $ANTLR start "rule__AssignmentStatement__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3714:1: rule__AssignmentStatement__Group__0 : rule__AssignmentStatement__Group__0__Impl rule__AssignmentStatement__Group__1 ;
    public final void rule__AssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3718:1: ( rule__AssignmentStatement__Group__0__Impl rule__AssignmentStatement__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3719:2: rule__AssignmentStatement__Group__0__Impl rule__AssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_rule__AssignmentStatement__Group__0__Impl_in_rule__AssignmentStatement__Group__07860);
            rule__AssignmentStatement__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AssignmentStatement__Group__1_in_rule__AssignmentStatement__Group__07863);
            rule__AssignmentStatement__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__0"


    // $ANTLR start "rule__AssignmentStatement__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3726:1: rule__AssignmentStatement__Group__0__Impl : ( () ) ;
    public final void rule__AssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3730:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3731:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3731:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3732:1: ()
            {
             before(grammarAccess.getAssignmentStatementAccess().getAssignmentAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3733:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3735:1: 
            {
            }

             after(grammarAccess.getAssignmentStatementAccess().getAssignmentAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__AssignmentStatement__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3745:1: rule__AssignmentStatement__Group__1 : rule__AssignmentStatement__Group__1__Impl rule__AssignmentStatement__Group__2 ;
    public final void rule__AssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3749:1: ( rule__AssignmentStatement__Group__1__Impl rule__AssignmentStatement__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3750:2: rule__AssignmentStatement__Group__1__Impl rule__AssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_rule__AssignmentStatement__Group__1__Impl_in_rule__AssignmentStatement__Group__17921);
            rule__AssignmentStatement__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AssignmentStatement__Group__2_in_rule__AssignmentStatement__Group__17924);
            rule__AssignmentStatement__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__1"


    // $ANTLR start "rule__AssignmentStatement__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3757:1: rule__AssignmentStatement__Group__1__Impl : ( ( rule__AssignmentStatement__VarAssignment_1 ) ) ;
    public final void rule__AssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3761:1: ( ( ( rule__AssignmentStatement__VarAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3762:1: ( ( rule__AssignmentStatement__VarAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3762:1: ( ( rule__AssignmentStatement__VarAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3763:1: ( rule__AssignmentStatement__VarAssignment_1 )
            {
             before(grammarAccess.getAssignmentStatementAccess().getVarAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3764:1: ( rule__AssignmentStatement__VarAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3764:2: rule__AssignmentStatement__VarAssignment_1
            {
            pushFollow(FOLLOW_rule__AssignmentStatement__VarAssignment_1_in_rule__AssignmentStatement__Group__1__Impl7951);
            rule__AssignmentStatement__VarAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getAssignmentStatementAccess().getVarAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__AssignmentStatement__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3774:1: rule__AssignmentStatement__Group__2 : rule__AssignmentStatement__Group__2__Impl rule__AssignmentStatement__Group__3 ;
    public final void rule__AssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3778:1: ( rule__AssignmentStatement__Group__2__Impl rule__AssignmentStatement__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3779:2: rule__AssignmentStatement__Group__2__Impl rule__AssignmentStatement__Group__3
            {
            pushFollow(FOLLOW_rule__AssignmentStatement__Group__2__Impl_in_rule__AssignmentStatement__Group__27981);
            rule__AssignmentStatement__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__AssignmentStatement__Group__3_in_rule__AssignmentStatement__Group__27984);
            rule__AssignmentStatement__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__2"


    // $ANTLR start "rule__AssignmentStatement__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3786:1: rule__AssignmentStatement__Group__2__Impl : ( '=' ) ;
    public final void rule__AssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3790:1: ( ( '=' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3791:1: ( '=' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3791:1: ( '=' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3792:1: '='
            {
             before(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_2()); 
            match(input,58,FOLLOW_58_in_rule__AssignmentStatement__Group__2__Impl8012); 
             after(grammarAccess.getAssignmentStatementAccess().getEqualsSignKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__AssignmentStatement__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3805:1: rule__AssignmentStatement__Group__3 : rule__AssignmentStatement__Group__3__Impl ;
    public final void rule__AssignmentStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3809:1: ( rule__AssignmentStatement__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3810:2: rule__AssignmentStatement__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__AssignmentStatement__Group__3__Impl_in_rule__AssignmentStatement__Group__38043);
            rule__AssignmentStatement__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__3"


    // $ANTLR start "rule__AssignmentStatement__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3816:1: rule__AssignmentStatement__Group__3__Impl : ( ( rule__AssignmentStatement__ExpressionAssignment_3 ) ) ;
    public final void rule__AssignmentStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3820:1: ( ( ( rule__AssignmentStatement__ExpressionAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3821:1: ( ( rule__AssignmentStatement__ExpressionAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3821:1: ( ( rule__AssignmentStatement__ExpressionAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3822:1: ( rule__AssignmentStatement__ExpressionAssignment_3 )
            {
             before(grammarAccess.getAssignmentStatementAccess().getExpressionAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3823:1: ( rule__AssignmentStatement__ExpressionAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3823:2: rule__AssignmentStatement__ExpressionAssignment_3
            {
            pushFollow(FOLLOW_rule__AssignmentStatement__ExpressionAssignment_3_in_rule__AssignmentStatement__Group__3__Impl8070);
            rule__AssignmentStatement__ExpressionAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getAssignmentStatementAccess().getExpressionAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__Group__3__Impl"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3841:1: rule__PlusAssignmentStatement__Group__0 : rule__PlusAssignmentStatement__Group__0__Impl rule__PlusAssignmentStatement__Group__1 ;
    public final void rule__PlusAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3845:1: ( rule__PlusAssignmentStatement__Group__0__Impl rule__PlusAssignmentStatement__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3846:2: rule__PlusAssignmentStatement__Group__0__Impl rule__PlusAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__0__Impl_in_rule__PlusAssignmentStatement__Group__08108);
            rule__PlusAssignmentStatement__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__1_in_rule__PlusAssignmentStatement__Group__08111);
            rule__PlusAssignmentStatement__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__0"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3853:1: rule__PlusAssignmentStatement__Group__0__Impl : ( () ) ;
    public final void rule__PlusAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3857:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3858:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3858:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3859:1: ()
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getPlusAssignmentAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3860:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3862:1: 
            {
            }

             after(grammarAccess.getPlusAssignmentStatementAccess().getPlusAssignmentAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3872:1: rule__PlusAssignmentStatement__Group__1 : rule__PlusAssignmentStatement__Group__1__Impl rule__PlusAssignmentStatement__Group__2 ;
    public final void rule__PlusAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3876:1: ( rule__PlusAssignmentStatement__Group__1__Impl rule__PlusAssignmentStatement__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3877:2: rule__PlusAssignmentStatement__Group__1__Impl rule__PlusAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__1__Impl_in_rule__PlusAssignmentStatement__Group__18169);
            rule__PlusAssignmentStatement__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__2_in_rule__PlusAssignmentStatement__Group__18172);
            rule__PlusAssignmentStatement__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__1"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3884:1: rule__PlusAssignmentStatement__Group__1__Impl : ( ( rule__PlusAssignmentStatement__VarAssignment_1 ) ) ;
    public final void rule__PlusAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3888:1: ( ( ( rule__PlusAssignmentStatement__VarAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3889:1: ( ( rule__PlusAssignmentStatement__VarAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3889:1: ( ( rule__PlusAssignmentStatement__VarAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3890:1: ( rule__PlusAssignmentStatement__VarAssignment_1 )
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getVarAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3891:1: ( rule__PlusAssignmentStatement__VarAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3891:2: rule__PlusAssignmentStatement__VarAssignment_1
            {
            pushFollow(FOLLOW_rule__PlusAssignmentStatement__VarAssignment_1_in_rule__PlusAssignmentStatement__Group__1__Impl8199);
            rule__PlusAssignmentStatement__VarAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getPlusAssignmentStatementAccess().getVarAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3901:1: rule__PlusAssignmentStatement__Group__2 : rule__PlusAssignmentStatement__Group__2__Impl rule__PlusAssignmentStatement__Group__3 ;
    public final void rule__PlusAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3905:1: ( rule__PlusAssignmentStatement__Group__2__Impl rule__PlusAssignmentStatement__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3906:2: rule__PlusAssignmentStatement__Group__2__Impl rule__PlusAssignmentStatement__Group__3
            {
            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__2__Impl_in_rule__PlusAssignmentStatement__Group__28229);
            rule__PlusAssignmentStatement__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__3_in_rule__PlusAssignmentStatement__Group__28232);
            rule__PlusAssignmentStatement__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__2"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3913:1: rule__PlusAssignmentStatement__Group__2__Impl : ( '+=' ) ;
    public final void rule__PlusAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3917:1: ( ( '+=' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3918:1: ( '+=' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3918:1: ( '+=' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3919:1: '+='
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getPlusSignEqualsSignKeyword_2()); 
            match(input,59,FOLLOW_59_in_rule__PlusAssignmentStatement__Group__2__Impl8260); 
             after(grammarAccess.getPlusAssignmentStatementAccess().getPlusSignEqualsSignKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3932:1: rule__PlusAssignmentStatement__Group__3 : rule__PlusAssignmentStatement__Group__3__Impl ;
    public final void rule__PlusAssignmentStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3936:1: ( rule__PlusAssignmentStatement__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3937:2: rule__PlusAssignmentStatement__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__PlusAssignmentStatement__Group__3__Impl_in_rule__PlusAssignmentStatement__Group__38291);
            rule__PlusAssignmentStatement__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__3"


    // $ANTLR start "rule__PlusAssignmentStatement__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3943:1: rule__PlusAssignmentStatement__Group__3__Impl : ( ( rule__PlusAssignmentStatement__ExpressionAssignment_3 ) ) ;
    public final void rule__PlusAssignmentStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3947:1: ( ( ( rule__PlusAssignmentStatement__ExpressionAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3948:1: ( ( rule__PlusAssignmentStatement__ExpressionAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3948:1: ( ( rule__PlusAssignmentStatement__ExpressionAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3949:1: ( rule__PlusAssignmentStatement__ExpressionAssignment_3 )
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getExpressionAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3950:1: ( rule__PlusAssignmentStatement__ExpressionAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3950:2: rule__PlusAssignmentStatement__ExpressionAssignment_3
            {
            pushFollow(FOLLOW_rule__PlusAssignmentStatement__ExpressionAssignment_3_in_rule__PlusAssignmentStatement__Group__3__Impl8318);
            rule__PlusAssignmentStatement__ExpressionAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getPlusAssignmentStatementAccess().getExpressionAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__Group__3__Impl"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3968:1: rule__ReferenceAssignmentStatement__Group__0 : rule__ReferenceAssignmentStatement__Group__0__Impl rule__ReferenceAssignmentStatement__Group__1 ;
    public final void rule__ReferenceAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3972:1: ( rule__ReferenceAssignmentStatement__Group__0__Impl rule__ReferenceAssignmentStatement__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3973:2: rule__ReferenceAssignmentStatement__Group__0__Impl rule__ReferenceAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__0__Impl_in_rule__ReferenceAssignmentStatement__Group__08356);
            rule__ReferenceAssignmentStatement__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__1_in_rule__ReferenceAssignmentStatement__Group__08359);
            rule__ReferenceAssignmentStatement__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__0"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3980:1: rule__ReferenceAssignmentStatement__Group__0__Impl : ( () ) ;
    public final void rule__ReferenceAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3984:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3985:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3985:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3986:1: ()
            {
             before(grammarAccess.getReferenceAssignmentStatementAccess().getRefAssignmentAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3987:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3989:1: 
            {
            }

             after(grammarAccess.getReferenceAssignmentStatementAccess().getRefAssignmentAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:3999:1: rule__ReferenceAssignmentStatement__Group__1 : rule__ReferenceAssignmentStatement__Group__1__Impl rule__ReferenceAssignmentStatement__Group__2 ;
    public final void rule__ReferenceAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4003:1: ( rule__ReferenceAssignmentStatement__Group__1__Impl rule__ReferenceAssignmentStatement__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4004:2: rule__ReferenceAssignmentStatement__Group__1__Impl rule__ReferenceAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__1__Impl_in_rule__ReferenceAssignmentStatement__Group__18417);
            rule__ReferenceAssignmentStatement__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__2_in_rule__ReferenceAssignmentStatement__Group__18420);
            rule__ReferenceAssignmentStatement__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__1"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4011:1: rule__ReferenceAssignmentStatement__Group__1__Impl : ( ( rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1 ) ) ;
    public final void rule__ReferenceAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4015:1: ( ( ( rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4016:1: ( ( rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4016:1: ( ( rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4017:1: ( rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1 )
            {
             before(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4018:1: ( rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4018:2: rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1_in_rule__ReferenceAssignmentStatement__Group__1__Impl8447);
            rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4028:1: rule__ReferenceAssignmentStatement__Group__2 : rule__ReferenceAssignmentStatement__Group__2__Impl rule__ReferenceAssignmentStatement__Group__3 ;
    public final void rule__ReferenceAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4032:1: ( rule__ReferenceAssignmentStatement__Group__2__Impl rule__ReferenceAssignmentStatement__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4033:2: rule__ReferenceAssignmentStatement__Group__2__Impl rule__ReferenceAssignmentStatement__Group__3
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__2__Impl_in_rule__ReferenceAssignmentStatement__Group__28477);
            rule__ReferenceAssignmentStatement__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__3_in_rule__ReferenceAssignmentStatement__Group__28480);
            rule__ReferenceAssignmentStatement__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__2"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4040:1: rule__ReferenceAssignmentStatement__Group__2__Impl : ( '=' ) ;
    public final void rule__ReferenceAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4044:1: ( ( '=' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4045:1: ( '=' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4045:1: ( '=' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4046:1: '='
            {
             before(grammarAccess.getReferenceAssignmentStatementAccess().getEqualsSignKeyword_2()); 
            match(input,58,FOLLOW_58_in_rule__ReferenceAssignmentStatement__Group__2__Impl8508); 
             after(grammarAccess.getReferenceAssignmentStatementAccess().getEqualsSignKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4059:1: rule__ReferenceAssignmentStatement__Group__3 : rule__ReferenceAssignmentStatement__Group__3__Impl ;
    public final void rule__ReferenceAssignmentStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4063:1: ( rule__ReferenceAssignmentStatement__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4064:2: rule__ReferenceAssignmentStatement__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__Group__3__Impl_in_rule__ReferenceAssignmentStatement__Group__38539);
            rule__ReferenceAssignmentStatement__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__3"


    // $ANTLR start "rule__ReferenceAssignmentStatement__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4070:1: rule__ReferenceAssignmentStatement__Group__3__Impl : ( ( rule__ReferenceAssignmentStatement__ExpressionAssignment_3 ) ) ;
    public final void rule__ReferenceAssignmentStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4074:1: ( ( ( rule__ReferenceAssignmentStatement__ExpressionAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4075:1: ( ( rule__ReferenceAssignmentStatement__ExpressionAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4075:1: ( ( rule__ReferenceAssignmentStatement__ExpressionAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4076:1: ( rule__ReferenceAssignmentStatement__ExpressionAssignment_3 )
            {
             before(grammarAccess.getReferenceAssignmentStatementAccess().getExpressionAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4077:1: ( rule__ReferenceAssignmentStatement__ExpressionAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4077:2: rule__ReferenceAssignmentStatement__ExpressionAssignment_3
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__ExpressionAssignment_3_in_rule__ReferenceAssignmentStatement__Group__3__Impl8566);
            rule__ReferenceAssignmentStatement__ExpressionAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getReferenceAssignmentStatementAccess().getExpressionAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__Group__3__Impl"


    // $ANTLR start "rule__Logical__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4095:1: rule__Logical__Group__0 : rule__Logical__Group__0__Impl rule__Logical__Group__1 ;
    public final void rule__Logical__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4099:1: ( rule__Logical__Group__0__Impl rule__Logical__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4100:2: rule__Logical__Group__0__Impl rule__Logical__Group__1
            {
            pushFollow(FOLLOW_rule__Logical__Group__0__Impl_in_rule__Logical__Group__08604);
            rule__Logical__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Logical__Group__1_in_rule__Logical__Group__08607);
            rule__Logical__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group__0"


    // $ANTLR start "rule__Logical__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4107:1: rule__Logical__Group__0__Impl : ( ruleEquality ) ;
    public final void rule__Logical__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4111:1: ( ( ruleEquality ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4112:1: ( ruleEquality )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4112:1: ( ruleEquality )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4113:1: ruleEquality
            {
             before(grammarAccess.getLogicalAccess().getEqualityParserRuleCall_0()); 
            pushFollow(FOLLOW_ruleEquality_in_rule__Logical__Group__0__Impl8634);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getLogicalAccess().getEqualityParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group__0__Impl"


    // $ANTLR start "rule__Logical__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4124:1: rule__Logical__Group__1 : rule__Logical__Group__1__Impl ;
    public final void rule__Logical__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4128:1: ( rule__Logical__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4129:2: rule__Logical__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Logical__Group__1__Impl_in_rule__Logical__Group__18663);
            rule__Logical__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group__1"


    // $ANTLR start "rule__Logical__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4135:1: rule__Logical__Group__1__Impl : ( ( rule__Logical__Group_1__0 )* ) ;
    public final void rule__Logical__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4139:1: ( ( ( rule__Logical__Group_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4140:1: ( ( rule__Logical__Group_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4140:1: ( ( rule__Logical__Group_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4141:1: ( rule__Logical__Group_1__0 )*
            {
             before(grammarAccess.getLogicalAccess().getGroup_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4142:1: ( rule__Logical__Group_1__0 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( ((LA38_0>=60 && LA38_0<=61)) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4142:2: rule__Logical__Group_1__0
            	    {
            	    pushFollow(FOLLOW_rule__Logical__Group_1__0_in_rule__Logical__Group__1__Impl8690);
            	    rule__Logical__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

             after(grammarAccess.getLogicalAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group__1__Impl"


    // $ANTLR start "rule__Logical__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4156:1: rule__Logical__Group_1__0 : rule__Logical__Group_1__0__Impl rule__Logical__Group_1__1 ;
    public final void rule__Logical__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4160:1: ( rule__Logical__Group_1__0__Impl rule__Logical__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4161:2: rule__Logical__Group_1__0__Impl rule__Logical__Group_1__1
            {
            pushFollow(FOLLOW_rule__Logical__Group_1__0__Impl_in_rule__Logical__Group_1__08725);
            rule__Logical__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Logical__Group_1__1_in_rule__Logical__Group_1__08728);
            rule__Logical__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1__0"


    // $ANTLR start "rule__Logical__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4168:1: rule__Logical__Group_1__0__Impl : ( ( rule__Logical__Alternatives_1_0 ) ) ;
    public final void rule__Logical__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4172:1: ( ( ( rule__Logical__Alternatives_1_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4173:1: ( ( rule__Logical__Alternatives_1_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4173:1: ( ( rule__Logical__Alternatives_1_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4174:1: ( rule__Logical__Alternatives_1_0 )
            {
             before(grammarAccess.getLogicalAccess().getAlternatives_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4175:1: ( rule__Logical__Alternatives_1_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4175:2: rule__Logical__Alternatives_1_0
            {
            pushFollow(FOLLOW_rule__Logical__Alternatives_1_0_in_rule__Logical__Group_1__0__Impl8755);
            rule__Logical__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getLogicalAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1__0__Impl"


    // $ANTLR start "rule__Logical__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4185:1: rule__Logical__Group_1__1 : rule__Logical__Group_1__1__Impl ;
    public final void rule__Logical__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4189:1: ( rule__Logical__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4190:2: rule__Logical__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Logical__Group_1__1__Impl_in_rule__Logical__Group_1__18785);
            rule__Logical__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1__1"


    // $ANTLR start "rule__Logical__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4196:1: rule__Logical__Group_1__1__Impl : ( ( rule__Logical__RightAssignment_1_1 ) ) ;
    public final void rule__Logical__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4200:1: ( ( ( rule__Logical__RightAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4201:1: ( ( rule__Logical__RightAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4201:1: ( ( rule__Logical__RightAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4202:1: ( rule__Logical__RightAssignment_1_1 )
            {
             before(grammarAccess.getLogicalAccess().getRightAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4203:1: ( rule__Logical__RightAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4203:2: rule__Logical__RightAssignment_1_1
            {
            pushFollow(FOLLOW_rule__Logical__RightAssignment_1_1_in_rule__Logical__Group_1__1__Impl8812);
            rule__Logical__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLogicalAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1__1__Impl"


    // $ANTLR start "rule__Logical__Group_1_0_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4217:1: rule__Logical__Group_1_0_0__0 : rule__Logical__Group_1_0_0__0__Impl rule__Logical__Group_1_0_0__1 ;
    public final void rule__Logical__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4221:1: ( rule__Logical__Group_1_0_0__0__Impl rule__Logical__Group_1_0_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4222:2: rule__Logical__Group_1_0_0__0__Impl rule__Logical__Group_1_0_0__1
            {
            pushFollow(FOLLOW_rule__Logical__Group_1_0_0__0__Impl_in_rule__Logical__Group_1_0_0__08846);
            rule__Logical__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Logical__Group_1_0_0__1_in_rule__Logical__Group_1_0_0__08849);
            rule__Logical__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_0__0"


    // $ANTLR start "rule__Logical__Group_1_0_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4229:1: rule__Logical__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Logical__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4233:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4234:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4234:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4235:1: ()
            {
             before(grammarAccess.getLogicalAccess().getAndLeftAction_1_0_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4236:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4238:1: 
            {
            }

             after(grammarAccess.getLogicalAccess().getAndLeftAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Logical__Group_1_0_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4248:1: rule__Logical__Group_1_0_0__1 : rule__Logical__Group_1_0_0__1__Impl ;
    public final void rule__Logical__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4252:1: ( rule__Logical__Group_1_0_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4253:2: rule__Logical__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Logical__Group_1_0_0__1__Impl_in_rule__Logical__Group_1_0_0__18907);
            rule__Logical__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_0__1"


    // $ANTLR start "rule__Logical__Group_1_0_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4259:1: rule__Logical__Group_1_0_0__1__Impl : ( '&&' ) ;
    public final void rule__Logical__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4263:1: ( ( '&&' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4264:1: ( '&&' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4264:1: ( '&&' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4265:1: '&&'
            {
             before(grammarAccess.getLogicalAccess().getAmpersandAmpersandKeyword_1_0_0_1()); 
            match(input,60,FOLLOW_60_in_rule__Logical__Group_1_0_0__1__Impl8935); 
             after(grammarAccess.getLogicalAccess().getAmpersandAmpersandKeyword_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Logical__Group_1_0_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4282:1: rule__Logical__Group_1_0_1__0 : rule__Logical__Group_1_0_1__0__Impl rule__Logical__Group_1_0_1__1 ;
    public final void rule__Logical__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4286:1: ( rule__Logical__Group_1_0_1__0__Impl rule__Logical__Group_1_0_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4287:2: rule__Logical__Group_1_0_1__0__Impl rule__Logical__Group_1_0_1__1
            {
            pushFollow(FOLLOW_rule__Logical__Group_1_0_1__0__Impl_in_rule__Logical__Group_1_0_1__08970);
            rule__Logical__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Logical__Group_1_0_1__1_in_rule__Logical__Group_1_0_1__08973);
            rule__Logical__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_1__0"


    // $ANTLR start "rule__Logical__Group_1_0_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4294:1: rule__Logical__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Logical__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4298:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4299:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4299:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4300:1: ()
            {
             before(grammarAccess.getLogicalAccess().getOrLeftAction_1_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4301:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4303:1: 
            {
            }

             after(grammarAccess.getLogicalAccess().getOrLeftAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Logical__Group_1_0_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4313:1: rule__Logical__Group_1_0_1__1 : rule__Logical__Group_1_0_1__1__Impl ;
    public final void rule__Logical__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4317:1: ( rule__Logical__Group_1_0_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4318:2: rule__Logical__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Logical__Group_1_0_1__1__Impl_in_rule__Logical__Group_1_0_1__19031);
            rule__Logical__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_1__1"


    // $ANTLR start "rule__Logical__Group_1_0_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4324:1: rule__Logical__Group_1_0_1__1__Impl : ( '||' ) ;
    public final void rule__Logical__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4328:1: ( ( '||' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4329:1: ( '||' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4329:1: ( '||' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4330:1: '||'
            {
             before(grammarAccess.getLogicalAccess().getVerticalLineVerticalLineKeyword_1_0_1_1()); 
            match(input,61,FOLLOW_61_in_rule__Logical__Group_1_0_1__1__Impl9059); 
             after(grammarAccess.getLogicalAccess().getVerticalLineVerticalLineKeyword_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Equality__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4347:1: rule__Equality__Group__0 : rule__Equality__Group__0__Impl rule__Equality__Group__1 ;
    public final void rule__Equality__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4351:1: ( rule__Equality__Group__0__Impl rule__Equality__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4352:2: rule__Equality__Group__0__Impl rule__Equality__Group__1
            {
            pushFollow(FOLLOW_rule__Equality__Group__0__Impl_in_rule__Equality__Group__09094);
            rule__Equality__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equality__Group__1_in_rule__Equality__Group__09097);
            rule__Equality__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0"


    // $ANTLR start "rule__Equality__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4359:1: rule__Equality__Group__0__Impl : ( ruleComparison ) ;
    public final void rule__Equality__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4363:1: ( ( ruleComparison ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4364:1: ( ruleComparison )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4364:1: ( ruleComparison )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4365:1: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 
            pushFollow(FOLLOW_ruleComparison_in_rule__Equality__Group__0__Impl9124);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getComparisonParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__0__Impl"


    // $ANTLR start "rule__Equality__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4376:1: rule__Equality__Group__1 : rule__Equality__Group__1__Impl ;
    public final void rule__Equality__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4380:1: ( rule__Equality__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4381:2: rule__Equality__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Equality__Group__1__Impl_in_rule__Equality__Group__19153);
            rule__Equality__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1"


    // $ANTLR start "rule__Equality__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4387:1: rule__Equality__Group__1__Impl : ( ( rule__Equality__Group_1__0 )* ) ;
    public final void rule__Equality__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4391:1: ( ( ( rule__Equality__Group_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4392:1: ( ( rule__Equality__Group_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4392:1: ( ( rule__Equality__Group_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4393:1: ( rule__Equality__Group_1__0 )*
            {
             before(grammarAccess.getEqualityAccess().getGroup_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4394:1: ( rule__Equality__Group_1__0 )*
            loop39:
            do {
                int alt39=2;
                int LA39_0 = input.LA(1);

                if ( ((LA39_0>=62 && LA39_0<=63)) ) {
                    alt39=1;
                }


                switch (alt39) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4394:2: rule__Equality__Group_1__0
            	    {
            	    pushFollow(FOLLOW_rule__Equality__Group_1__0_in_rule__Equality__Group__1__Impl9180);
            	    rule__Equality__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

             after(grammarAccess.getEqualityAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group__1__Impl"


    // $ANTLR start "rule__Equality__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4408:1: rule__Equality__Group_1__0 : rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 ;
    public final void rule__Equality__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4412:1: ( rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4413:2: rule__Equality__Group_1__0__Impl rule__Equality__Group_1__1
            {
            pushFollow(FOLLOW_rule__Equality__Group_1__0__Impl_in_rule__Equality__Group_1__09215);
            rule__Equality__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equality__Group_1__1_in_rule__Equality__Group_1__09218);
            rule__Equality__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0"


    // $ANTLR start "rule__Equality__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4420:1: rule__Equality__Group_1__0__Impl : ( ( rule__Equality__Alternatives_1_0 ) ) ;
    public final void rule__Equality__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4424:1: ( ( ( rule__Equality__Alternatives_1_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4425:1: ( ( rule__Equality__Alternatives_1_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4425:1: ( ( rule__Equality__Alternatives_1_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4426:1: ( rule__Equality__Alternatives_1_0 )
            {
             before(grammarAccess.getEqualityAccess().getAlternatives_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4427:1: ( rule__Equality__Alternatives_1_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4427:2: rule__Equality__Alternatives_1_0
            {
            pushFollow(FOLLOW_rule__Equality__Alternatives_1_0_in_rule__Equality__Group_1__0__Impl9245);
            rule__Equality__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4437:1: rule__Equality__Group_1__1 : rule__Equality__Group_1__1__Impl ;
    public final void rule__Equality__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4441:1: ( rule__Equality__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4442:2: rule__Equality__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Equality__Group_1__1__Impl_in_rule__Equality__Group_1__19275);
            rule__Equality__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1"


    // $ANTLR start "rule__Equality__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4448:1: rule__Equality__Group_1__1__Impl : ( ( rule__Equality__RightAssignment_1_1 ) ) ;
    public final void rule__Equality__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4452:1: ( ( ( rule__Equality__RightAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4453:1: ( ( rule__Equality__RightAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4453:1: ( ( rule__Equality__RightAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4454:1: ( rule__Equality__RightAssignment_1_1 )
            {
             before(grammarAccess.getEqualityAccess().getRightAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4455:1: ( rule__Equality__RightAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4455:2: rule__Equality__RightAssignment_1_1
            {
            pushFollow(FOLLOW_rule__Equality__RightAssignment_1_1_in_rule__Equality__Group_1__1__Impl9302);
            rule__Equality__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getEqualityAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1__1__Impl"


    // $ANTLR start "rule__Equality__Group_1_0_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4469:1: rule__Equality__Group_1_0_0__0 : rule__Equality__Group_1_0_0__0__Impl rule__Equality__Group_1_0_0__1 ;
    public final void rule__Equality__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4473:1: ( rule__Equality__Group_1_0_0__0__Impl rule__Equality__Group_1_0_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4474:2: rule__Equality__Group_1_0_0__0__Impl rule__Equality__Group_1_0_0__1
            {
            pushFollow(FOLLOW_rule__Equality__Group_1_0_0__0__Impl_in_rule__Equality__Group_1_0_0__09336);
            rule__Equality__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equality__Group_1_0_0__1_in_rule__Equality__Group_1_0_0__09339);
            rule__Equality__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_0__0"


    // $ANTLR start "rule__Equality__Group_1_0_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4481:1: rule__Equality__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4485:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4486:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4486:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4487:1: ()
            {
             before(grammarAccess.getEqualityAccess().getEqualLeftAction_1_0_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4488:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4490:1: 
            {
            }

             after(grammarAccess.getEqualityAccess().getEqualLeftAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Equality__Group_1_0_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4500:1: rule__Equality__Group_1_0_0__1 : rule__Equality__Group_1_0_0__1__Impl ;
    public final void rule__Equality__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4504:1: ( rule__Equality__Group_1_0_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4505:2: rule__Equality__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Equality__Group_1_0_0__1__Impl_in_rule__Equality__Group_1_0_0__19397);
            rule__Equality__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_0__1"


    // $ANTLR start "rule__Equality__Group_1_0_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4511:1: rule__Equality__Group_1_0_0__1__Impl : ( '==' ) ;
    public final void rule__Equality__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4515:1: ( ( '==' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4516:1: ( '==' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4516:1: ( '==' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4517:1: '=='
            {
             before(grammarAccess.getEqualityAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); 
            match(input,62,FOLLOW_62_in_rule__Equality__Group_1_0_0__1__Impl9425); 
             after(grammarAccess.getEqualityAccess().getEqualsSignEqualsSignKeyword_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Equality__Group_1_0_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4534:1: rule__Equality__Group_1_0_1__0 : rule__Equality__Group_1_0_1__0__Impl rule__Equality__Group_1_0_1__1 ;
    public final void rule__Equality__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4538:1: ( rule__Equality__Group_1_0_1__0__Impl rule__Equality__Group_1_0_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4539:2: rule__Equality__Group_1_0_1__0__Impl rule__Equality__Group_1_0_1__1
            {
            pushFollow(FOLLOW_rule__Equality__Group_1_0_1__0__Impl_in_rule__Equality__Group_1_0_1__09460);
            rule__Equality__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Equality__Group_1_0_1__1_in_rule__Equality__Group_1_0_1__09463);
            rule__Equality__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_1__0"


    // $ANTLR start "rule__Equality__Group_1_0_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4546:1: rule__Equality__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Equality__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4550:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4551:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4551:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4552:1: ()
            {
             before(grammarAccess.getEqualityAccess().getUnequalLeftAction_1_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4553:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4555:1: 
            {
            }

             after(grammarAccess.getEqualityAccess().getUnequalLeftAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Equality__Group_1_0_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4565:1: rule__Equality__Group_1_0_1__1 : rule__Equality__Group_1_0_1__1__Impl ;
    public final void rule__Equality__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4569:1: ( rule__Equality__Group_1_0_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4570:2: rule__Equality__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Equality__Group_1_0_1__1__Impl_in_rule__Equality__Group_1_0_1__19521);
            rule__Equality__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_1__1"


    // $ANTLR start "rule__Equality__Group_1_0_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4576:1: rule__Equality__Group_1_0_1__1__Impl : ( '!=' ) ;
    public final void rule__Equality__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4580:1: ( ( '!=' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4581:1: ( '!=' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4581:1: ( '!=' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4582:1: '!='
            {
             before(grammarAccess.getEqualityAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); 
            match(input,63,FOLLOW_63_in_rule__Equality__Group_1_0_1__1__Impl9549); 
             after(grammarAccess.getEqualityAccess().getExclamationMarkEqualsSignKeyword_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4599:1: rule__Comparison__Group__0 : rule__Comparison__Group__0__Impl rule__Comparison__Group__1 ;
    public final void rule__Comparison__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4603:1: ( rule__Comparison__Group__0__Impl rule__Comparison__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4604:2: rule__Comparison__Group__0__Impl rule__Comparison__Group__1
            {
            pushFollow(FOLLOW_rule__Comparison__Group__0__Impl_in_rule__Comparison__Group__09584);
            rule__Comparison__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Comparison__Group__1_in_rule__Comparison__Group__09587);
            rule__Comparison__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0"


    // $ANTLR start "rule__Comparison__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4611:1: rule__Comparison__Group__0__Impl : ( ruleAddition ) ;
    public final void rule__Comparison__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4615:1: ( ( ruleAddition ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4616:1: ( ruleAddition )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4616:1: ( ruleAddition )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4617:1: ruleAddition
            {
             before(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0()); 
            pushFollow(FOLLOW_ruleAddition_in_rule__Comparison__Group__0__Impl9614);
            ruleAddition();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__0__Impl"


    // $ANTLR start "rule__Comparison__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4628:1: rule__Comparison__Group__1 : rule__Comparison__Group__1__Impl ;
    public final void rule__Comparison__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4632:1: ( rule__Comparison__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4633:2: rule__Comparison__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Comparison__Group__1__Impl_in_rule__Comparison__Group__19643);
            rule__Comparison__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1"


    // $ANTLR start "rule__Comparison__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4639:1: rule__Comparison__Group__1__Impl : ( ( rule__Comparison__Group_1__0 )* ) ;
    public final void rule__Comparison__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4643:1: ( ( ( rule__Comparison__Group_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4644:1: ( ( rule__Comparison__Group_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4644:1: ( ( rule__Comparison__Group_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4645:1: ( rule__Comparison__Group_1__0 )*
            {
             before(grammarAccess.getComparisonAccess().getGroup_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4646:1: ( rule__Comparison__Group_1__0 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( ((LA40_0>=64 && LA40_0<=67)) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4646:2: rule__Comparison__Group_1__0
            	    {
            	    pushFollow(FOLLOW_rule__Comparison__Group_1__0_in_rule__Comparison__Group__1__Impl9670);
            	    rule__Comparison__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

             after(grammarAccess.getComparisonAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4660:1: rule__Comparison__Group_1__0 : rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 ;
    public final void rule__Comparison__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4664:1: ( rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4665:2: rule__Comparison__Group_1__0__Impl rule__Comparison__Group_1__1
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1__0__Impl_in_rule__Comparison__Group_1__09705);
            rule__Comparison__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Comparison__Group_1__1_in_rule__Comparison__Group_1__09708);
            rule__Comparison__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0"


    // $ANTLR start "rule__Comparison__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4672:1: rule__Comparison__Group_1__0__Impl : ( ( rule__Comparison__Alternatives_1_0 ) ) ;
    public final void rule__Comparison__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4676:1: ( ( ( rule__Comparison__Alternatives_1_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4677:1: ( ( rule__Comparison__Alternatives_1_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4677:1: ( ( rule__Comparison__Alternatives_1_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4678:1: ( rule__Comparison__Alternatives_1_0 )
            {
             before(grammarAccess.getComparisonAccess().getAlternatives_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4679:1: ( rule__Comparison__Alternatives_1_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4679:2: rule__Comparison__Alternatives_1_0
            {
            pushFollow(FOLLOW_rule__Comparison__Alternatives_1_0_in_rule__Comparison__Group_1__0__Impl9735);
            rule__Comparison__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4689:1: rule__Comparison__Group_1__1 : rule__Comparison__Group_1__1__Impl ;
    public final void rule__Comparison__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4693:1: ( rule__Comparison__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4694:2: rule__Comparison__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1__1__Impl_in_rule__Comparison__Group_1__19765);
            rule__Comparison__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1"


    // $ANTLR start "rule__Comparison__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4700:1: rule__Comparison__Group_1__1__Impl : ( ( rule__Comparison__RightAssignment_1_1 ) ) ;
    public final void rule__Comparison__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4704:1: ( ( ( rule__Comparison__RightAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4705:1: ( ( rule__Comparison__RightAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4705:1: ( ( rule__Comparison__RightAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4706:1: ( rule__Comparison__RightAssignment_1_1 )
            {
             before(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4707:1: ( rule__Comparison__RightAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4707:2: rule__Comparison__RightAssignment_1_1
            {
            pushFollow(FOLLOW_rule__Comparison__RightAssignment_1_1_in_rule__Comparison__Group_1__1__Impl9792);
            rule__Comparison__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getComparisonAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4721:1: rule__Comparison__Group_1_0_0__0 : rule__Comparison__Group_1_0_0__0__Impl rule__Comparison__Group_1_0_0__1 ;
    public final void rule__Comparison__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4725:1: ( rule__Comparison__Group_1_0_0__0__Impl rule__Comparison__Group_1_0_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4726:2: rule__Comparison__Group_1_0_0__0__Impl rule__Comparison__Group_1_0_0__1
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_0__0__Impl_in_rule__Comparison__Group_1_0_0__09826);
            rule__Comparison__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Comparison__Group_1_0_0__1_in_rule__Comparison__Group_1_0_0__09829);
            rule__Comparison__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_0__0"


    // $ANTLR start "rule__Comparison__Group_1_0_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4733:1: rule__Comparison__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4737:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4738:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4738:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4739:1: ()
            {
             before(grammarAccess.getComparisonAccess().getLesserLeftAction_1_0_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4740:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4742:1: 
            {
            }

             after(grammarAccess.getComparisonAccess().getLesserLeftAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4752:1: rule__Comparison__Group_1_0_0__1 : rule__Comparison__Group_1_0_0__1__Impl ;
    public final void rule__Comparison__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4756:1: ( rule__Comparison__Group_1_0_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4757:2: rule__Comparison__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_0__1__Impl_in_rule__Comparison__Group_1_0_0__19887);
            rule__Comparison__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_0__1"


    // $ANTLR start "rule__Comparison__Group_1_0_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4763:1: rule__Comparison__Group_1_0_0__1__Impl : ( '<' ) ;
    public final void rule__Comparison__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4767:1: ( ( '<' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4768:1: ( '<' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4768:1: ( '<' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4769:1: '<'
            {
             before(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_0_1()); 
            match(input,64,FOLLOW_64_in_rule__Comparison__Group_1_0_0__1__Impl9915); 
             after(grammarAccess.getComparisonAccess().getLessThanSignKeyword_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4786:1: rule__Comparison__Group_1_0_1__0 : rule__Comparison__Group_1_0_1__0__Impl rule__Comparison__Group_1_0_1__1 ;
    public final void rule__Comparison__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4790:1: ( rule__Comparison__Group_1_0_1__0__Impl rule__Comparison__Group_1_0_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4791:2: rule__Comparison__Group_1_0_1__0__Impl rule__Comparison__Group_1_0_1__1
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_1__0__Impl_in_rule__Comparison__Group_1_0_1__09950);
            rule__Comparison__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Comparison__Group_1_0_1__1_in_rule__Comparison__Group_1_0_1__09953);
            rule__Comparison__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_1__0"


    // $ANTLR start "rule__Comparison__Group_1_0_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4798:1: rule__Comparison__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4802:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4803:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4803:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4804:1: ()
            {
             before(grammarAccess.getComparisonAccess().getLesserEqualLeftAction_1_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4805:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4807:1: 
            {
            }

             after(grammarAccess.getComparisonAccess().getLesserEqualLeftAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4817:1: rule__Comparison__Group_1_0_1__1 : rule__Comparison__Group_1_0_1__1__Impl ;
    public final void rule__Comparison__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4821:1: ( rule__Comparison__Group_1_0_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4822:2: rule__Comparison__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_1__1__Impl_in_rule__Comparison__Group_1_0_1__110011);
            rule__Comparison__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_1__1"


    // $ANTLR start "rule__Comparison__Group_1_0_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4828:1: rule__Comparison__Group_1_0_1__1__Impl : ( '<=' ) ;
    public final void rule__Comparison__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4832:1: ( ( '<=' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4833:1: ( '<=' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4833:1: ( '<=' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4834:1: '<='
            {
             before(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); 
            match(input,65,FOLLOW_65_in_rule__Comparison__Group_1_0_1__1__Impl10039); 
             after(grammarAccess.getComparisonAccess().getLessThanSignEqualsSignKeyword_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_2__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4851:1: rule__Comparison__Group_1_0_2__0 : rule__Comparison__Group_1_0_2__0__Impl rule__Comparison__Group_1_0_2__1 ;
    public final void rule__Comparison__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4855:1: ( rule__Comparison__Group_1_0_2__0__Impl rule__Comparison__Group_1_0_2__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4856:2: rule__Comparison__Group_1_0_2__0__Impl rule__Comparison__Group_1_0_2__1
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_2__0__Impl_in_rule__Comparison__Group_1_0_2__010074);
            rule__Comparison__Group_1_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Comparison__Group_1_0_2__1_in_rule__Comparison__Group_1_0_2__010077);
            rule__Comparison__Group_1_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_2__0"


    // $ANTLR start "rule__Comparison__Group_1_0_2__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4863:1: rule__Comparison__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4867:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4868:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4868:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4869:1: ()
            {
             before(grammarAccess.getComparisonAccess().getGreaterLeftAction_1_0_2_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4870:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4872:1: 
            {
            }

             after(grammarAccess.getComparisonAccess().getGreaterLeftAction_1_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_2__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4882:1: rule__Comparison__Group_1_0_2__1 : rule__Comparison__Group_1_0_2__1__Impl ;
    public final void rule__Comparison__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4886:1: ( rule__Comparison__Group_1_0_2__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4887:2: rule__Comparison__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_2__1__Impl_in_rule__Comparison__Group_1_0_2__110135);
            rule__Comparison__Group_1_0_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_2__1"


    // $ANTLR start "rule__Comparison__Group_1_0_2__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4893:1: rule__Comparison__Group_1_0_2__1__Impl : ( '>' ) ;
    public final void rule__Comparison__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4897:1: ( ( '>' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4898:1: ( '>' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4898:1: ( '>' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4899:1: '>'
            {
             before(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_2_1()); 
            match(input,66,FOLLOW_66_in_rule__Comparison__Group_1_0_2__1__Impl10163); 
             after(grammarAccess.getComparisonAccess().getGreaterThanSignKeyword_1_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_3__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4916:1: rule__Comparison__Group_1_0_3__0 : rule__Comparison__Group_1_0_3__0__Impl rule__Comparison__Group_1_0_3__1 ;
    public final void rule__Comparison__Group_1_0_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4920:1: ( rule__Comparison__Group_1_0_3__0__Impl rule__Comparison__Group_1_0_3__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4921:2: rule__Comparison__Group_1_0_3__0__Impl rule__Comparison__Group_1_0_3__1
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_3__0__Impl_in_rule__Comparison__Group_1_0_3__010198);
            rule__Comparison__Group_1_0_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Comparison__Group_1_0_3__1_in_rule__Comparison__Group_1_0_3__010201);
            rule__Comparison__Group_1_0_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_3__0"


    // $ANTLR start "rule__Comparison__Group_1_0_3__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4928:1: rule__Comparison__Group_1_0_3__0__Impl : ( () ) ;
    public final void rule__Comparison__Group_1_0_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4932:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4933:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4933:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4934:1: ()
            {
             before(grammarAccess.getComparisonAccess().getGreaterEqualLeftAction_1_0_3_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4935:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4937:1: 
            {
            }

             after(grammarAccess.getComparisonAccess().getGreaterEqualLeftAction_1_0_3_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_3__0__Impl"


    // $ANTLR start "rule__Comparison__Group_1_0_3__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4947:1: rule__Comparison__Group_1_0_3__1 : rule__Comparison__Group_1_0_3__1__Impl ;
    public final void rule__Comparison__Group_1_0_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4951:1: ( rule__Comparison__Group_1_0_3__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4952:2: rule__Comparison__Group_1_0_3__1__Impl
            {
            pushFollow(FOLLOW_rule__Comparison__Group_1_0_3__1__Impl_in_rule__Comparison__Group_1_0_3__110259);
            rule__Comparison__Group_1_0_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_3__1"


    // $ANTLR start "rule__Comparison__Group_1_0_3__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4958:1: rule__Comparison__Group_1_0_3__1__Impl : ( '>=' ) ;
    public final void rule__Comparison__Group_1_0_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4962:1: ( ( '>=' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4963:1: ( '>=' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4963:1: ( '>=' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4964:1: '>='
            {
             before(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_0_3_1()); 
            match(input,67,FOLLOW_67_in_rule__Comparison__Group_1_0_3__1__Impl10287); 
             after(grammarAccess.getComparisonAccess().getGreaterThanSignEqualsSignKeyword_1_0_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__Group_1_0_3__1__Impl"


    // $ANTLR start "rule__Addition__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4981:1: rule__Addition__Group__0 : rule__Addition__Group__0__Impl rule__Addition__Group__1 ;
    public final void rule__Addition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4985:1: ( rule__Addition__Group__0__Impl rule__Addition__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4986:2: rule__Addition__Group__0__Impl rule__Addition__Group__1
            {
            pushFollow(FOLLOW_rule__Addition__Group__0__Impl_in_rule__Addition__Group__010322);
            rule__Addition__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Addition__Group__1_in_rule__Addition__Group__010325);
            rule__Addition__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__0"


    // $ANTLR start "rule__Addition__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4993:1: rule__Addition__Group__0__Impl : ( ruleMultiplication ) ;
    public final void rule__Addition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4997:1: ( ( ruleMultiplication ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4998:1: ( ruleMultiplication )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4998:1: ( ruleMultiplication )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:4999:1: ruleMultiplication
            {
             before(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); 
            pushFollow(FOLLOW_ruleMultiplication_in_rule__Addition__Group__0__Impl10352);
            ruleMultiplication();

            state._fsp--;

             after(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__0__Impl"


    // $ANTLR start "rule__Addition__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5010:1: rule__Addition__Group__1 : rule__Addition__Group__1__Impl ;
    public final void rule__Addition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5014:1: ( rule__Addition__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5015:2: rule__Addition__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Addition__Group__1__Impl_in_rule__Addition__Group__110381);
            rule__Addition__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__1"


    // $ANTLR start "rule__Addition__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5021:1: rule__Addition__Group__1__Impl : ( ( rule__Addition__Group_1__0 )* ) ;
    public final void rule__Addition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5025:1: ( ( ( rule__Addition__Group_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5026:1: ( ( rule__Addition__Group_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5026:1: ( ( rule__Addition__Group_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5027:1: ( rule__Addition__Group_1__0 )*
            {
             before(grammarAccess.getAdditionAccess().getGroup_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5028:1: ( rule__Addition__Group_1__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( ((LA41_0>=12 && LA41_0<=13)) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5028:2: rule__Addition__Group_1__0
            	    {
            	    pushFollow(FOLLOW_rule__Addition__Group_1__0_in_rule__Addition__Group__1__Impl10408);
            	    rule__Addition__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

             after(grammarAccess.getAdditionAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__1__Impl"


    // $ANTLR start "rule__Addition__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5042:1: rule__Addition__Group_1__0 : rule__Addition__Group_1__0__Impl rule__Addition__Group_1__1 ;
    public final void rule__Addition__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5046:1: ( rule__Addition__Group_1__0__Impl rule__Addition__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5047:2: rule__Addition__Group_1__0__Impl rule__Addition__Group_1__1
            {
            pushFollow(FOLLOW_rule__Addition__Group_1__0__Impl_in_rule__Addition__Group_1__010443);
            rule__Addition__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Addition__Group_1__1_in_rule__Addition__Group_1__010446);
            rule__Addition__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1__0"


    // $ANTLR start "rule__Addition__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5054:1: rule__Addition__Group_1__0__Impl : ( ( rule__Addition__Alternatives_1_0 ) ) ;
    public final void rule__Addition__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5058:1: ( ( ( rule__Addition__Alternatives_1_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5059:1: ( ( rule__Addition__Alternatives_1_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5059:1: ( ( rule__Addition__Alternatives_1_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5060:1: ( rule__Addition__Alternatives_1_0 )
            {
             before(grammarAccess.getAdditionAccess().getAlternatives_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5061:1: ( rule__Addition__Alternatives_1_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5061:2: rule__Addition__Alternatives_1_0
            {
            pushFollow(FOLLOW_rule__Addition__Alternatives_1_0_in_rule__Addition__Group_1__0__Impl10473);
            rule__Addition__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getAdditionAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1__0__Impl"


    // $ANTLR start "rule__Addition__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5071:1: rule__Addition__Group_1__1 : rule__Addition__Group_1__1__Impl ;
    public final void rule__Addition__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5075:1: ( rule__Addition__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5076:2: rule__Addition__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Addition__Group_1__1__Impl_in_rule__Addition__Group_1__110503);
            rule__Addition__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1__1"


    // $ANTLR start "rule__Addition__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5082:1: rule__Addition__Group_1__1__Impl : ( ( rule__Addition__RightAssignment_1_1 ) ) ;
    public final void rule__Addition__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5086:1: ( ( ( rule__Addition__RightAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5087:1: ( ( rule__Addition__RightAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5087:1: ( ( rule__Addition__RightAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5088:1: ( rule__Addition__RightAssignment_1_1 )
            {
             before(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5089:1: ( rule__Addition__RightAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5089:2: rule__Addition__RightAssignment_1_1
            {
            pushFollow(FOLLOW_rule__Addition__RightAssignment_1_1_in_rule__Addition__Group_1__1__Impl10530);
            rule__Addition__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getAdditionAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1__1__Impl"


    // $ANTLR start "rule__Addition__Group_1_0_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5103:1: rule__Addition__Group_1_0_0__0 : rule__Addition__Group_1_0_0__0__Impl rule__Addition__Group_1_0_0__1 ;
    public final void rule__Addition__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5107:1: ( rule__Addition__Group_1_0_0__0__Impl rule__Addition__Group_1_0_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5108:2: rule__Addition__Group_1_0_0__0__Impl rule__Addition__Group_1_0_0__1
            {
            pushFollow(FOLLOW_rule__Addition__Group_1_0_0__0__Impl_in_rule__Addition__Group_1_0_0__010564);
            rule__Addition__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Addition__Group_1_0_0__1_in_rule__Addition__Group_1_0_0__010567);
            rule__Addition__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_0__0"


    // $ANTLR start "rule__Addition__Group_1_0_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5115:1: rule__Addition__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Addition__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5119:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5120:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5120:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5121:1: ()
            {
             before(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5122:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5124:1: 
            {
            }

             after(grammarAccess.getAdditionAccess().getPlusLeftAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Addition__Group_1_0_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5134:1: rule__Addition__Group_1_0_0__1 : rule__Addition__Group_1_0_0__1__Impl ;
    public final void rule__Addition__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5138:1: ( rule__Addition__Group_1_0_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5139:2: rule__Addition__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Addition__Group_1_0_0__1__Impl_in_rule__Addition__Group_1_0_0__110625);
            rule__Addition__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_0__1"


    // $ANTLR start "rule__Addition__Group_1_0_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5145:1: rule__Addition__Group_1_0_0__1__Impl : ( '+' ) ;
    public final void rule__Addition__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5149:1: ( ( '+' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5150:1: ( '+' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5150:1: ( '+' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5151:1: '+'
            {
             before(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); 
            match(input,13,FOLLOW_13_in_rule__Addition__Group_1_0_0__1__Impl10653); 
             after(grammarAccess.getAdditionAccess().getPlusSignKeyword_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Addition__Group_1_0_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5168:1: rule__Addition__Group_1_0_1__0 : rule__Addition__Group_1_0_1__0__Impl rule__Addition__Group_1_0_1__1 ;
    public final void rule__Addition__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5172:1: ( rule__Addition__Group_1_0_1__0__Impl rule__Addition__Group_1_0_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5173:2: rule__Addition__Group_1_0_1__0__Impl rule__Addition__Group_1_0_1__1
            {
            pushFollow(FOLLOW_rule__Addition__Group_1_0_1__0__Impl_in_rule__Addition__Group_1_0_1__010688);
            rule__Addition__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Addition__Group_1_0_1__1_in_rule__Addition__Group_1_0_1__010691);
            rule__Addition__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_1__0"


    // $ANTLR start "rule__Addition__Group_1_0_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5180:1: rule__Addition__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Addition__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5184:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5185:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5185:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5186:1: ()
            {
             before(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5187:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5189:1: 
            {
            }

             after(grammarAccess.getAdditionAccess().getMinusLeftAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Addition__Group_1_0_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5199:1: rule__Addition__Group_1_0_1__1 : rule__Addition__Group_1_0_1__1__Impl ;
    public final void rule__Addition__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5203:1: ( rule__Addition__Group_1_0_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5204:2: rule__Addition__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Addition__Group_1_0_1__1__Impl_in_rule__Addition__Group_1_0_1__110749);
            rule__Addition__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_1__1"


    // $ANTLR start "rule__Addition__Group_1_0_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5210:1: rule__Addition__Group_1_0_1__1__Impl : ( '-' ) ;
    public final void rule__Addition__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5214:1: ( ( '-' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5215:1: ( '-' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5215:1: ( '-' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5216:1: '-'
            {
             before(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); 
            match(input,12,FOLLOW_12_in_rule__Addition__Group_1_0_1__1__Impl10777); 
             after(grammarAccess.getAdditionAccess().getHyphenMinusKeyword_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Multiplication__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5233:1: rule__Multiplication__Group__0 : rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1 ;
    public final void rule__Multiplication__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5237:1: ( rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5238:2: rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1
            {
            pushFollow(FOLLOW_rule__Multiplication__Group__0__Impl_in_rule__Multiplication__Group__010812);
            rule__Multiplication__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Multiplication__Group__1_in_rule__Multiplication__Group__010815);
            rule__Multiplication__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__0"


    // $ANTLR start "rule__Multiplication__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5245:1: rule__Multiplication__Group__0__Impl : ( ruleUnary ) ;
    public final void rule__Multiplication__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5249:1: ( ( ruleUnary ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5250:1: ( ruleUnary )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5250:1: ( ruleUnary )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5251:1: ruleUnary
            {
             before(grammarAccess.getMultiplicationAccess().getUnaryParserRuleCall_0()); 
            pushFollow(FOLLOW_ruleUnary_in_rule__Multiplication__Group__0__Impl10842);
            ruleUnary();

            state._fsp--;

             after(grammarAccess.getMultiplicationAccess().getUnaryParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__0__Impl"


    // $ANTLR start "rule__Multiplication__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5262:1: rule__Multiplication__Group__1 : rule__Multiplication__Group__1__Impl ;
    public final void rule__Multiplication__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5266:1: ( rule__Multiplication__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5267:2: rule__Multiplication__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__Multiplication__Group__1__Impl_in_rule__Multiplication__Group__110871);
            rule__Multiplication__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__1"


    // $ANTLR start "rule__Multiplication__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5273:1: rule__Multiplication__Group__1__Impl : ( ( rule__Multiplication__Group_1__0 )* ) ;
    public final void rule__Multiplication__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5277:1: ( ( ( rule__Multiplication__Group_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5278:1: ( ( rule__Multiplication__Group_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5278:1: ( ( rule__Multiplication__Group_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5279:1: ( rule__Multiplication__Group_1__0 )*
            {
             before(grammarAccess.getMultiplicationAccess().getGroup_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5280:1: ( rule__Multiplication__Group_1__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=68 && LA42_0<=70)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5280:2: rule__Multiplication__Group_1__0
            	    {
            	    pushFollow(FOLLOW_rule__Multiplication__Group_1__0_in_rule__Multiplication__Group__1__Impl10898);
            	    rule__Multiplication__Group_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

             after(grammarAccess.getMultiplicationAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__1__Impl"


    // $ANTLR start "rule__Multiplication__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5294:1: rule__Multiplication__Group_1__0 : rule__Multiplication__Group_1__0__Impl rule__Multiplication__Group_1__1 ;
    public final void rule__Multiplication__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5298:1: ( rule__Multiplication__Group_1__0__Impl rule__Multiplication__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5299:2: rule__Multiplication__Group_1__0__Impl rule__Multiplication__Group_1__1
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1__0__Impl_in_rule__Multiplication__Group_1__010933);
            rule__Multiplication__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Multiplication__Group_1__1_in_rule__Multiplication__Group_1__010936);
            rule__Multiplication__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1__0"


    // $ANTLR start "rule__Multiplication__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5306:1: rule__Multiplication__Group_1__0__Impl : ( ( rule__Multiplication__Alternatives_1_0 ) ) ;
    public final void rule__Multiplication__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5310:1: ( ( ( rule__Multiplication__Alternatives_1_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5311:1: ( ( rule__Multiplication__Alternatives_1_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5311:1: ( ( rule__Multiplication__Alternatives_1_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5312:1: ( rule__Multiplication__Alternatives_1_0 )
            {
             before(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5313:1: ( rule__Multiplication__Alternatives_1_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5313:2: rule__Multiplication__Alternatives_1_0
            {
            pushFollow(FOLLOW_rule__Multiplication__Alternatives_1_0_in_rule__Multiplication__Group_1__0__Impl10963);
            rule__Multiplication__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getMultiplicationAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1__0__Impl"


    // $ANTLR start "rule__Multiplication__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5323:1: rule__Multiplication__Group_1__1 : rule__Multiplication__Group_1__1__Impl ;
    public final void rule__Multiplication__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5327:1: ( rule__Multiplication__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5328:2: rule__Multiplication__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1__1__Impl_in_rule__Multiplication__Group_1__110993);
            rule__Multiplication__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1__1"


    // $ANTLR start "rule__Multiplication__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5334:1: rule__Multiplication__Group_1__1__Impl : ( ( rule__Multiplication__RightAssignment_1_1 ) ) ;
    public final void rule__Multiplication__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5338:1: ( ( ( rule__Multiplication__RightAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5339:1: ( ( rule__Multiplication__RightAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5339:1: ( ( rule__Multiplication__RightAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5340:1: ( rule__Multiplication__RightAssignment_1_1 )
            {
             before(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5341:1: ( rule__Multiplication__RightAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5341:2: rule__Multiplication__RightAssignment_1_1
            {
            pushFollow(FOLLOW_rule__Multiplication__RightAssignment_1_1_in_rule__Multiplication__Group_1__1__Impl11020);
            rule__Multiplication__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getMultiplicationAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1__1__Impl"


    // $ANTLR start "rule__Multiplication__Group_1_0_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5355:1: rule__Multiplication__Group_1_0_0__0 : rule__Multiplication__Group_1_0_0__0__Impl rule__Multiplication__Group_1_0_0__1 ;
    public final void rule__Multiplication__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5359:1: ( rule__Multiplication__Group_1_0_0__0__Impl rule__Multiplication__Group_1_0_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5360:2: rule__Multiplication__Group_1_0_0__0__Impl rule__Multiplication__Group_1_0_0__1
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_0__0__Impl_in_rule__Multiplication__Group_1_0_0__011054);
            rule__Multiplication__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_0__1_in_rule__Multiplication__Group_1_0_0__011057);
            rule__Multiplication__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_0__0"


    // $ANTLR start "rule__Multiplication__Group_1_0_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5367:1: rule__Multiplication__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Multiplication__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5371:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5372:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5372:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5373:1: ()
            {
             before(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5374:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5376:1: 
            {
            }

             after(grammarAccess.getMultiplicationAccess().getMultiLeftAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Multiplication__Group_1_0_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5386:1: rule__Multiplication__Group_1_0_0__1 : rule__Multiplication__Group_1_0_0__1__Impl ;
    public final void rule__Multiplication__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5390:1: ( rule__Multiplication__Group_1_0_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5391:2: rule__Multiplication__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_0__1__Impl_in_rule__Multiplication__Group_1_0_0__111115);
            rule__Multiplication__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_0__1"


    // $ANTLR start "rule__Multiplication__Group_1_0_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5397:1: rule__Multiplication__Group_1_0_0__1__Impl : ( '*' ) ;
    public final void rule__Multiplication__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5401:1: ( ( '*' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5402:1: ( '*' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5402:1: ( '*' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5403:1: '*'
            {
             before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); 
            match(input,68,FOLLOW_68_in_rule__Multiplication__Group_1_0_0__1__Impl11143); 
             after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Multiplication__Group_1_0_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5420:1: rule__Multiplication__Group_1_0_1__0 : rule__Multiplication__Group_1_0_1__0__Impl rule__Multiplication__Group_1_0_1__1 ;
    public final void rule__Multiplication__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5424:1: ( rule__Multiplication__Group_1_0_1__0__Impl rule__Multiplication__Group_1_0_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5425:2: rule__Multiplication__Group_1_0_1__0__Impl rule__Multiplication__Group_1_0_1__1
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_1__0__Impl_in_rule__Multiplication__Group_1_0_1__011178);
            rule__Multiplication__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_1__1_in_rule__Multiplication__Group_1_0_1__011181);
            rule__Multiplication__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_1__0"


    // $ANTLR start "rule__Multiplication__Group_1_0_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5432:1: rule__Multiplication__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Multiplication__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5436:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5437:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5437:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5438:1: ()
            {
             before(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5439:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5441:1: 
            {
            }

             after(grammarAccess.getMultiplicationAccess().getDivLeftAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Multiplication__Group_1_0_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5451:1: rule__Multiplication__Group_1_0_1__1 : rule__Multiplication__Group_1_0_1__1__Impl ;
    public final void rule__Multiplication__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5455:1: ( rule__Multiplication__Group_1_0_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5456:2: rule__Multiplication__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_1__1__Impl_in_rule__Multiplication__Group_1_0_1__111239);
            rule__Multiplication__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_1__1"


    // $ANTLR start "rule__Multiplication__Group_1_0_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5462:1: rule__Multiplication__Group_1_0_1__1__Impl : ( '/' ) ;
    public final void rule__Multiplication__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5466:1: ( ( '/' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5467:1: ( '/' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5467:1: ( '/' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5468:1: '/'
            {
             before(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); 
            match(input,69,FOLLOW_69_in_rule__Multiplication__Group_1_0_1__1__Impl11267); 
             after(grammarAccess.getMultiplicationAccess().getSolidusKeyword_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Multiplication__Group_1_0_2__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5485:1: rule__Multiplication__Group_1_0_2__0 : rule__Multiplication__Group_1_0_2__0__Impl rule__Multiplication__Group_1_0_2__1 ;
    public final void rule__Multiplication__Group_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5489:1: ( rule__Multiplication__Group_1_0_2__0__Impl rule__Multiplication__Group_1_0_2__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5490:2: rule__Multiplication__Group_1_0_2__0__Impl rule__Multiplication__Group_1_0_2__1
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_2__0__Impl_in_rule__Multiplication__Group_1_0_2__011302);
            rule__Multiplication__Group_1_0_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_2__1_in_rule__Multiplication__Group_1_0_2__011305);
            rule__Multiplication__Group_1_0_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_2__0"


    // $ANTLR start "rule__Multiplication__Group_1_0_2__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5497:1: rule__Multiplication__Group_1_0_2__0__Impl : ( () ) ;
    public final void rule__Multiplication__Group_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5501:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5502:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5502:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5503:1: ()
            {
             before(grammarAccess.getMultiplicationAccess().getModuloLeftAction_1_0_2_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5504:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5506:1: 
            {
            }

             after(grammarAccess.getMultiplicationAccess().getModuloLeftAction_1_0_2_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_2__0__Impl"


    // $ANTLR start "rule__Multiplication__Group_1_0_2__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5516:1: rule__Multiplication__Group_1_0_2__1 : rule__Multiplication__Group_1_0_2__1__Impl ;
    public final void rule__Multiplication__Group_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5520:1: ( rule__Multiplication__Group_1_0_2__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5521:2: rule__Multiplication__Group_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_rule__Multiplication__Group_1_0_2__1__Impl_in_rule__Multiplication__Group_1_0_2__111363);
            rule__Multiplication__Group_1_0_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_2__1"


    // $ANTLR start "rule__Multiplication__Group_1_0_2__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5527:1: rule__Multiplication__Group_1_0_2__1__Impl : ( '%' ) ;
    public final void rule__Multiplication__Group_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5531:1: ( ( '%' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5532:1: ( '%' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5532:1: ( '%' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5533:1: '%'
            {
             before(grammarAccess.getMultiplicationAccess().getPercentSignKeyword_1_0_2_1()); 
            match(input,70,FOLLOW_70_in_rule__Multiplication__Group_1_0_2__1__Impl11391); 
             after(grammarAccess.getMultiplicationAccess().getPercentSignKeyword_1_0_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group_1_0_2__1__Impl"


    // $ANTLR start "rule__Unary__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5550:1: rule__Unary__Group_1__0 : rule__Unary__Group_1__0__Impl rule__Unary__Group_1__1 ;
    public final void rule__Unary__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5554:1: ( rule__Unary__Group_1__0__Impl rule__Unary__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5555:2: rule__Unary__Group_1__0__Impl rule__Unary__Group_1__1
            {
            pushFollow(FOLLOW_rule__Unary__Group_1__0__Impl_in_rule__Unary__Group_1__011426);
            rule__Unary__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Unary__Group_1__1_in_rule__Unary__Group_1__011429);
            rule__Unary__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1__0"


    // $ANTLR start "rule__Unary__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5562:1: rule__Unary__Group_1__0__Impl : ( ( rule__Unary__Alternatives_1_0 ) ) ;
    public final void rule__Unary__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5566:1: ( ( ( rule__Unary__Alternatives_1_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5567:1: ( ( rule__Unary__Alternatives_1_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5567:1: ( ( rule__Unary__Alternatives_1_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5568:1: ( rule__Unary__Alternatives_1_0 )
            {
             before(grammarAccess.getUnaryAccess().getAlternatives_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5569:1: ( rule__Unary__Alternatives_1_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5569:2: rule__Unary__Alternatives_1_0
            {
            pushFollow(FOLLOW_rule__Unary__Alternatives_1_0_in_rule__Unary__Group_1__0__Impl11456);
            rule__Unary__Alternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getUnaryAccess().getAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1__0__Impl"


    // $ANTLR start "rule__Unary__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5579:1: rule__Unary__Group_1__1 : rule__Unary__Group_1__1__Impl ;
    public final void rule__Unary__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5583:1: ( rule__Unary__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5584:2: rule__Unary__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Unary__Group_1__1__Impl_in_rule__Unary__Group_1__111486);
            rule__Unary__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1__1"


    // $ANTLR start "rule__Unary__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5590:1: rule__Unary__Group_1__1__Impl : ( ( rule__Unary__RightAssignment_1_1 ) ) ;
    public final void rule__Unary__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5594:1: ( ( ( rule__Unary__RightAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5595:1: ( ( rule__Unary__RightAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5595:1: ( ( rule__Unary__RightAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5596:1: ( rule__Unary__RightAssignment_1_1 )
            {
             before(grammarAccess.getUnaryAccess().getRightAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5597:1: ( rule__Unary__RightAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5597:2: rule__Unary__RightAssignment_1_1
            {
            pushFollow(FOLLOW_rule__Unary__RightAssignment_1_1_in_rule__Unary__Group_1__1__Impl11513);
            rule__Unary__RightAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUnaryAccess().getRightAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1__1__Impl"


    // $ANTLR start "rule__Unary__Group_1_0_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5611:1: rule__Unary__Group_1_0_0__0 : rule__Unary__Group_1_0_0__0__Impl rule__Unary__Group_1_0_0__1 ;
    public final void rule__Unary__Group_1_0_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5615:1: ( rule__Unary__Group_1_0_0__0__Impl rule__Unary__Group_1_0_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5616:2: rule__Unary__Group_1_0_0__0__Impl rule__Unary__Group_1_0_0__1
            {
            pushFollow(FOLLOW_rule__Unary__Group_1_0_0__0__Impl_in_rule__Unary__Group_1_0_0__011547);
            rule__Unary__Group_1_0_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Unary__Group_1_0_0__1_in_rule__Unary__Group_1_0_0__011550);
            rule__Unary__Group_1_0_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_0__0"


    // $ANTLR start "rule__Unary__Group_1_0_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5623:1: rule__Unary__Group_1_0_0__0__Impl : ( () ) ;
    public final void rule__Unary__Group_1_0_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5627:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5628:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5628:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5629:1: ()
            {
             before(grammarAccess.getUnaryAccess().getNegationAction_1_0_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5630:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5632:1: 
            {
            }

             after(grammarAccess.getUnaryAccess().getNegationAction_1_0_0_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_0__0__Impl"


    // $ANTLR start "rule__Unary__Group_1_0_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5642:1: rule__Unary__Group_1_0_0__1 : rule__Unary__Group_1_0_0__1__Impl ;
    public final void rule__Unary__Group_1_0_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5646:1: ( rule__Unary__Group_1_0_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5647:2: rule__Unary__Group_1_0_0__1__Impl
            {
            pushFollow(FOLLOW_rule__Unary__Group_1_0_0__1__Impl_in_rule__Unary__Group_1_0_0__111608);
            rule__Unary__Group_1_0_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_0__1"


    // $ANTLR start "rule__Unary__Group_1_0_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5653:1: rule__Unary__Group_1_0_0__1__Impl : ( ( rule__Unary__OpAssignment_1_0_0_1 ) ) ;
    public final void rule__Unary__Group_1_0_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5657:1: ( ( ( rule__Unary__OpAssignment_1_0_0_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5658:1: ( ( rule__Unary__OpAssignment_1_0_0_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5658:1: ( ( rule__Unary__OpAssignment_1_0_0_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5659:1: ( rule__Unary__OpAssignment_1_0_0_1 )
            {
             before(grammarAccess.getUnaryAccess().getOpAssignment_1_0_0_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5660:1: ( rule__Unary__OpAssignment_1_0_0_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5660:2: rule__Unary__OpAssignment_1_0_0_1
            {
            pushFollow(FOLLOW_rule__Unary__OpAssignment_1_0_0_1_in_rule__Unary__Group_1_0_0__1__Impl11635);
            rule__Unary__OpAssignment_1_0_0_1();

            state._fsp--;


            }

             after(grammarAccess.getUnaryAccess().getOpAssignment_1_0_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_0__1__Impl"


    // $ANTLR start "rule__Unary__Group_1_0_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5674:1: rule__Unary__Group_1_0_1__0 : rule__Unary__Group_1_0_1__0__Impl rule__Unary__Group_1_0_1__1 ;
    public final void rule__Unary__Group_1_0_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5678:1: ( rule__Unary__Group_1_0_1__0__Impl rule__Unary__Group_1_0_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5679:2: rule__Unary__Group_1_0_1__0__Impl rule__Unary__Group_1_0_1__1
            {
            pushFollow(FOLLOW_rule__Unary__Group_1_0_1__0__Impl_in_rule__Unary__Group_1_0_1__011669);
            rule__Unary__Group_1_0_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Unary__Group_1_0_1__1_in_rule__Unary__Group_1_0_1__011672);
            rule__Unary__Group_1_0_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_1__0"


    // $ANTLR start "rule__Unary__Group_1_0_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5686:1: rule__Unary__Group_1_0_1__0__Impl : ( () ) ;
    public final void rule__Unary__Group_1_0_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5690:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5691:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5691:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5692:1: ()
            {
             before(grammarAccess.getUnaryAccess().getUnaryPlusMinusAction_1_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5693:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5695:1: 
            {
            }

             after(grammarAccess.getUnaryAccess().getUnaryPlusMinusAction_1_0_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_1__0__Impl"


    // $ANTLR start "rule__Unary__Group_1_0_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5705:1: rule__Unary__Group_1_0_1__1 : rule__Unary__Group_1_0_1__1__Impl ;
    public final void rule__Unary__Group_1_0_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5709:1: ( rule__Unary__Group_1_0_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5710:2: rule__Unary__Group_1_0_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Unary__Group_1_0_1__1__Impl_in_rule__Unary__Group_1_0_1__111730);
            rule__Unary__Group_1_0_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_1__1"


    // $ANTLR start "rule__Unary__Group_1_0_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5716:1: rule__Unary__Group_1_0_1__1__Impl : ( ( rule__Unary__OpAssignment_1_0_1_1 ) ) ;
    public final void rule__Unary__Group_1_0_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5720:1: ( ( ( rule__Unary__OpAssignment_1_0_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5721:1: ( ( rule__Unary__OpAssignment_1_0_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5721:1: ( ( rule__Unary__OpAssignment_1_0_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5722:1: ( rule__Unary__OpAssignment_1_0_1_1 )
            {
             before(grammarAccess.getUnaryAccess().getOpAssignment_1_0_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5723:1: ( rule__Unary__OpAssignment_1_0_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5723:2: rule__Unary__OpAssignment_1_0_1_1
            {
            pushFollow(FOLLOW_rule__Unary__OpAssignment_1_0_1_1_in_rule__Unary__Group_1_0_1__1__Impl11757);
            rule__Unary__OpAssignment_1_0_1_1();

            state._fsp--;


            }

             after(grammarAccess.getUnaryAccess().getOpAssignment_1_0_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__Group_1_0_1__1__Impl"


    // $ANTLR start "rule__Literal__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5737:1: rule__Literal__Group_1__0 : rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 ;
    public final void rule__Literal__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5741:1: ( rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5742:2: rule__Literal__Group_1__0__Impl rule__Literal__Group_1__1
            {
            pushFollow(FOLLOW_rule__Literal__Group_1__0__Impl_in_rule__Literal__Group_1__011791);
            rule__Literal__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__Literal__Group_1__1_in_rule__Literal__Group_1__011794);
            rule__Literal__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0"


    // $ANTLR start "rule__Literal__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5749:1: rule__Literal__Group_1__0__Impl : ( () ) ;
    public final void rule__Literal__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5753:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5754:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5754:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5755:1: ()
            {
             before(grammarAccess.getLiteralAccess().getBooleanLiteralAction_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5756:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5758:1: 
            {
            }

             after(grammarAccess.getLiteralAccess().getBooleanLiteralAction_1_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__0__Impl"


    // $ANTLR start "rule__Literal__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5768:1: rule__Literal__Group_1__1 : rule__Literal__Group_1__1__Impl ;
    public final void rule__Literal__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5772:1: ( rule__Literal__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5773:2: rule__Literal__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__Literal__Group_1__1__Impl_in_rule__Literal__Group_1__111852);
            rule__Literal__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1"


    // $ANTLR start "rule__Literal__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5779:1: rule__Literal__Group_1__1__Impl : ( ( rule__Literal__Alternatives_1_1 ) ) ;
    public final void rule__Literal__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5783:1: ( ( ( rule__Literal__Alternatives_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5784:1: ( ( rule__Literal__Alternatives_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5784:1: ( ( rule__Literal__Alternatives_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5785:1: ( rule__Literal__Alternatives_1_1 )
            {
             before(grammarAccess.getLiteralAccess().getAlternatives_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5786:1: ( rule__Literal__Alternatives_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5786:2: rule__Literal__Alternatives_1_1
            {
            pushFollow(FOLLOW_rule__Literal__Alternatives_1_1_in_rule__Literal__Group_1__1__Impl11879);
            rule__Literal__Alternatives_1_1();

            state._fsp--;


            }

             after(grammarAccess.getLiteralAccess().getAlternatives_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__Group_1__1__Impl"


    // $ANTLR start "rule__NumberLiteral__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5800:1: rule__NumberLiteral__Group__0 : rule__NumberLiteral__Group__0__Impl rule__NumberLiteral__Group__1 ;
    public final void rule__NumberLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5804:1: ( rule__NumberLiteral__Group__0__Impl rule__NumberLiteral__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5805:2: rule__NumberLiteral__Group__0__Impl rule__NumberLiteral__Group__1
            {
            pushFollow(FOLLOW_rule__NumberLiteral__Group__0__Impl_in_rule__NumberLiteral__Group__011913);
            rule__NumberLiteral__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__NumberLiteral__Group__1_in_rule__NumberLiteral__Group__011916);
            rule__NumberLiteral__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NumberLiteral__Group__0"


    // $ANTLR start "rule__NumberLiteral__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5812:1: rule__NumberLiteral__Group__0__Impl : ( () ) ;
    public final void rule__NumberLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5816:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5817:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5817:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5818:1: ()
            {
             before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5819:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5821:1: 
            {
            }

             after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NumberLiteral__Group__0__Impl"


    // $ANTLR start "rule__NumberLiteral__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5831:1: rule__NumberLiteral__Group__1 : rule__NumberLiteral__Group__1__Impl ;
    public final void rule__NumberLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5835:1: ( rule__NumberLiteral__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5836:2: rule__NumberLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__NumberLiteral__Group__1__Impl_in_rule__NumberLiteral__Group__111974);
            rule__NumberLiteral__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NumberLiteral__Group__1"


    // $ANTLR start "rule__NumberLiteral__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5842:1: rule__NumberLiteral__Group__1__Impl : ( ( rule__NumberLiteral__ValueAssignment_1 ) ) ;
    public final void rule__NumberLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5846:1: ( ( ( rule__NumberLiteral__ValueAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5847:1: ( ( rule__NumberLiteral__ValueAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5847:1: ( ( rule__NumberLiteral__ValueAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5848:1: ( rule__NumberLiteral__ValueAssignment_1 )
            {
             before(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5849:1: ( rule__NumberLiteral__ValueAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5849:2: rule__NumberLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_rule__NumberLiteral__ValueAssignment_1_in_rule__NumberLiteral__Group__1__Impl12001);
            rule__NumberLiteral__ValueAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NumberLiteral__Group__1__Impl"


    // $ANTLR start "rule__ParenthesizedExpression__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5863:1: rule__ParenthesizedExpression__Group__0 : rule__ParenthesizedExpression__Group__0__Impl rule__ParenthesizedExpression__Group__1 ;
    public final void rule__ParenthesizedExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5867:1: ( rule__ParenthesizedExpression__Group__0__Impl rule__ParenthesizedExpression__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5868:2: rule__ParenthesizedExpression__Group__0__Impl rule__ParenthesizedExpression__Group__1
            {
            pushFollow(FOLLOW_rule__ParenthesizedExpression__Group__0__Impl_in_rule__ParenthesizedExpression__Group__012035);
            rule__ParenthesizedExpression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ParenthesizedExpression__Group__1_in_rule__ParenthesizedExpression__Group__012038);
            rule__ParenthesizedExpression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParenthesizedExpression__Group__0"


    // $ANTLR start "rule__ParenthesizedExpression__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5875:1: rule__ParenthesizedExpression__Group__0__Impl : ( '(' ) ;
    public final void rule__ParenthesizedExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5879:1: ( ( '(' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5880:1: ( '(' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5880:1: ( '(' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5881:1: '('
            {
             before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 
            match(input,47,FOLLOW_47_in_rule__ParenthesizedExpression__Group__0__Impl12066); 
             after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParenthesizedExpression__Group__0__Impl"


    // $ANTLR start "rule__ParenthesizedExpression__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5894:1: rule__ParenthesizedExpression__Group__1 : rule__ParenthesizedExpression__Group__1__Impl rule__ParenthesizedExpression__Group__2 ;
    public final void rule__ParenthesizedExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5898:1: ( rule__ParenthesizedExpression__Group__1__Impl rule__ParenthesizedExpression__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5899:2: rule__ParenthesizedExpression__Group__1__Impl rule__ParenthesizedExpression__Group__2
            {
            pushFollow(FOLLOW_rule__ParenthesizedExpression__Group__1__Impl_in_rule__ParenthesizedExpression__Group__112097);
            rule__ParenthesizedExpression__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ParenthesizedExpression__Group__2_in_rule__ParenthesizedExpression__Group__112100);
            rule__ParenthesizedExpression__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParenthesizedExpression__Group__1"


    // $ANTLR start "rule__ParenthesizedExpression__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5906:1: rule__ParenthesizedExpression__Group__1__Impl : ( ruleExpression ) ;
    public final void rule__ParenthesizedExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5910:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5911:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5911:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5912:1: ruleExpression
            {
             before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__ParenthesizedExpression__Group__1__Impl12127);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParenthesizedExpression__Group__1__Impl"


    // $ANTLR start "rule__ParenthesizedExpression__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5923:1: rule__ParenthesizedExpression__Group__2 : rule__ParenthesizedExpression__Group__2__Impl ;
    public final void rule__ParenthesizedExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5927:1: ( rule__ParenthesizedExpression__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5928:2: rule__ParenthesizedExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ParenthesizedExpression__Group__2__Impl_in_rule__ParenthesizedExpression__Group__212156);
            rule__ParenthesizedExpression__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParenthesizedExpression__Group__2"


    // $ANTLR start "rule__ParenthesizedExpression__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5934:1: rule__ParenthesizedExpression__Group__2__Impl : ( ')' ) ;
    public final void rule__ParenthesizedExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5938:1: ( ( ')' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5939:1: ( ')' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5939:1: ( ')' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5940:1: ')'
            {
             before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); 
            match(input,48,FOLLOW_48_in_rule__ParenthesizedExpression__Group__2__Impl12184); 
             after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParenthesizedExpression__Group__2__Impl"


    // $ANTLR start "rule__FunctionCall__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5959:1: rule__FunctionCall__Group__0 : rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1 ;
    public final void rule__FunctionCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5963:1: ( rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5964:2: rule__FunctionCall__Group__0__Impl rule__FunctionCall__Group__1
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group__0__Impl_in_rule__FunctionCall__Group__012221);
            rule__FunctionCall__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__FunctionCall__Group__1_in_rule__FunctionCall__Group__012224);
            rule__FunctionCall__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__0"


    // $ANTLR start "rule__FunctionCall__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5971:1: rule__FunctionCall__Group__0__Impl : ( () ) ;
    public final void rule__FunctionCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5975:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5976:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5976:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5977:1: ()
            {
             before(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5978:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5980:1: 
            {
            }

             after(grammarAccess.getFunctionCallAccess().getFunctionCallAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5990:1: rule__FunctionCall__Group__1 : rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2 ;
    public final void rule__FunctionCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5994:1: ( rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:5995:2: rule__FunctionCall__Group__1__Impl rule__FunctionCall__Group__2
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group__1__Impl_in_rule__FunctionCall__Group__112282);
            rule__FunctionCall__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__FunctionCall__Group__2_in_rule__FunctionCall__Group__112285);
            rule__FunctionCall__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__1"


    // $ANTLR start "rule__FunctionCall__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6002:1: rule__FunctionCall__Group__1__Impl : ( ( rule__FunctionCall__FuncAssignment_1 ) ) ;
    public final void rule__FunctionCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6006:1: ( ( ( rule__FunctionCall__FuncAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6007:1: ( ( rule__FunctionCall__FuncAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6007:1: ( ( rule__FunctionCall__FuncAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6008:1: ( rule__FunctionCall__FuncAssignment_1 )
            {
             before(grammarAccess.getFunctionCallAccess().getFuncAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6009:1: ( rule__FunctionCall__FuncAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6009:2: rule__FunctionCall__FuncAssignment_1
            {
            pushFollow(FOLLOW_rule__FunctionCall__FuncAssignment_1_in_rule__FunctionCall__Group__1__Impl12312);
            rule__FunctionCall__FuncAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getFunctionCallAccess().getFuncAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__1__Impl"


    // $ANTLR start "rule__FunctionCall__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6019:1: rule__FunctionCall__Group__2 : rule__FunctionCall__Group__2__Impl rule__FunctionCall__Group__3 ;
    public final void rule__FunctionCall__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6023:1: ( rule__FunctionCall__Group__2__Impl rule__FunctionCall__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6024:2: rule__FunctionCall__Group__2__Impl rule__FunctionCall__Group__3
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group__2__Impl_in_rule__FunctionCall__Group__212342);
            rule__FunctionCall__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__FunctionCall__Group__3_in_rule__FunctionCall__Group__212345);
            rule__FunctionCall__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__2"


    // $ANTLR start "rule__FunctionCall__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6031:1: rule__FunctionCall__Group__2__Impl : ( '(' ) ;
    public final void rule__FunctionCall__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6035:1: ( ( '(' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6036:1: ( '(' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6036:1: ( '(' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6037:1: '('
            {
             before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); 
            match(input,47,FOLLOW_47_in_rule__FunctionCall__Group__2__Impl12373); 
             after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__2__Impl"


    // $ANTLR start "rule__FunctionCall__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6050:1: rule__FunctionCall__Group__3 : rule__FunctionCall__Group__3__Impl rule__FunctionCall__Group__4 ;
    public final void rule__FunctionCall__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6054:1: ( rule__FunctionCall__Group__3__Impl rule__FunctionCall__Group__4 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6055:2: rule__FunctionCall__Group__3__Impl rule__FunctionCall__Group__4
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group__3__Impl_in_rule__FunctionCall__Group__312404);
            rule__FunctionCall__Group__3__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__FunctionCall__Group__4_in_rule__FunctionCall__Group__312407);
            rule__FunctionCall__Group__4();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__3"


    // $ANTLR start "rule__FunctionCall__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6062:1: rule__FunctionCall__Group__3__Impl : ( ( rule__FunctionCall__Group_3__0 )? ) ;
    public final void rule__FunctionCall__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6066:1: ( ( ( rule__FunctionCall__Group_3__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6067:1: ( ( rule__FunctionCall__Group_3__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6067:1: ( ( rule__FunctionCall__Group_3__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6068:1: ( rule__FunctionCall__Group_3__0 )?
            {
             before(grammarAccess.getFunctionCallAccess().getGroup_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6069:1: ( rule__FunctionCall__Group_3__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_ID||LA43_0==RULE_NUMBER||(LA43_0>=12 && LA43_0<=14)||LA43_0==47||LA43_0==71||(LA43_0>=74 && LA43_0<=76)||(LA43_0>=82 && LA43_0<=83)) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6069:2: rule__FunctionCall__Group_3__0
                    {
                    pushFollow(FOLLOW_rule__FunctionCall__Group_3__0_in_rule__FunctionCall__Group__3__Impl12434);
                    rule__FunctionCall__Group_3__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getFunctionCallAccess().getGroup_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__3__Impl"


    // $ANTLR start "rule__FunctionCall__Group__4"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6079:1: rule__FunctionCall__Group__4 : rule__FunctionCall__Group__4__Impl ;
    public final void rule__FunctionCall__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6083:1: ( rule__FunctionCall__Group__4__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6084:2: rule__FunctionCall__Group__4__Impl
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group__4__Impl_in_rule__FunctionCall__Group__412465);
            rule__FunctionCall__Group__4__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__4"


    // $ANTLR start "rule__FunctionCall__Group__4__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6090:1: rule__FunctionCall__Group__4__Impl : ( ')' ) ;
    public final void rule__FunctionCall__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6094:1: ( ( ')' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6095:1: ( ')' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6095:1: ( ')' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6096:1: ')'
            {
             before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); 
            match(input,48,FOLLOW_48_in_rule__FunctionCall__Group__4__Impl12493); 
             after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_4()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group__4__Impl"


    // $ANTLR start "rule__FunctionCall__Group_3__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6119:1: rule__FunctionCall__Group_3__0 : rule__FunctionCall__Group_3__0__Impl rule__FunctionCall__Group_3__1 ;
    public final void rule__FunctionCall__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6123:1: ( rule__FunctionCall__Group_3__0__Impl rule__FunctionCall__Group_3__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6124:2: rule__FunctionCall__Group_3__0__Impl rule__FunctionCall__Group_3__1
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group_3__0__Impl_in_rule__FunctionCall__Group_3__012534);
            rule__FunctionCall__Group_3__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__FunctionCall__Group_3__1_in_rule__FunctionCall__Group_3__012537);
            rule__FunctionCall__Group_3__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3__0"


    // $ANTLR start "rule__FunctionCall__Group_3__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6131:1: rule__FunctionCall__Group_3__0__Impl : ( ( rule__FunctionCall__ArgsAssignment_3_0 ) ) ;
    public final void rule__FunctionCall__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6135:1: ( ( ( rule__FunctionCall__ArgsAssignment_3_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6136:1: ( ( rule__FunctionCall__ArgsAssignment_3_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6136:1: ( ( rule__FunctionCall__ArgsAssignment_3_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6137:1: ( rule__FunctionCall__ArgsAssignment_3_0 )
            {
             before(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6138:1: ( rule__FunctionCall__ArgsAssignment_3_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6138:2: rule__FunctionCall__ArgsAssignment_3_0
            {
            pushFollow(FOLLOW_rule__FunctionCall__ArgsAssignment_3_0_in_rule__FunctionCall__Group_3__0__Impl12564);
            rule__FunctionCall__ArgsAssignment_3_0();

            state._fsp--;


            }

             after(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group_3__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6148:1: rule__FunctionCall__Group_3__1 : rule__FunctionCall__Group_3__1__Impl ;
    public final void rule__FunctionCall__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6152:1: ( rule__FunctionCall__Group_3__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6153:2: rule__FunctionCall__Group_3__1__Impl
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group_3__1__Impl_in_rule__FunctionCall__Group_3__112594);
            rule__FunctionCall__Group_3__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3__1"


    // $ANTLR start "rule__FunctionCall__Group_3__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6159:1: rule__FunctionCall__Group_3__1__Impl : ( ( rule__FunctionCall__Group_3_1__0 )* ) ;
    public final void rule__FunctionCall__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6163:1: ( ( ( rule__FunctionCall__Group_3_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6164:1: ( ( rule__FunctionCall__Group_3_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6164:1: ( ( rule__FunctionCall__Group_3_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6165:1: ( rule__FunctionCall__Group_3_1__0 )*
            {
             before(grammarAccess.getFunctionCallAccess().getGroup_3_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6166:1: ( rule__FunctionCall__Group_3_1__0 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==49) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6166:2: rule__FunctionCall__Group_3_1__0
            	    {
            	    pushFollow(FOLLOW_rule__FunctionCall__Group_3_1__0_in_rule__FunctionCall__Group_3__1__Impl12621);
            	    rule__FunctionCall__Group_3_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

             after(grammarAccess.getFunctionCallAccess().getGroup_3_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3__1__Impl"


    // $ANTLR start "rule__FunctionCall__Group_3_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6180:1: rule__FunctionCall__Group_3_1__0 : rule__FunctionCall__Group_3_1__0__Impl rule__FunctionCall__Group_3_1__1 ;
    public final void rule__FunctionCall__Group_3_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6184:1: ( rule__FunctionCall__Group_3_1__0__Impl rule__FunctionCall__Group_3_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6185:2: rule__FunctionCall__Group_3_1__0__Impl rule__FunctionCall__Group_3_1__1
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group_3_1__0__Impl_in_rule__FunctionCall__Group_3_1__012656);
            rule__FunctionCall__Group_3_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__FunctionCall__Group_3_1__1_in_rule__FunctionCall__Group_3_1__012659);
            rule__FunctionCall__Group_3_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3_1__0"


    // $ANTLR start "rule__FunctionCall__Group_3_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6192:1: rule__FunctionCall__Group_3_1__0__Impl : ( ',' ) ;
    public final void rule__FunctionCall__Group_3_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6196:1: ( ( ',' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6197:1: ( ',' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6197:1: ( ',' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6198:1: ','
            {
             before(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1_0()); 
            match(input,49,FOLLOW_49_in_rule__FunctionCall__Group_3_1__0__Impl12687); 
             after(grammarAccess.getFunctionCallAccess().getCommaKeyword_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3_1__0__Impl"


    // $ANTLR start "rule__FunctionCall__Group_3_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6211:1: rule__FunctionCall__Group_3_1__1 : rule__FunctionCall__Group_3_1__1__Impl ;
    public final void rule__FunctionCall__Group_3_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6215:1: ( rule__FunctionCall__Group_3_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6216:2: rule__FunctionCall__Group_3_1__1__Impl
            {
            pushFollow(FOLLOW_rule__FunctionCall__Group_3_1__1__Impl_in_rule__FunctionCall__Group_3_1__112718);
            rule__FunctionCall__Group_3_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3_1__1"


    // $ANTLR start "rule__FunctionCall__Group_3_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6222:1: rule__FunctionCall__Group_3_1__1__Impl : ( ( rule__FunctionCall__ArgsAssignment_3_1_1 ) ) ;
    public final void rule__FunctionCall__Group_3_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6226:1: ( ( ( rule__FunctionCall__ArgsAssignment_3_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6227:1: ( ( rule__FunctionCall__ArgsAssignment_3_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6227:1: ( ( rule__FunctionCall__ArgsAssignment_3_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6228:1: ( rule__FunctionCall__ArgsAssignment_3_1_1 )
            {
             before(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6229:1: ( rule__FunctionCall__ArgsAssignment_3_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6229:2: rule__FunctionCall__ArgsAssignment_3_1_1
            {
            pushFollow(FOLLOW_rule__FunctionCall__ArgsAssignment_3_1_1_in_rule__FunctionCall__Group_3_1__1__Impl12745);
            rule__FunctionCall__ArgsAssignment_3_1_1();

            state._fsp--;


            }

             after(grammarAccess.getFunctionCallAccess().getArgsAssignment_3_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__Group_3_1__1__Impl"


    // $ANTLR start "rule__IndexedCall__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6243:1: rule__IndexedCall__Group__0 : rule__IndexedCall__Group__0__Impl rule__IndexedCall__Group__1 ;
    public final void rule__IndexedCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6247:1: ( rule__IndexedCall__Group__0__Impl rule__IndexedCall__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6248:2: rule__IndexedCall__Group__0__Impl rule__IndexedCall__Group__1
            {
            pushFollow(FOLLOW_rule__IndexedCall__Group__0__Impl_in_rule__IndexedCall__Group__012779);
            rule__IndexedCall__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IndexedCall__Group__1_in_rule__IndexedCall__Group__012782);
            rule__IndexedCall__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group__0"


    // $ANTLR start "rule__IndexedCall__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6255:1: rule__IndexedCall__Group__0__Impl : ( ruleVarOrArgumentCall ) ;
    public final void rule__IndexedCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6259:1: ( ( ruleVarOrArgumentCall ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6260:1: ( ruleVarOrArgumentCall )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6260:1: ( ruleVarOrArgumentCall )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6261:1: ruleVarOrArgumentCall
            {
             before(grammarAccess.getIndexedCallAccess().getVarOrArgumentCallParserRuleCall_0()); 
            pushFollow(FOLLOW_ruleVarOrArgumentCall_in_rule__IndexedCall__Group__0__Impl12809);
            ruleVarOrArgumentCall();

            state._fsp--;

             after(grammarAccess.getIndexedCallAccess().getVarOrArgumentCallParserRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group__0__Impl"


    // $ANTLR start "rule__IndexedCall__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6272:1: rule__IndexedCall__Group__1 : rule__IndexedCall__Group__1__Impl ;
    public final void rule__IndexedCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6276:1: ( rule__IndexedCall__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6277:2: rule__IndexedCall__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__IndexedCall__Group__1__Impl_in_rule__IndexedCall__Group__112838);
            rule__IndexedCall__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group__1"


    // $ANTLR start "rule__IndexedCall__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6283:1: rule__IndexedCall__Group__1__Impl : ( ( rule__IndexedCall__Group_1__0 )? ) ;
    public final void rule__IndexedCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6287:1: ( ( ( rule__IndexedCall__Group_1__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6288:1: ( ( rule__IndexedCall__Group_1__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6288:1: ( ( rule__IndexedCall__Group_1__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6289:1: ( rule__IndexedCall__Group_1__0 )?
            {
             before(grammarAccess.getIndexedCallAccess().getGroup_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6290:1: ( rule__IndexedCall__Group_1__0 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==71) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6290:2: rule__IndexedCall__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__IndexedCall__Group_1__0_in_rule__IndexedCall__Group__1__Impl12865);
                    rule__IndexedCall__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getIndexedCallAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group__1__Impl"


    // $ANTLR start "rule__IndexedCall__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6304:1: rule__IndexedCall__Group_1__0 : rule__IndexedCall__Group_1__0__Impl rule__IndexedCall__Group_1__1 ;
    public final void rule__IndexedCall__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6308:1: ( rule__IndexedCall__Group_1__0__Impl rule__IndexedCall__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6309:2: rule__IndexedCall__Group_1__0__Impl rule__IndexedCall__Group_1__1
            {
            pushFollow(FOLLOW_rule__IndexedCall__Group_1__0__Impl_in_rule__IndexedCall__Group_1__012900);
            rule__IndexedCall__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IndexedCall__Group_1__1_in_rule__IndexedCall__Group_1__012903);
            rule__IndexedCall__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group_1__0"


    // $ANTLR start "rule__IndexedCall__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6316:1: rule__IndexedCall__Group_1__0__Impl : ( '[' ) ;
    public final void rule__IndexedCall__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6320:1: ( ( '[' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6321:1: ( '[' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6321:1: ( '[' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6322:1: '['
            {
             before(grammarAccess.getIndexedCallAccess().getLeftSquareBracketKeyword_1_0()); 
            match(input,71,FOLLOW_71_in_rule__IndexedCall__Group_1__0__Impl12931); 
             after(grammarAccess.getIndexedCallAccess().getLeftSquareBracketKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group_1__0__Impl"


    // $ANTLR start "rule__IndexedCall__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6335:1: rule__IndexedCall__Group_1__1 : rule__IndexedCall__Group_1__1__Impl rule__IndexedCall__Group_1__2 ;
    public final void rule__IndexedCall__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6339:1: ( rule__IndexedCall__Group_1__1__Impl rule__IndexedCall__Group_1__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6340:2: rule__IndexedCall__Group_1__1__Impl rule__IndexedCall__Group_1__2
            {
            pushFollow(FOLLOW_rule__IndexedCall__Group_1__1__Impl_in_rule__IndexedCall__Group_1__112962);
            rule__IndexedCall__Group_1__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__IndexedCall__Group_1__2_in_rule__IndexedCall__Group_1__112965);
            rule__IndexedCall__Group_1__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group_1__1"


    // $ANTLR start "rule__IndexedCall__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6347:1: rule__IndexedCall__Group_1__1__Impl : ( ( rule__IndexedCall__IndexAssignment_1_1 ) ) ;
    public final void rule__IndexedCall__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6351:1: ( ( ( rule__IndexedCall__IndexAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6352:1: ( ( rule__IndexedCall__IndexAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6352:1: ( ( rule__IndexedCall__IndexAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6353:1: ( rule__IndexedCall__IndexAssignment_1_1 )
            {
             before(grammarAccess.getIndexedCallAccess().getIndexAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6354:1: ( rule__IndexedCall__IndexAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6354:2: rule__IndexedCall__IndexAssignment_1_1
            {
            pushFollow(FOLLOW_rule__IndexedCall__IndexAssignment_1_1_in_rule__IndexedCall__Group_1__1__Impl12992);
            rule__IndexedCall__IndexAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getIndexedCallAccess().getIndexAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group_1__1__Impl"


    // $ANTLR start "rule__IndexedCall__Group_1__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6364:1: rule__IndexedCall__Group_1__2 : rule__IndexedCall__Group_1__2__Impl ;
    public final void rule__IndexedCall__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6368:1: ( rule__IndexedCall__Group_1__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6369:2: rule__IndexedCall__Group_1__2__Impl
            {
            pushFollow(FOLLOW_rule__IndexedCall__Group_1__2__Impl_in_rule__IndexedCall__Group_1__213022);
            rule__IndexedCall__Group_1__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group_1__2"


    // $ANTLR start "rule__IndexedCall__Group_1__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6375:1: rule__IndexedCall__Group_1__2__Impl : ( ']' ) ;
    public final void rule__IndexedCall__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6379:1: ( ( ']' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6380:1: ( ']' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6380:1: ( ']' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6381:1: ']'
            {
             before(grammarAccess.getIndexedCallAccess().getRightSquareBracketKeyword_1_2()); 
            match(input,72,FOLLOW_72_in_rule__IndexedCall__Group_1__2__Impl13050); 
             after(grammarAccess.getIndexedCallAccess().getRightSquareBracketKeyword_1_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__Group_1__2__Impl"


    // $ANTLR start "rule__NativeExpression__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6400:1: rule__NativeExpression__Group__0 : rule__NativeExpression__Group__0__Impl rule__NativeExpression__Group__1 ;
    public final void rule__NativeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6404:1: ( rule__NativeExpression__Group__0__Impl rule__NativeExpression__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6405:2: rule__NativeExpression__Group__0__Impl rule__NativeExpression__Group__1
            {
            pushFollow(FOLLOW_rule__NativeExpression__Group__0__Impl_in_rule__NativeExpression__Group__013087);
            rule__NativeExpression__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__NativeExpression__Group__1_in_rule__NativeExpression__Group__013090);
            rule__NativeExpression__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__0"


    // $ANTLR start "rule__NativeExpression__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6412:1: rule__NativeExpression__Group__0__Impl : ( () ) ;
    public final void rule__NativeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6416:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6417:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6417:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6418:1: ()
            {
             before(grammarAccess.getNativeExpressionAccess().getNativeExpressionAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6419:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6421:1: 
            {
            }

             after(grammarAccess.getNativeExpressionAccess().getNativeExpressionAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__0__Impl"


    // $ANTLR start "rule__NativeExpression__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6431:1: rule__NativeExpression__Group__1 : rule__NativeExpression__Group__1__Impl rule__NativeExpression__Group__2 ;
    public final void rule__NativeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6435:1: ( rule__NativeExpression__Group__1__Impl rule__NativeExpression__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6436:2: rule__NativeExpression__Group__1__Impl rule__NativeExpression__Group__2
            {
            pushFollow(FOLLOW_rule__NativeExpression__Group__1__Impl_in_rule__NativeExpression__Group__113148);
            rule__NativeExpression__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__NativeExpression__Group__2_in_rule__NativeExpression__Group__113151);
            rule__NativeExpression__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__1"


    // $ANTLR start "rule__NativeExpression__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6443:1: rule__NativeExpression__Group__1__Impl : ( ( rule__NativeExpression__Alternatives_1 ) ) ;
    public final void rule__NativeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6447:1: ( ( ( rule__NativeExpression__Alternatives_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6448:1: ( ( rule__NativeExpression__Alternatives_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6448:1: ( ( rule__NativeExpression__Alternatives_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6449:1: ( rule__NativeExpression__Alternatives_1 )
            {
             before(grammarAccess.getNativeExpressionAccess().getAlternatives_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6450:1: ( rule__NativeExpression__Alternatives_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6450:2: rule__NativeExpression__Alternatives_1
            {
            pushFollow(FOLLOW_rule__NativeExpression__Alternatives_1_in_rule__NativeExpression__Group__1__Impl13178);
            rule__NativeExpression__Alternatives_1();

            state._fsp--;


            }

             after(grammarAccess.getNativeExpressionAccess().getAlternatives_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__1__Impl"


    // $ANTLR start "rule__NativeExpression__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6460:1: rule__NativeExpression__Group__2 : rule__NativeExpression__Group__2__Impl rule__NativeExpression__Group__3 ;
    public final void rule__NativeExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6464:1: ( rule__NativeExpression__Group__2__Impl rule__NativeExpression__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6465:2: rule__NativeExpression__Group__2__Impl rule__NativeExpression__Group__3
            {
            pushFollow(FOLLOW_rule__NativeExpression__Group__2__Impl_in_rule__NativeExpression__Group__213208);
            rule__NativeExpression__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__NativeExpression__Group__3_in_rule__NativeExpression__Group__213211);
            rule__NativeExpression__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__2"


    // $ANTLR start "rule__NativeExpression__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6472:1: rule__NativeExpression__Group__2__Impl : ( '.' ) ;
    public final void rule__NativeExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6476:1: ( ( '.' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6477:1: ( '.' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6477:1: ( '.' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6478:1: '.'
            {
             before(grammarAccess.getNativeExpressionAccess().getFullStopKeyword_2()); 
            match(input,73,FOLLOW_73_in_rule__NativeExpression__Group__2__Impl13239); 
             after(grammarAccess.getNativeExpressionAccess().getFullStopKeyword_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__2__Impl"


    // $ANTLR start "rule__NativeExpression__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6491:1: rule__NativeExpression__Group__3 : rule__NativeExpression__Group__3__Impl ;
    public final void rule__NativeExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6495:1: ( rule__NativeExpression__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6496:2: rule__NativeExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__NativeExpression__Group__3__Impl_in_rule__NativeExpression__Group__313270);
            rule__NativeExpression__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__3"


    // $ANTLR start "rule__NativeExpression__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6502:1: rule__NativeExpression__Group__3__Impl : ( ( rule__NativeExpression__NativeFunctionAssignment_3 ) ) ;
    public final void rule__NativeExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6506:1: ( ( ( rule__NativeExpression__NativeFunctionAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6507:1: ( ( rule__NativeExpression__NativeFunctionAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6507:1: ( ( rule__NativeExpression__NativeFunctionAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6508:1: ( rule__NativeExpression__NativeFunctionAssignment_3 )
            {
             before(grammarAccess.getNativeExpressionAccess().getNativeFunctionAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6509:1: ( rule__NativeExpression__NativeFunctionAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6509:2: rule__NativeExpression__NativeFunctionAssignment_3
            {
            pushFollow(FOLLOW_rule__NativeExpression__NativeFunctionAssignment_3_in_rule__NativeExpression__Group__3__Impl13297);
            rule__NativeExpression__NativeFunctionAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNativeExpressionAccess().getNativeFunctionAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__Group__3__Impl"


    // $ANTLR start "rule__VarOrArgumentCall__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6527:1: rule__VarOrArgumentCall__Group__0 : rule__VarOrArgumentCall__Group__0__Impl rule__VarOrArgumentCall__Group__1 ;
    public final void rule__VarOrArgumentCall__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6531:1: ( rule__VarOrArgumentCall__Group__0__Impl rule__VarOrArgumentCall__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6532:2: rule__VarOrArgumentCall__Group__0__Impl rule__VarOrArgumentCall__Group__1
            {
            pushFollow(FOLLOW_rule__VarOrArgumentCall__Group__0__Impl_in_rule__VarOrArgumentCall__Group__013335);
            rule__VarOrArgumentCall__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__VarOrArgumentCall__Group__1_in_rule__VarOrArgumentCall__Group__013338);
            rule__VarOrArgumentCall__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOrArgumentCall__Group__0"


    // $ANTLR start "rule__VarOrArgumentCall__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6539:1: rule__VarOrArgumentCall__Group__0__Impl : ( () ) ;
    public final void rule__VarOrArgumentCall__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6543:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6544:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6544:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6545:1: ()
            {
             before(grammarAccess.getVarOrArgumentCallAccess().getVarOrArgumentCallAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6546:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6548:1: 
            {
            }

             after(grammarAccess.getVarOrArgumentCallAccess().getVarOrArgumentCallAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOrArgumentCall__Group__0__Impl"


    // $ANTLR start "rule__VarOrArgumentCall__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6558:1: rule__VarOrArgumentCall__Group__1 : rule__VarOrArgumentCall__Group__1__Impl ;
    public final void rule__VarOrArgumentCall__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6562:1: ( rule__VarOrArgumentCall__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6563:2: rule__VarOrArgumentCall__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__VarOrArgumentCall__Group__1__Impl_in_rule__VarOrArgumentCall__Group__113396);
            rule__VarOrArgumentCall__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOrArgumentCall__Group__1"


    // $ANTLR start "rule__VarOrArgumentCall__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6569:1: rule__VarOrArgumentCall__Group__1__Impl : ( ( rule__VarOrArgumentCall__CallAssignment_1 ) ) ;
    public final void rule__VarOrArgumentCall__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6573:1: ( ( ( rule__VarOrArgumentCall__CallAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6574:1: ( ( rule__VarOrArgumentCall__CallAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6574:1: ( ( rule__VarOrArgumentCall__CallAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6575:1: ( rule__VarOrArgumentCall__CallAssignment_1 )
            {
             before(grammarAccess.getVarOrArgumentCallAccess().getCallAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6576:1: ( rule__VarOrArgumentCall__CallAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6576:2: rule__VarOrArgumentCall__CallAssignment_1
            {
            pushFollow(FOLLOW_rule__VarOrArgumentCall__CallAssignment_1_in_rule__VarOrArgumentCall__Group__1__Impl13423);
            rule__VarOrArgumentCall__CallAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getVarOrArgumentCallAccess().getCallAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOrArgumentCall__Group__1__Impl"


    // $ANTLR start "rule__RangeLiteral__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6590:1: rule__RangeLiteral__Group__0 : rule__RangeLiteral__Group__0__Impl rule__RangeLiteral__Group__1 ;
    public final void rule__RangeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6594:1: ( rule__RangeLiteral__Group__0__Impl rule__RangeLiteral__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6595:2: rule__RangeLiteral__Group__0__Impl rule__RangeLiteral__Group__1
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group__0__Impl_in_rule__RangeLiteral__Group__013457);
            rule__RangeLiteral__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__RangeLiteral__Group__1_in_rule__RangeLiteral__Group__013460);
            rule__RangeLiteral__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__0"


    // $ANTLR start "rule__RangeLiteral__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6602:1: rule__RangeLiteral__Group__0__Impl : ( () ) ;
    public final void rule__RangeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6606:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6607:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6607:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6608:1: ()
            {
             before(grammarAccess.getRangeLiteralAccess().getRangeLiteralAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6609:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6611:1: 
            {
            }

             after(grammarAccess.getRangeLiteralAccess().getRangeLiteralAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__0__Impl"


    // $ANTLR start "rule__RangeLiteral__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6621:1: rule__RangeLiteral__Group__1 : rule__RangeLiteral__Group__1__Impl rule__RangeLiteral__Group__2 ;
    public final void rule__RangeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6625:1: ( rule__RangeLiteral__Group__1__Impl rule__RangeLiteral__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6626:2: rule__RangeLiteral__Group__1__Impl rule__RangeLiteral__Group__2
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group__1__Impl_in_rule__RangeLiteral__Group__113518);
            rule__RangeLiteral__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__RangeLiteral__Group__2_in_rule__RangeLiteral__Group__113521);
            rule__RangeLiteral__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__1"


    // $ANTLR start "rule__RangeLiteral__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6633:1: rule__RangeLiteral__Group__1__Impl : ( '[' ) ;
    public final void rule__RangeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6637:1: ( ( '[' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6638:1: ( '[' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6638:1: ( '[' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6639:1: '['
            {
             before(grammarAccess.getRangeLiteralAccess().getLeftSquareBracketKeyword_1()); 
            match(input,71,FOLLOW_71_in_rule__RangeLiteral__Group__1__Impl13549); 
             after(grammarAccess.getRangeLiteralAccess().getLeftSquareBracketKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__1__Impl"


    // $ANTLR start "rule__RangeLiteral__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6652:1: rule__RangeLiteral__Group__2 : rule__RangeLiteral__Group__2__Impl rule__RangeLiteral__Group__3 ;
    public final void rule__RangeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6656:1: ( rule__RangeLiteral__Group__2__Impl rule__RangeLiteral__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6657:2: rule__RangeLiteral__Group__2__Impl rule__RangeLiteral__Group__3
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group__2__Impl_in_rule__RangeLiteral__Group__213580);
            rule__RangeLiteral__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__RangeLiteral__Group__3_in_rule__RangeLiteral__Group__213583);
            rule__RangeLiteral__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__2"


    // $ANTLR start "rule__RangeLiteral__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6664:1: rule__RangeLiteral__Group__2__Impl : ( ( rule__RangeLiteral__Group_2__0 )? ) ;
    public final void rule__RangeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6668:1: ( ( ( rule__RangeLiteral__Group_2__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6669:1: ( ( rule__RangeLiteral__Group_2__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6669:1: ( ( rule__RangeLiteral__Group_2__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6670:1: ( rule__RangeLiteral__Group_2__0 )?
            {
             before(grammarAccess.getRangeLiteralAccess().getGroup_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6671:1: ( rule__RangeLiteral__Group_2__0 )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_NUMBER) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6671:2: rule__RangeLiteral__Group_2__0
                    {
                    pushFollow(FOLLOW_rule__RangeLiteral__Group_2__0_in_rule__RangeLiteral__Group__2__Impl13610);
                    rule__RangeLiteral__Group_2__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getRangeLiteralAccess().getGroup_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__2__Impl"


    // $ANTLR start "rule__RangeLiteral__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6681:1: rule__RangeLiteral__Group__3 : rule__RangeLiteral__Group__3__Impl ;
    public final void rule__RangeLiteral__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6685:1: ( rule__RangeLiteral__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6686:2: rule__RangeLiteral__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group__3__Impl_in_rule__RangeLiteral__Group__313641);
            rule__RangeLiteral__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__3"


    // $ANTLR start "rule__RangeLiteral__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6692:1: rule__RangeLiteral__Group__3__Impl : ( ']' ) ;
    public final void rule__RangeLiteral__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6696:1: ( ( ']' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6697:1: ( ']' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6697:1: ( ']' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6698:1: ']'
            {
             before(grammarAccess.getRangeLiteralAccess().getRightSquareBracketKeyword_3()); 
            match(input,72,FOLLOW_72_in_rule__RangeLiteral__Group__3__Impl13669); 
             after(grammarAccess.getRangeLiteralAccess().getRightSquareBracketKeyword_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group__3__Impl"


    // $ANTLR start "rule__RangeLiteral__Group_2__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6719:1: rule__RangeLiteral__Group_2__0 : rule__RangeLiteral__Group_2__0__Impl rule__RangeLiteral__Group_2__1 ;
    public final void rule__RangeLiteral__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6723:1: ( rule__RangeLiteral__Group_2__0__Impl rule__RangeLiteral__Group_2__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6724:2: rule__RangeLiteral__Group_2__0__Impl rule__RangeLiteral__Group_2__1
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group_2__0__Impl_in_rule__RangeLiteral__Group_2__013708);
            rule__RangeLiteral__Group_2__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__RangeLiteral__Group_2__1_in_rule__RangeLiteral__Group_2__013711);
            rule__RangeLiteral__Group_2__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2__0"


    // $ANTLR start "rule__RangeLiteral__Group_2__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6731:1: rule__RangeLiteral__Group_2__0__Impl : ( ( rule__RangeLiteral__ValuesAssignment_2_0 ) ) ;
    public final void rule__RangeLiteral__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6735:1: ( ( ( rule__RangeLiteral__ValuesAssignment_2_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6736:1: ( ( rule__RangeLiteral__ValuesAssignment_2_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6736:1: ( ( rule__RangeLiteral__ValuesAssignment_2_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6737:1: ( rule__RangeLiteral__ValuesAssignment_2_0 )
            {
             before(grammarAccess.getRangeLiteralAccess().getValuesAssignment_2_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6738:1: ( rule__RangeLiteral__ValuesAssignment_2_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6738:2: rule__RangeLiteral__ValuesAssignment_2_0
            {
            pushFollow(FOLLOW_rule__RangeLiteral__ValuesAssignment_2_0_in_rule__RangeLiteral__Group_2__0__Impl13738);
            rule__RangeLiteral__ValuesAssignment_2_0();

            state._fsp--;


            }

             after(grammarAccess.getRangeLiteralAccess().getValuesAssignment_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2__0__Impl"


    // $ANTLR start "rule__RangeLiteral__Group_2__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6748:1: rule__RangeLiteral__Group_2__1 : rule__RangeLiteral__Group_2__1__Impl ;
    public final void rule__RangeLiteral__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6752:1: ( rule__RangeLiteral__Group_2__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6753:2: rule__RangeLiteral__Group_2__1__Impl
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group_2__1__Impl_in_rule__RangeLiteral__Group_2__113768);
            rule__RangeLiteral__Group_2__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2__1"


    // $ANTLR start "rule__RangeLiteral__Group_2__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6759:1: rule__RangeLiteral__Group_2__1__Impl : ( ( rule__RangeLiteral__Group_2_1__0 )* ) ;
    public final void rule__RangeLiteral__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6763:1: ( ( ( rule__RangeLiteral__Group_2_1__0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6764:1: ( ( rule__RangeLiteral__Group_2_1__0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6764:1: ( ( rule__RangeLiteral__Group_2_1__0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6765:1: ( rule__RangeLiteral__Group_2_1__0 )*
            {
             before(grammarAccess.getRangeLiteralAccess().getGroup_2_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6766:1: ( rule__RangeLiteral__Group_2_1__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==49) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6766:2: rule__RangeLiteral__Group_2_1__0
            	    {
            	    pushFollow(FOLLOW_rule__RangeLiteral__Group_2_1__0_in_rule__RangeLiteral__Group_2__1__Impl13795);
            	    rule__RangeLiteral__Group_2_1__0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

             after(grammarAccess.getRangeLiteralAccess().getGroup_2_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2__1__Impl"


    // $ANTLR start "rule__RangeLiteral__Group_2_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6780:1: rule__RangeLiteral__Group_2_1__0 : rule__RangeLiteral__Group_2_1__0__Impl rule__RangeLiteral__Group_2_1__1 ;
    public final void rule__RangeLiteral__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6784:1: ( rule__RangeLiteral__Group_2_1__0__Impl rule__RangeLiteral__Group_2_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6785:2: rule__RangeLiteral__Group_2_1__0__Impl rule__RangeLiteral__Group_2_1__1
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group_2_1__0__Impl_in_rule__RangeLiteral__Group_2_1__013830);
            rule__RangeLiteral__Group_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__RangeLiteral__Group_2_1__1_in_rule__RangeLiteral__Group_2_1__013833);
            rule__RangeLiteral__Group_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2_1__0"


    // $ANTLR start "rule__RangeLiteral__Group_2_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6792:1: rule__RangeLiteral__Group_2_1__0__Impl : ( ',' ) ;
    public final void rule__RangeLiteral__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6796:1: ( ( ',' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6797:1: ( ',' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6797:1: ( ',' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6798:1: ','
            {
             before(grammarAccess.getRangeLiteralAccess().getCommaKeyword_2_1_0()); 
            match(input,49,FOLLOW_49_in_rule__RangeLiteral__Group_2_1__0__Impl13861); 
             after(grammarAccess.getRangeLiteralAccess().getCommaKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2_1__0__Impl"


    // $ANTLR start "rule__RangeLiteral__Group_2_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6811:1: rule__RangeLiteral__Group_2_1__1 : rule__RangeLiteral__Group_2_1__1__Impl ;
    public final void rule__RangeLiteral__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6815:1: ( rule__RangeLiteral__Group_2_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6816:2: rule__RangeLiteral__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_rule__RangeLiteral__Group_2_1__1__Impl_in_rule__RangeLiteral__Group_2_1__113892);
            rule__RangeLiteral__Group_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2_1__1"


    // $ANTLR start "rule__RangeLiteral__Group_2_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6822:1: rule__RangeLiteral__Group_2_1__1__Impl : ( ( rule__RangeLiteral__ValuesAssignment_2_1_1 ) ) ;
    public final void rule__RangeLiteral__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6826:1: ( ( ( rule__RangeLiteral__ValuesAssignment_2_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6827:1: ( ( rule__RangeLiteral__ValuesAssignment_2_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6827:1: ( ( rule__RangeLiteral__ValuesAssignment_2_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6828:1: ( rule__RangeLiteral__ValuesAssignment_2_1_1 )
            {
             before(grammarAccess.getRangeLiteralAccess().getValuesAssignment_2_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6829:1: ( rule__RangeLiteral__ValuesAssignment_2_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6829:2: rule__RangeLiteral__ValuesAssignment_2_1_1
            {
            pushFollow(FOLLOW_rule__RangeLiteral__ValuesAssignment_2_1_1_in_rule__RangeLiteral__Group_2_1__1__Impl13919);
            rule__RangeLiteral__ValuesAssignment_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getRangeLiteralAccess().getValuesAssignment_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__Group_2_1__1__Impl"


    // $ANTLR start "rule__ParamRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6843:1: rule__ParamRef__Group__0 : rule__ParamRef__Group__0__Impl rule__ParamRef__Group__1 ;
    public final void rule__ParamRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6847:1: ( rule__ParamRef__Group__0__Impl rule__ParamRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6848:2: rule__ParamRef__Group__0__Impl rule__ParamRef__Group__1
            {
            pushFollow(FOLLOW_rule__ParamRef__Group__0__Impl_in_rule__ParamRef__Group__013953);
            rule__ParamRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ParamRef__Group__1_in_rule__ParamRef__Group__013956);
            rule__ParamRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParamRef__Group__0"


    // $ANTLR start "rule__ParamRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6855:1: rule__ParamRef__Group__0__Impl : ( () ) ;
    public final void rule__ParamRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6859:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6860:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6860:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6861:1: ()
            {
             before(grammarAccess.getParamRefAccess().getParamRefAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6862:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6864:1: 
            {
            }

             after(grammarAccess.getParamRefAccess().getParamRefAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParamRef__Group__0__Impl"


    // $ANTLR start "rule__ParamRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6874:1: rule__ParamRef__Group__1 : rule__ParamRef__Group__1__Impl rule__ParamRef__Group__2 ;
    public final void rule__ParamRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6878:1: ( rule__ParamRef__Group__1__Impl rule__ParamRef__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6879:2: rule__ParamRef__Group__1__Impl rule__ParamRef__Group__2
            {
            pushFollow(FOLLOW_rule__ParamRef__Group__1__Impl_in_rule__ParamRef__Group__114014);
            rule__ParamRef__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ParamRef__Group__2_in_rule__ParamRef__Group__114017);
            rule__ParamRef__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParamRef__Group__1"


    // $ANTLR start "rule__ParamRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6886:1: rule__ParamRef__Group__1__Impl : ( 'PARAM' ) ;
    public final void rule__ParamRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6890:1: ( ( 'PARAM' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6891:1: ( 'PARAM' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6891:1: ( 'PARAM' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6892:1: 'PARAM'
            {
             before(grammarAccess.getParamRefAccess().getPARAMKeyword_1()); 
            match(input,74,FOLLOW_74_in_rule__ParamRef__Group__1__Impl14045); 
             after(grammarAccess.getParamRefAccess().getPARAMKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParamRef__Group__1__Impl"


    // $ANTLR start "rule__ParamRef__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6905:1: rule__ParamRef__Group__2 : rule__ParamRef__Group__2__Impl ;
    public final void rule__ParamRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6909:1: ( rule__ParamRef__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6910:2: rule__ParamRef__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ParamRef__Group__2__Impl_in_rule__ParamRef__Group__214076);
            rule__ParamRef__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParamRef__Group__2"


    // $ANTLR start "rule__ParamRef__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6916:1: rule__ParamRef__Group__2__Impl : ( ( rule__ParamRef__ParamAssignment_2 ) ) ;
    public final void rule__ParamRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6920:1: ( ( ( rule__ParamRef__ParamAssignment_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6921:1: ( ( rule__ParamRef__ParamAssignment_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6921:1: ( ( rule__ParamRef__ParamAssignment_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6922:1: ( rule__ParamRef__ParamAssignment_2 )
            {
             before(grammarAccess.getParamRefAccess().getParamAssignment_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6923:1: ( rule__ParamRef__ParamAssignment_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6923:2: rule__ParamRef__ParamAssignment_2
            {
            pushFollow(FOLLOW_rule__ParamRef__ParamAssignment_2_in_rule__ParamRef__Group__2__Impl14103);
            rule__ParamRef__ParamAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getParamRefAccess().getParamAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParamRef__Group__2__Impl"


    // $ANTLR start "rule__NodeTypeRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6939:1: rule__NodeTypeRef__Group__0 : rule__NodeTypeRef__Group__0__Impl rule__NodeTypeRef__Group__1 ;
    public final void rule__NodeTypeRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6943:1: ( rule__NodeTypeRef__Group__0__Impl rule__NodeTypeRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6944:2: rule__NodeTypeRef__Group__0__Impl rule__NodeTypeRef__Group__1
            {
            pushFollow(FOLLOW_rule__NodeTypeRef__Group__0__Impl_in_rule__NodeTypeRef__Group__014139);
            rule__NodeTypeRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__NodeTypeRef__Group__1_in_rule__NodeTypeRef__Group__014142);
            rule__NodeTypeRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__0"


    // $ANTLR start "rule__NodeTypeRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6951:1: rule__NodeTypeRef__Group__0__Impl : ( () ) ;
    public final void rule__NodeTypeRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6955:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6956:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6956:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6957:1: ()
            {
             before(grammarAccess.getNodeTypeRefAccess().getNodeTypeRefAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6958:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6960:1: 
            {
            }

             after(grammarAccess.getNodeTypeRefAccess().getNodeTypeRefAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__0__Impl"


    // $ANTLR start "rule__NodeTypeRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6970:1: rule__NodeTypeRef__Group__1 : rule__NodeTypeRef__Group__1__Impl rule__NodeTypeRef__Group__2 ;
    public final void rule__NodeTypeRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6974:1: ( rule__NodeTypeRef__Group__1__Impl rule__NodeTypeRef__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6975:2: rule__NodeTypeRef__Group__1__Impl rule__NodeTypeRef__Group__2
            {
            pushFollow(FOLLOW_rule__NodeTypeRef__Group__1__Impl_in_rule__NodeTypeRef__Group__114200);
            rule__NodeTypeRef__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__NodeTypeRef__Group__2_in_rule__NodeTypeRef__Group__114203);
            rule__NodeTypeRef__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__1"


    // $ANTLR start "rule__NodeTypeRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6982:1: rule__NodeTypeRef__Group__1__Impl : ( 'NODETYPE' ) ;
    public final void rule__NodeTypeRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6986:1: ( ( 'NODETYPE' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6987:1: ( 'NODETYPE' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6987:1: ( 'NODETYPE' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:6988:1: 'NODETYPE'
            {
             before(grammarAccess.getNodeTypeRefAccess().getNODETYPEKeyword_1()); 
            match(input,75,FOLLOW_75_in_rule__NodeTypeRef__Group__1__Impl14231); 
             after(grammarAccess.getNodeTypeRefAccess().getNODETYPEKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__1__Impl"


    // $ANTLR start "rule__NodeTypeRef__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7001:1: rule__NodeTypeRef__Group__2 : rule__NodeTypeRef__Group__2__Impl rule__NodeTypeRef__Group__3 ;
    public final void rule__NodeTypeRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7005:1: ( rule__NodeTypeRef__Group__2__Impl rule__NodeTypeRef__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7006:2: rule__NodeTypeRef__Group__2__Impl rule__NodeTypeRef__Group__3
            {
            pushFollow(FOLLOW_rule__NodeTypeRef__Group__2__Impl_in_rule__NodeTypeRef__Group__214262);
            rule__NodeTypeRef__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__NodeTypeRef__Group__3_in_rule__NodeTypeRef__Group__214265);
            rule__NodeTypeRef__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__2"


    // $ANTLR start "rule__NodeTypeRef__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7013:1: rule__NodeTypeRef__Group__2__Impl : ( ( rule__NodeTypeRef__NodetypeAssignment_2 ) ) ;
    public final void rule__NodeTypeRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7017:1: ( ( ( rule__NodeTypeRef__NodetypeAssignment_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7018:1: ( ( rule__NodeTypeRef__NodetypeAssignment_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7018:1: ( ( rule__NodeTypeRef__NodetypeAssignment_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7019:1: ( rule__NodeTypeRef__NodetypeAssignment_2 )
            {
             before(grammarAccess.getNodeTypeRefAccess().getNodetypeAssignment_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7020:1: ( rule__NodeTypeRef__NodetypeAssignment_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7020:2: rule__NodeTypeRef__NodetypeAssignment_2
            {
            pushFollow(FOLLOW_rule__NodeTypeRef__NodetypeAssignment_2_in_rule__NodeTypeRef__Group__2__Impl14292);
            rule__NodeTypeRef__NodetypeAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getNodeTypeRefAccess().getNodetypeAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__2__Impl"


    // $ANTLR start "rule__NodeTypeRef__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7030:1: rule__NodeTypeRef__Group__3 : rule__NodeTypeRef__Group__3__Impl ;
    public final void rule__NodeTypeRef__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7034:1: ( rule__NodeTypeRef__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7035:2: rule__NodeTypeRef__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__NodeTypeRef__Group__3__Impl_in_rule__NodeTypeRef__Group__314322);
            rule__NodeTypeRef__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__3"


    // $ANTLR start "rule__NodeTypeRef__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7041:1: rule__NodeTypeRef__Group__3__Impl : ( ( rule__NodeTypeRef__PrimaryRefAssignment_3 ) ) ;
    public final void rule__NodeTypeRef__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7045:1: ( ( ( rule__NodeTypeRef__PrimaryRefAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7046:1: ( ( rule__NodeTypeRef__PrimaryRefAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7046:1: ( ( rule__NodeTypeRef__PrimaryRefAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7047:1: ( rule__NodeTypeRef__PrimaryRefAssignment_3 )
            {
             before(grammarAccess.getNodeTypeRefAccess().getPrimaryRefAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7048:1: ( rule__NodeTypeRef__PrimaryRefAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7048:2: rule__NodeTypeRef__PrimaryRefAssignment_3
            {
            pushFollow(FOLLOW_rule__NodeTypeRef__PrimaryRefAssignment_3_in_rule__NodeTypeRef__Group__3__Impl14349);
            rule__NodeTypeRef__PrimaryRefAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getNodeTypeRefAccess().getPrimaryRefAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__Group__3__Impl"


    // $ANTLR start "rule__ContextRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7066:1: rule__ContextRef__Group__0 : rule__ContextRef__Group__0__Impl rule__ContextRef__Group__1 ;
    public final void rule__ContextRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7070:1: ( rule__ContextRef__Group__0__Impl rule__ContextRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7071:2: rule__ContextRef__Group__0__Impl rule__ContextRef__Group__1
            {
            pushFollow(FOLLOW_rule__ContextRef__Group__0__Impl_in_rule__ContextRef__Group__014387);
            rule__ContextRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ContextRef__Group__1_in_rule__ContextRef__Group__014390);
            rule__ContextRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__Group__0"


    // $ANTLR start "rule__ContextRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7078:1: rule__ContextRef__Group__0__Impl : ( () ) ;
    public final void rule__ContextRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7082:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7083:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7083:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7084:1: ()
            {
             before(grammarAccess.getContextRefAccess().getContextRefAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7085:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7087:1: 
            {
            }

             after(grammarAccess.getContextRefAccess().getContextRefAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__Group__0__Impl"


    // $ANTLR start "rule__ContextRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7097:1: rule__ContextRef__Group__1 : rule__ContextRef__Group__1__Impl rule__ContextRef__Group__2 ;
    public final void rule__ContextRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7101:1: ( rule__ContextRef__Group__1__Impl rule__ContextRef__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7102:2: rule__ContextRef__Group__1__Impl rule__ContextRef__Group__2
            {
            pushFollow(FOLLOW_rule__ContextRef__Group__1__Impl_in_rule__ContextRef__Group__114448);
            rule__ContextRef__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ContextRef__Group__2_in_rule__ContextRef__Group__114451);
            rule__ContextRef__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__Group__1"


    // $ANTLR start "rule__ContextRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7109:1: rule__ContextRef__Group__1__Impl : ( 'this' ) ;
    public final void rule__ContextRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7113:1: ( ( 'this' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7114:1: ( 'this' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7114:1: ( 'this' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7115:1: 'this'
            {
             before(grammarAccess.getContextRefAccess().getThisKeyword_1()); 
            match(input,76,FOLLOW_76_in_rule__ContextRef__Group__1__Impl14479); 
             after(grammarAccess.getContextRefAccess().getThisKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__Group__1__Impl"


    // $ANTLR start "rule__ContextRef__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7128:1: rule__ContextRef__Group__2 : rule__ContextRef__Group__2__Impl ;
    public final void rule__ContextRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7132:1: ( rule__ContextRef__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7133:2: rule__ContextRef__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ContextRef__Group__2__Impl_in_rule__ContextRef__Group__214510);
            rule__ContextRef__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__Group__2"


    // $ANTLR start "rule__ContextRef__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7139:1: rule__ContextRef__Group__2__Impl : ( ( rule__ContextRef__Alternatives_2 ) ) ;
    public final void rule__ContextRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7143:1: ( ( ( rule__ContextRef__Alternatives_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7144:1: ( ( rule__ContextRef__Alternatives_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7144:1: ( ( rule__ContextRef__Alternatives_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7145:1: ( rule__ContextRef__Alternatives_2 )
            {
             before(grammarAccess.getContextRefAccess().getAlternatives_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7146:1: ( rule__ContextRef__Alternatives_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7146:2: rule__ContextRef__Alternatives_2
            {
            pushFollow(FOLLOW_rule__ContextRef__Alternatives_2_in_rule__ContextRef__Group__2__Impl14537);
            rule__ContextRef__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getContextRefAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__Group__2__Impl"


    // $ANTLR start "rule__PrimaryRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7162:1: rule__PrimaryRef__Group__0 : rule__PrimaryRef__Group__0__Impl rule__PrimaryRef__Group__1 ;
    public final void rule__PrimaryRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7166:1: ( rule__PrimaryRef__Group__0__Impl rule__PrimaryRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7167:2: rule__PrimaryRef__Group__0__Impl rule__PrimaryRef__Group__1
            {
            pushFollow(FOLLOW_rule__PrimaryRef__Group__0__Impl_in_rule__PrimaryRef__Group__014573);
            rule__PrimaryRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__PrimaryRef__Group__1_in_rule__PrimaryRef__Group__014576);
            rule__PrimaryRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group__0"


    // $ANTLR start "rule__PrimaryRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7174:1: rule__PrimaryRef__Group__0__Impl : ( ( ( rule__PrimaryRef__ComponentsAssignment_0 ) ) ( ( rule__PrimaryRef__ComponentsAssignment_0 )* ) ) ;
    public final void rule__PrimaryRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7178:1: ( ( ( ( rule__PrimaryRef__ComponentsAssignment_0 ) ) ( ( rule__PrimaryRef__ComponentsAssignment_0 )* ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7179:1: ( ( ( rule__PrimaryRef__ComponentsAssignment_0 ) ) ( ( rule__PrimaryRef__ComponentsAssignment_0 )* ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7179:1: ( ( ( rule__PrimaryRef__ComponentsAssignment_0 ) ) ( ( rule__PrimaryRef__ComponentsAssignment_0 )* ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7180:1: ( ( rule__PrimaryRef__ComponentsAssignment_0 ) ) ( ( rule__PrimaryRef__ComponentsAssignment_0 )* )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7180:1: ( ( rule__PrimaryRef__ComponentsAssignment_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7181:1: ( rule__PrimaryRef__ComponentsAssignment_0 )
            {
             before(grammarAccess.getPrimaryRefAccess().getComponentsAssignment_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7182:1: ( rule__PrimaryRef__ComponentsAssignment_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7182:2: rule__PrimaryRef__ComponentsAssignment_0
            {
            pushFollow(FOLLOW_rule__PrimaryRef__ComponentsAssignment_0_in_rule__PrimaryRef__Group__0__Impl14605);
            rule__PrimaryRef__ComponentsAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryRefAccess().getComponentsAssignment_0()); 

            }

            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7185:1: ( ( rule__PrimaryRef__ComponentsAssignment_0 )* )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7186:1: ( rule__PrimaryRef__ComponentsAssignment_0 )*
            {
             before(grammarAccess.getPrimaryRefAccess().getComponentsAssignment_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7187:1: ( rule__PrimaryRef__ComponentsAssignment_0 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==73) ) {
                    int LA48_2 = input.LA(2);

                    if ( ((LA48_2>=15 && LA48_2<=16)||(LA48_2>=78 && LA48_2<=79)) ) {
                        alt48=1;
                    }


                }


                switch (alt48) {
            	case 1 :
            	    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7187:2: rule__PrimaryRef__ComponentsAssignment_0
            	    {
            	    pushFollow(FOLLOW_rule__PrimaryRef__ComponentsAssignment_0_in_rule__PrimaryRef__Group__0__Impl14617);
            	    rule__PrimaryRef__ComponentsAssignment_0();

            	    state._fsp--;


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

             after(grammarAccess.getPrimaryRefAccess().getComponentsAssignment_0()); 

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group__0__Impl"


    // $ANTLR start "rule__PrimaryRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7198:1: rule__PrimaryRef__Group__1 : rule__PrimaryRef__Group__1__Impl ;
    public final void rule__PrimaryRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7202:1: ( rule__PrimaryRef__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7203:2: rule__PrimaryRef__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__PrimaryRef__Group__1__Impl_in_rule__PrimaryRef__Group__114650);
            rule__PrimaryRef__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group__1"


    // $ANTLR start "rule__PrimaryRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7209:1: rule__PrimaryRef__Group__1__Impl : ( ( rule__PrimaryRef__Group_1__0 )? ) ;
    public final void rule__PrimaryRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7213:1: ( ( ( rule__PrimaryRef__Group_1__0 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7214:1: ( ( rule__PrimaryRef__Group_1__0 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7214:1: ( ( rule__PrimaryRef__Group_1__0 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7215:1: ( rule__PrimaryRef__Group_1__0 )?
            {
             before(grammarAccess.getPrimaryRefAccess().getGroup_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7216:1: ( rule__PrimaryRef__Group_1__0 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==77) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7216:2: rule__PrimaryRef__Group_1__0
                    {
                    pushFollow(FOLLOW_rule__PrimaryRef__Group_1__0_in_rule__PrimaryRef__Group__1__Impl14677);
                    rule__PrimaryRef__Group_1__0();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getPrimaryRefAccess().getGroup_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group__1__Impl"


    // $ANTLR start "rule__PrimaryRef__Group_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7230:1: rule__PrimaryRef__Group_1__0 : rule__PrimaryRef__Group_1__0__Impl rule__PrimaryRef__Group_1__1 ;
    public final void rule__PrimaryRef__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7234:1: ( rule__PrimaryRef__Group_1__0__Impl rule__PrimaryRef__Group_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7235:2: rule__PrimaryRef__Group_1__0__Impl rule__PrimaryRef__Group_1__1
            {
            pushFollow(FOLLOW_rule__PrimaryRef__Group_1__0__Impl_in_rule__PrimaryRef__Group_1__014712);
            rule__PrimaryRef__Group_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__PrimaryRef__Group_1__1_in_rule__PrimaryRef__Group_1__014715);
            rule__PrimaryRef__Group_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group_1__0"


    // $ANTLR start "rule__PrimaryRef__Group_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7242:1: rule__PrimaryRef__Group_1__0__Impl : ( '->' ) ;
    public final void rule__PrimaryRef__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7246:1: ( ( '->' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7247:1: ( '->' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7247:1: ( '->' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7248:1: '->'
            {
             before(grammarAccess.getPrimaryRefAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); 
            match(input,77,FOLLOW_77_in_rule__PrimaryRef__Group_1__0__Impl14743); 
             after(grammarAccess.getPrimaryRefAccess().getHyphenMinusGreaterThanSignKeyword_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group_1__0__Impl"


    // $ANTLR start "rule__PrimaryRef__Group_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7261:1: rule__PrimaryRef__Group_1__1 : rule__PrimaryRef__Group_1__1__Impl ;
    public final void rule__PrimaryRef__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7265:1: ( rule__PrimaryRef__Group_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7266:2: rule__PrimaryRef__Group_1__1__Impl
            {
            pushFollow(FOLLOW_rule__PrimaryRef__Group_1__1__Impl_in_rule__PrimaryRef__Group_1__114774);
            rule__PrimaryRef__Group_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group_1__1"


    // $ANTLR start "rule__PrimaryRef__Group_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7272:1: rule__PrimaryRef__Group_1__1__Impl : ( ( rule__PrimaryRef__LeafRefAssignment_1_1 ) ) ;
    public final void rule__PrimaryRef__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7276:1: ( ( ( rule__PrimaryRef__LeafRefAssignment_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7277:1: ( ( rule__PrimaryRef__LeafRefAssignment_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7277:1: ( ( rule__PrimaryRef__LeafRefAssignment_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7278:1: ( rule__PrimaryRef__LeafRefAssignment_1_1 )
            {
             before(grammarAccess.getPrimaryRefAccess().getLeafRefAssignment_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7279:1: ( rule__PrimaryRef__LeafRefAssignment_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7279:2: rule__PrimaryRef__LeafRefAssignment_1_1
            {
            pushFollow(FOLLOW_rule__PrimaryRef__LeafRefAssignment_1_1_in_rule__PrimaryRef__Group_1__1__Impl14801);
            rule__PrimaryRef__LeafRefAssignment_1_1();

            state._fsp--;


            }

             after(grammarAccess.getPrimaryRefAccess().getLeafRefAssignment_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__Group_1__1__Impl"


    // $ANTLR start "rule__ComponentRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7293:1: rule__ComponentRef__Group__0 : rule__ComponentRef__Group__0__Impl rule__ComponentRef__Group__1 ;
    public final void rule__ComponentRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7297:1: ( rule__ComponentRef__Group__0__Impl rule__ComponentRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7298:2: rule__ComponentRef__Group__0__Impl rule__ComponentRef__Group__1
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group__0__Impl_in_rule__ComponentRef__Group__014835);
            rule__ComponentRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ComponentRef__Group__1_in_rule__ComponentRef__Group__014838);
            rule__ComponentRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group__0"


    // $ANTLR start "rule__ComponentRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7305:1: rule__ComponentRef__Group__0__Impl : ( () ) ;
    public final void rule__ComponentRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7309:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7310:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7310:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7311:1: ()
            {
             before(grammarAccess.getComponentRefAccess().getComponentRefAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7312:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7314:1: 
            {
            }

             after(grammarAccess.getComponentRefAccess().getComponentRefAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group__0__Impl"


    // $ANTLR start "rule__ComponentRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7324:1: rule__ComponentRef__Group__1 : rule__ComponentRef__Group__1__Impl rule__ComponentRef__Group__2 ;
    public final void rule__ComponentRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7328:1: ( rule__ComponentRef__Group__1__Impl rule__ComponentRef__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7329:2: rule__ComponentRef__Group__1__Impl rule__ComponentRef__Group__2
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group__1__Impl_in_rule__ComponentRef__Group__114896);
            rule__ComponentRef__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ComponentRef__Group__2_in_rule__ComponentRef__Group__114899);
            rule__ComponentRef__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group__1"


    // $ANTLR start "rule__ComponentRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7336:1: rule__ComponentRef__Group__1__Impl : ( '.' ) ;
    public final void rule__ComponentRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7340:1: ( ( '.' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7341:1: ( '.' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7341:1: ( '.' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7342:1: '.'
            {
             before(grammarAccess.getComponentRefAccess().getFullStopKeyword_1()); 
            match(input,73,FOLLOW_73_in_rule__ComponentRef__Group__1__Impl14927); 
             after(grammarAccess.getComponentRefAccess().getFullStopKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group__1__Impl"


    // $ANTLR start "rule__ComponentRef__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7355:1: rule__ComponentRef__Group__2 : rule__ComponentRef__Group__2__Impl ;
    public final void rule__ComponentRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7359:1: ( rule__ComponentRef__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7360:2: rule__ComponentRef__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group__2__Impl_in_rule__ComponentRef__Group__214958);
            rule__ComponentRef__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group__2"


    // $ANTLR start "rule__ComponentRef__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7366:1: rule__ComponentRef__Group__2__Impl : ( ( rule__ComponentRef__Alternatives_2 ) ) ;
    public final void rule__ComponentRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7370:1: ( ( ( rule__ComponentRef__Alternatives_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7371:1: ( ( rule__ComponentRef__Alternatives_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7371:1: ( ( rule__ComponentRef__Alternatives_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7372:1: ( rule__ComponentRef__Alternatives_2 )
            {
             before(grammarAccess.getComponentRefAccess().getAlternatives_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7373:1: ( rule__ComponentRef__Alternatives_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7373:2: rule__ComponentRef__Alternatives_2
            {
            pushFollow(FOLLOW_rule__ComponentRef__Alternatives_2_in_rule__ComponentRef__Group__2__Impl14985);
            rule__ComponentRef__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getComponentRefAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group__2__Impl"


    // $ANTLR start "rule__ComponentRef__Group_2_0__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7389:1: rule__ComponentRef__Group_2_0__0 : rule__ComponentRef__Group_2_0__0__Impl rule__ComponentRef__Group_2_0__1 ;
    public final void rule__ComponentRef__Group_2_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7393:1: ( rule__ComponentRef__Group_2_0__0__Impl rule__ComponentRef__Group_2_0__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7394:2: rule__ComponentRef__Group_2_0__0__Impl rule__ComponentRef__Group_2_0__1
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group_2_0__0__Impl_in_rule__ComponentRef__Group_2_0__015021);
            rule__ComponentRef__Group_2_0__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ComponentRef__Group_2_0__1_in_rule__ComponentRef__Group_2_0__015024);
            rule__ComponentRef__Group_2_0__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_0__0"


    // $ANTLR start "rule__ComponentRef__Group_2_0__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7401:1: rule__ComponentRef__Group_2_0__0__Impl : ( 'FUNCTION' ) ;
    public final void rule__ComponentRef__Group_2_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7405:1: ( ( 'FUNCTION' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7406:1: ( 'FUNCTION' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7406:1: ( 'FUNCTION' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7407:1: 'FUNCTION'
            {
             before(grammarAccess.getComponentRefAccess().getFUNCTIONKeyword_2_0_0()); 
            match(input,78,FOLLOW_78_in_rule__ComponentRef__Group_2_0__0__Impl15052); 
             after(grammarAccess.getComponentRefAccess().getFUNCTIONKeyword_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_0__0__Impl"


    // $ANTLR start "rule__ComponentRef__Group_2_0__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7420:1: rule__ComponentRef__Group_2_0__1 : rule__ComponentRef__Group_2_0__1__Impl ;
    public final void rule__ComponentRef__Group_2_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7424:1: ( rule__ComponentRef__Group_2_0__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7425:2: rule__ComponentRef__Group_2_0__1__Impl
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group_2_0__1__Impl_in_rule__ComponentRef__Group_2_0__115083);
            rule__ComponentRef__Group_2_0__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_0__1"


    // $ANTLR start "rule__ComponentRef__Group_2_0__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7431:1: rule__ComponentRef__Group_2_0__1__Impl : ( ( rule__ComponentRef__FunctionAssignment_2_0_1 ) ) ;
    public final void rule__ComponentRef__Group_2_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7435:1: ( ( ( rule__ComponentRef__FunctionAssignment_2_0_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7436:1: ( ( rule__ComponentRef__FunctionAssignment_2_0_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7436:1: ( ( rule__ComponentRef__FunctionAssignment_2_0_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7437:1: ( rule__ComponentRef__FunctionAssignment_2_0_1 )
            {
             before(grammarAccess.getComponentRefAccess().getFunctionAssignment_2_0_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7438:1: ( rule__ComponentRef__FunctionAssignment_2_0_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7438:2: rule__ComponentRef__FunctionAssignment_2_0_1
            {
            pushFollow(FOLLOW_rule__ComponentRef__FunctionAssignment_2_0_1_in_rule__ComponentRef__Group_2_0__1__Impl15110);
            rule__ComponentRef__FunctionAssignment_2_0_1();

            state._fsp--;


            }

             after(grammarAccess.getComponentRefAccess().getFunctionAssignment_2_0_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_0__1__Impl"


    // $ANTLR start "rule__ComponentRef__Group_2_1__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7452:1: rule__ComponentRef__Group_2_1__0 : rule__ComponentRef__Group_2_1__0__Impl rule__ComponentRef__Group_2_1__1 ;
    public final void rule__ComponentRef__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7456:1: ( rule__ComponentRef__Group_2_1__0__Impl rule__ComponentRef__Group_2_1__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7457:2: rule__ComponentRef__Group_2_1__0__Impl rule__ComponentRef__Group_2_1__1
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group_2_1__0__Impl_in_rule__ComponentRef__Group_2_1__015144);
            rule__ComponentRef__Group_2_1__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ComponentRef__Group_2_1__1_in_rule__ComponentRef__Group_2_1__015147);
            rule__ComponentRef__Group_2_1__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_1__0"


    // $ANTLR start "rule__ComponentRef__Group_2_1__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7464:1: rule__ComponentRef__Group_2_1__0__Impl : ( 'EQUIPMENT' ) ;
    public final void rule__ComponentRef__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7468:1: ( ( 'EQUIPMENT' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7469:1: ( 'EQUIPMENT' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7469:1: ( 'EQUIPMENT' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7470:1: 'EQUIPMENT'
            {
             before(grammarAccess.getComponentRefAccess().getEQUIPMENTKeyword_2_1_0()); 
            match(input,79,FOLLOW_79_in_rule__ComponentRef__Group_2_1__0__Impl15175); 
             after(grammarAccess.getComponentRefAccess().getEQUIPMENTKeyword_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_1__0__Impl"


    // $ANTLR start "rule__ComponentRef__Group_2_1__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7483:1: rule__ComponentRef__Group_2_1__1 : rule__ComponentRef__Group_2_1__1__Impl ;
    public final void rule__ComponentRef__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7487:1: ( rule__ComponentRef__Group_2_1__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7488:2: rule__ComponentRef__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_rule__ComponentRef__Group_2_1__1__Impl_in_rule__ComponentRef__Group_2_1__115206);
            rule__ComponentRef__Group_2_1__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_1__1"


    // $ANTLR start "rule__ComponentRef__Group_2_1__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7494:1: rule__ComponentRef__Group_2_1__1__Impl : ( ( rule__ComponentRef__EquipmentAssignment_2_1_1 ) ) ;
    public final void rule__ComponentRef__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7498:1: ( ( ( rule__ComponentRef__EquipmentAssignment_2_1_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7499:1: ( ( rule__ComponentRef__EquipmentAssignment_2_1_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7499:1: ( ( rule__ComponentRef__EquipmentAssignment_2_1_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7500:1: ( rule__ComponentRef__EquipmentAssignment_2_1_1 )
            {
             before(grammarAccess.getComponentRefAccess().getEquipmentAssignment_2_1_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7501:1: ( rule__ComponentRef__EquipmentAssignment_2_1_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7501:2: rule__ComponentRef__EquipmentAssignment_2_1_1
            {
            pushFollow(FOLLOW_rule__ComponentRef__EquipmentAssignment_2_1_1_in_rule__ComponentRef__Group_2_1__1__Impl15233);
            rule__ComponentRef__EquipmentAssignment_2_1_1();

            state._fsp--;


            }

             after(grammarAccess.getComponentRefAccess().getEquipmentAssignment_2_1_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__Group_2_1__1__Impl"


    // $ANTLR start "rule__ResourceRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7515:1: rule__ResourceRef__Group__0 : rule__ResourceRef__Group__0__Impl rule__ResourceRef__Group__1 ;
    public final void rule__ResourceRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7519:1: ( rule__ResourceRef__Group__0__Impl rule__ResourceRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7520:2: rule__ResourceRef__Group__0__Impl rule__ResourceRef__Group__1
            {
            pushFollow(FOLLOW_rule__ResourceRef__Group__0__Impl_in_rule__ResourceRef__Group__015267);
            rule__ResourceRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ResourceRef__Group__1_in_rule__ResourceRef__Group__015270);
            rule__ResourceRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__0"


    // $ANTLR start "rule__ResourceRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7527:1: rule__ResourceRef__Group__0__Impl : ( () ) ;
    public final void rule__ResourceRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7531:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7532:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7532:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7533:1: ()
            {
             before(grammarAccess.getResourceRefAccess().getResourceRefAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7534:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7536:1: 
            {
            }

             after(grammarAccess.getResourceRefAccess().getResourceRefAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__0__Impl"


    // $ANTLR start "rule__ResourceRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7546:1: rule__ResourceRef__Group__1 : rule__ResourceRef__Group__1__Impl rule__ResourceRef__Group__2 ;
    public final void rule__ResourceRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7550:1: ( rule__ResourceRef__Group__1__Impl rule__ResourceRef__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7551:2: rule__ResourceRef__Group__1__Impl rule__ResourceRef__Group__2
            {
            pushFollow(FOLLOW_rule__ResourceRef__Group__1__Impl_in_rule__ResourceRef__Group__115328);
            rule__ResourceRef__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ResourceRef__Group__2_in_rule__ResourceRef__Group__115331);
            rule__ResourceRef__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__1"


    // $ANTLR start "rule__ResourceRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7558:1: rule__ResourceRef__Group__1__Impl : ( 'RESOURCE' ) ;
    public final void rule__ResourceRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7562:1: ( ( 'RESOURCE' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7563:1: ( 'RESOURCE' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7563:1: ( 'RESOURCE' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7564:1: 'RESOURCE'
            {
             before(grammarAccess.getResourceRefAccess().getRESOURCEKeyword_1()); 
            match(input,80,FOLLOW_80_in_rule__ResourceRef__Group__1__Impl15359); 
             after(grammarAccess.getResourceRefAccess().getRESOURCEKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__1__Impl"


    // $ANTLR start "rule__ResourceRef__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7577:1: rule__ResourceRef__Group__2 : rule__ResourceRef__Group__2__Impl rule__ResourceRef__Group__3 ;
    public final void rule__ResourceRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7581:1: ( rule__ResourceRef__Group__2__Impl rule__ResourceRef__Group__3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7582:2: rule__ResourceRef__Group__2__Impl rule__ResourceRef__Group__3
            {
            pushFollow(FOLLOW_rule__ResourceRef__Group__2__Impl_in_rule__ResourceRef__Group__215390);
            rule__ResourceRef__Group__2__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__ResourceRef__Group__3_in_rule__ResourceRef__Group__215393);
            rule__ResourceRef__Group__3();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__2"


    // $ANTLR start "rule__ResourceRef__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7589:1: rule__ResourceRef__Group__2__Impl : ( ( rule__ResourceRef__Alternatives_2 ) ) ;
    public final void rule__ResourceRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7593:1: ( ( ( rule__ResourceRef__Alternatives_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7594:1: ( ( rule__ResourceRef__Alternatives_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7594:1: ( ( rule__ResourceRef__Alternatives_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7595:1: ( rule__ResourceRef__Alternatives_2 )
            {
             before(grammarAccess.getResourceRefAccess().getAlternatives_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7596:1: ( rule__ResourceRef__Alternatives_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7596:2: rule__ResourceRef__Alternatives_2
            {
            pushFollow(FOLLOW_rule__ResourceRef__Alternatives_2_in_rule__ResourceRef__Group__2__Impl15420);
            rule__ResourceRef__Alternatives_2();

            state._fsp--;


            }

             after(grammarAccess.getResourceRefAccess().getAlternatives_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__2__Impl"


    // $ANTLR start "rule__ResourceRef__Group__3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7606:1: rule__ResourceRef__Group__3 : rule__ResourceRef__Group__3__Impl ;
    public final void rule__ResourceRef__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7610:1: ( rule__ResourceRef__Group__3__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7611:2: rule__ResourceRef__Group__3__Impl
            {
            pushFollow(FOLLOW_rule__ResourceRef__Group__3__Impl_in_rule__ResourceRef__Group__315450);
            rule__ResourceRef__Group__3__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__3"


    // $ANTLR start "rule__ResourceRef__Group__3__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7617:1: rule__ResourceRef__Group__3__Impl : ( ( rule__ResourceRef__RangeRefAssignment_3 ) ) ;
    public final void rule__ResourceRef__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7621:1: ( ( ( rule__ResourceRef__RangeRefAssignment_3 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7622:1: ( ( rule__ResourceRef__RangeRefAssignment_3 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7622:1: ( ( rule__ResourceRef__RangeRefAssignment_3 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7623:1: ( rule__ResourceRef__RangeRefAssignment_3 )
            {
             before(grammarAccess.getResourceRefAccess().getRangeRefAssignment_3()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7624:1: ( rule__ResourceRef__RangeRefAssignment_3 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7624:2: rule__ResourceRef__RangeRefAssignment_3
            {
            pushFollow(FOLLOW_rule__ResourceRef__RangeRefAssignment_3_in_rule__ResourceRef__Group__3__Impl15477);
            rule__ResourceRef__RangeRefAssignment_3();

            state._fsp--;


            }

             after(grammarAccess.getResourceRefAccess().getRangeRefAssignment_3()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__Group__3__Impl"


    // $ANTLR start "rule__StatusRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7642:1: rule__StatusRef__Group__0 : rule__StatusRef__Group__0__Impl rule__StatusRef__Group__1 ;
    public final void rule__StatusRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7646:1: ( rule__StatusRef__Group__0__Impl rule__StatusRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7647:2: rule__StatusRef__Group__0__Impl rule__StatusRef__Group__1
            {
            pushFollow(FOLLOW_rule__StatusRef__Group__0__Impl_in_rule__StatusRef__Group__015515);
            rule__StatusRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__StatusRef__Group__1_in_rule__StatusRef__Group__015518);
            rule__StatusRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatusRef__Group__0"


    // $ANTLR start "rule__StatusRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7654:1: rule__StatusRef__Group__0__Impl : ( () ) ;
    public final void rule__StatusRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7658:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7659:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7659:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7660:1: ()
            {
             before(grammarAccess.getStatusRefAccess().getStatusRefAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7661:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7663:1: 
            {
            }

             after(grammarAccess.getStatusRefAccess().getStatusRefAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatusRef__Group__0__Impl"


    // $ANTLR start "rule__StatusRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7673:1: rule__StatusRef__Group__1 : rule__StatusRef__Group__1__Impl ;
    public final void rule__StatusRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7677:1: ( rule__StatusRef__Group__1__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7678:2: rule__StatusRef__Group__1__Impl
            {
            pushFollow(FOLLOW_rule__StatusRef__Group__1__Impl_in_rule__StatusRef__Group__115576);
            rule__StatusRef__Group__1__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatusRef__Group__1"


    // $ANTLR start "rule__StatusRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7684:1: rule__StatusRef__Group__1__Impl : ( ( rule__StatusRef__TolerancelevelAssignment_1 ) ) ;
    public final void rule__StatusRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7688:1: ( ( ( rule__StatusRef__TolerancelevelAssignment_1 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7689:1: ( ( rule__StatusRef__TolerancelevelAssignment_1 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7689:1: ( ( rule__StatusRef__TolerancelevelAssignment_1 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7690:1: ( rule__StatusRef__TolerancelevelAssignment_1 )
            {
             before(grammarAccess.getStatusRefAccess().getTolerancelevelAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7691:1: ( rule__StatusRef__TolerancelevelAssignment_1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7691:2: rule__StatusRef__TolerancelevelAssignment_1
            {
            pushFollow(FOLLOW_rule__StatusRef__TolerancelevelAssignment_1_in_rule__StatusRef__Group__1__Impl15603);
            rule__StatusRef__TolerancelevelAssignment_1();

            state._fsp--;


            }

             after(grammarAccess.getStatusRefAccess().getTolerancelevelAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatusRef__Group__1__Impl"


    // $ANTLR start "rule__RangeRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7705:1: rule__RangeRef__Group__0 : rule__RangeRef__Group__0__Impl rule__RangeRef__Group__1 ;
    public final void rule__RangeRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7709:1: ( rule__RangeRef__Group__0__Impl rule__RangeRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7710:2: rule__RangeRef__Group__0__Impl rule__RangeRef__Group__1
            {
            pushFollow(FOLLOW_rule__RangeRef__Group__0__Impl_in_rule__RangeRef__Group__015637);
            rule__RangeRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__RangeRef__Group__1_in_rule__RangeRef__Group__015640);
            rule__RangeRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__Group__0"


    // $ANTLR start "rule__RangeRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7717:1: rule__RangeRef__Group__0__Impl : ( ( rule__RangeRef__ValuerangeAssignment_0 ) ) ;
    public final void rule__RangeRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7721:1: ( ( ( rule__RangeRef__ValuerangeAssignment_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7722:1: ( ( rule__RangeRef__ValuerangeAssignment_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7722:1: ( ( rule__RangeRef__ValuerangeAssignment_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7723:1: ( rule__RangeRef__ValuerangeAssignment_0 )
            {
             before(grammarAccess.getRangeRefAccess().getValuerangeAssignment_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7724:1: ( rule__RangeRef__ValuerangeAssignment_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7724:2: rule__RangeRef__ValuerangeAssignment_0
            {
            pushFollow(FOLLOW_rule__RangeRef__ValuerangeAssignment_0_in_rule__RangeRef__Group__0__Impl15667);
            rule__RangeRef__ValuerangeAssignment_0();

            state._fsp--;


            }

             after(grammarAccess.getRangeRefAccess().getValuerangeAssignment_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__Group__0__Impl"


    // $ANTLR start "rule__RangeRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7734:1: rule__RangeRef__Group__1 : rule__RangeRef__Group__1__Impl rule__RangeRef__Group__2 ;
    public final void rule__RangeRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7738:1: ( rule__RangeRef__Group__1__Impl rule__RangeRef__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7739:2: rule__RangeRef__Group__1__Impl rule__RangeRef__Group__2
            {
            pushFollow(FOLLOW_rule__RangeRef__Group__1__Impl_in_rule__RangeRef__Group__115697);
            rule__RangeRef__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__RangeRef__Group__2_in_rule__RangeRef__Group__115700);
            rule__RangeRef__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__Group__1"


    // $ANTLR start "rule__RangeRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7746:1: rule__RangeRef__Group__1__Impl : ( ( rule__RangeRef__KindAssignment_1 )? ) ;
    public final void rule__RangeRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7750:1: ( ( ( rule__RangeRef__KindAssignment_1 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7751:1: ( ( rule__RangeRef__KindAssignment_1 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7751:1: ( ( rule__RangeRef__KindAssignment_1 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7752:1: ( rule__RangeRef__KindAssignment_1 )?
            {
             before(grammarAccess.getRangeRefAccess().getKindAssignment_1()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7753:1: ( rule__RangeRef__KindAssignment_1 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( ((LA50_0>=42 && LA50_0<=43)) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7753:2: rule__RangeRef__KindAssignment_1
                    {
                    pushFollow(FOLLOW_rule__RangeRef__KindAssignment_1_in_rule__RangeRef__Group__1__Impl15727);
                    rule__RangeRef__KindAssignment_1();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getRangeRefAccess().getKindAssignment_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__Group__1__Impl"


    // $ANTLR start "rule__RangeRef__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7763:1: rule__RangeRef__Group__2 : rule__RangeRef__Group__2__Impl ;
    public final void rule__RangeRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7767:1: ( rule__RangeRef__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7768:2: rule__RangeRef__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__RangeRef__Group__2__Impl_in_rule__RangeRef__Group__215758);
            rule__RangeRef__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__Group__2"


    // $ANTLR start "rule__RangeRef__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7774:1: rule__RangeRef__Group__2__Impl : ( ( rule__RangeRef__IntervalAssignment_2 )? ) ;
    public final void rule__RangeRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7778:1: ( ( ( rule__RangeRef__IntervalAssignment_2 )? ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7779:1: ( ( rule__RangeRef__IntervalAssignment_2 )? )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7779:1: ( ( rule__RangeRef__IntervalAssignment_2 )? )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7780:1: ( rule__RangeRef__IntervalAssignment_2 )?
            {
             before(grammarAccess.getRangeRefAccess().getIntervalAssignment_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7781:1: ( rule__RangeRef__IntervalAssignment_2 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==RULE_NUMBER||(LA51_0>=26 && LA51_0<=29)) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7781:2: rule__RangeRef__IntervalAssignment_2
                    {
                    pushFollow(FOLLOW_rule__RangeRef__IntervalAssignment_2_in_rule__RangeRef__Group__2__Impl15785);
                    rule__RangeRef__IntervalAssignment_2();

                    state._fsp--;


                    }
                    break;

            }

             after(grammarAccess.getRangeRefAccess().getIntervalAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__Group__2__Impl"


    // $ANTLR start "rule__LinkRef__Group__0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7797:1: rule__LinkRef__Group__0 : rule__LinkRef__Group__0__Impl rule__LinkRef__Group__1 ;
    public final void rule__LinkRef__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7801:1: ( rule__LinkRef__Group__0__Impl rule__LinkRef__Group__1 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7802:2: rule__LinkRef__Group__0__Impl rule__LinkRef__Group__1
            {
            pushFollow(FOLLOW_rule__LinkRef__Group__0__Impl_in_rule__LinkRef__Group__015822);
            rule__LinkRef__Group__0__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LinkRef__Group__1_in_rule__LinkRef__Group__015825);
            rule__LinkRef__Group__1();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LinkRef__Group__0"


    // $ANTLR start "rule__LinkRef__Group__0__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7809:1: rule__LinkRef__Group__0__Impl : ( () ) ;
    public final void rule__LinkRef__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7813:1: ( ( () ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7814:1: ( () )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7814:1: ( () )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7815:1: ()
            {
             before(grammarAccess.getLinkRefAccess().getLinkRefAction_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7816:1: ()
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7818:1: 
            {
            }

             after(grammarAccess.getLinkRefAccess().getLinkRefAction_0()); 

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LinkRef__Group__0__Impl"


    // $ANTLR start "rule__LinkRef__Group__1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7828:1: rule__LinkRef__Group__1 : rule__LinkRef__Group__1__Impl rule__LinkRef__Group__2 ;
    public final void rule__LinkRef__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7832:1: ( rule__LinkRef__Group__1__Impl rule__LinkRef__Group__2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7833:2: rule__LinkRef__Group__1__Impl rule__LinkRef__Group__2
            {
            pushFollow(FOLLOW_rule__LinkRef__Group__1__Impl_in_rule__LinkRef__Group__115883);
            rule__LinkRef__Group__1__Impl();

            state._fsp--;

            pushFollow(FOLLOW_rule__LinkRef__Group__2_in_rule__LinkRef__Group__115886);
            rule__LinkRef__Group__2();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LinkRef__Group__1"


    // $ANTLR start "rule__LinkRef__Group__1__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7840:1: rule__LinkRef__Group__1__Impl : ( 'LINK' ) ;
    public final void rule__LinkRef__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7844:1: ( ( 'LINK' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7845:1: ( 'LINK' )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7845:1: ( 'LINK' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7846:1: 'LINK'
            {
             before(grammarAccess.getLinkRefAccess().getLINKKeyword_1()); 
            match(input,81,FOLLOW_81_in_rule__LinkRef__Group__1__Impl15914); 
             after(grammarAccess.getLinkRefAccess().getLINKKeyword_1()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LinkRef__Group__1__Impl"


    // $ANTLR start "rule__LinkRef__Group__2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7859:1: rule__LinkRef__Group__2 : rule__LinkRef__Group__2__Impl ;
    public final void rule__LinkRef__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7863:1: ( rule__LinkRef__Group__2__Impl )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7864:2: rule__LinkRef__Group__2__Impl
            {
            pushFollow(FOLLOW_rule__LinkRef__Group__2__Impl_in_rule__LinkRef__Group__215945);
            rule__LinkRef__Group__2__Impl();

            state._fsp--;


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LinkRef__Group__2"


    // $ANTLR start "rule__LinkRef__Group__2__Impl"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7870:1: rule__LinkRef__Group__2__Impl : ( ( rule__LinkRef__LinkAssignment_2 ) ) ;
    public final void rule__LinkRef__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7874:1: ( ( ( rule__LinkRef__LinkAssignment_2 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7875:1: ( ( rule__LinkRef__LinkAssignment_2 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7875:1: ( ( rule__LinkRef__LinkAssignment_2 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7876:1: ( rule__LinkRef__LinkAssignment_2 )
            {
             before(grammarAccess.getLinkRefAccess().getLinkAssignment_2()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7877:1: ( rule__LinkRef__LinkAssignment_2 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7877:2: rule__LinkRef__LinkAssignment_2
            {
            pushFollow(FOLLOW_rule__LinkRef__LinkAssignment_2_in_rule__LinkRef__Group__2__Impl15972);
            rule__LinkRef__LinkAssignment_2();

            state._fsp--;


            }

             after(grammarAccess.getLinkRefAccess().getLinkAssignment_2()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LinkRef__Group__2__Impl"


    // $ANTLR start "rule__Mod__NameAssignment_0_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7894:1: rule__Mod__NameAssignment_0_1 : ( RULE_ID ) ;
    public final void rule__Mod__NameAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7898:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7899:1: ( RULE_ID )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7899:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7900:1: RULE_ID
            {
             before(grammarAccess.getModAccess().getNameIDTerminalRuleCall_0_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Mod__NameAssignment_0_116013); 
             after(grammarAccess.getModAccess().getNameIDTerminalRuleCall_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__NameAssignment_0_1"


    // $ANTLR start "rule__Mod__ImportsAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7909:1: rule__Mod__ImportsAssignment_1 : ( ruleImport ) ;
    public final void rule__Mod__ImportsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7913:1: ( ( ruleImport ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7914:1: ( ruleImport )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7914:1: ( ruleImport )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7915:1: ruleImport
            {
             before(grammarAccess.getModAccess().getImportsImportParserRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleImport_in_rule__Mod__ImportsAssignment_116044);
            ruleImport();

            state._fsp--;

             after(grammarAccess.getModAccess().getImportsImportParserRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__ImportsAssignment_1"


    // $ANTLR start "rule__Mod__FunctionsAssignment_2_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7924:1: rule__Mod__FunctionsAssignment_2_0 : ( ruleFunction ) ;
    public final void rule__Mod__FunctionsAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7928:1: ( ( ruleFunction ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7929:1: ( ruleFunction )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7929:1: ( ruleFunction )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7930:1: ruleFunction
            {
             before(grammarAccess.getModAccess().getFunctionsFunctionParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_ruleFunction_in_rule__Mod__FunctionsAssignment_2_016075);
            ruleFunction();

            state._fsp--;

             after(grammarAccess.getModAccess().getFunctionsFunctionParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__FunctionsAssignment_2_0"


    // $ANTLR start "rule__Mod__StatementsAssignment_2_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7939:1: rule__Mod__StatementsAssignment_2_1 : ( ruleStatement ) ;
    public final void rule__Mod__StatementsAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7943:1: ( ( ruleStatement ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7944:1: ( ruleStatement )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7944:1: ( ruleStatement )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7945:1: ruleStatement
            {
             before(grammarAccess.getModAccess().getStatementsStatementParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_ruleStatement_in_rule__Mod__StatementsAssignment_2_116106);
            ruleStatement();

            state._fsp--;

             after(grammarAccess.getModAccess().getStatementsStatementParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Mod__StatementsAssignment_2_1"


    // $ANTLR start "rule__Import__ImportURIAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7954:1: rule__Import__ImportURIAssignment_1 : ( RULE_STRING ) ;
    public final void rule__Import__ImportURIAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7958:1: ( ( RULE_STRING ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7959:1: ( RULE_STRING )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7959:1: ( RULE_STRING )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7960:1: RULE_STRING
            {
             before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
            match(input,RULE_STRING,FOLLOW_RULE_STRING_in_rule__Import__ImportURIAssignment_116137); 
             after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Import__ImportURIAssignment_1"


    // $ANTLR start "rule__Function__NameAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7969:1: rule__Function__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__Function__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7973:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7974:1: ( RULE_ID )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7974:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7975:1: RULE_ID
            {
             before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Function__NameAssignment_116168); 
             after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__NameAssignment_1"


    // $ANTLR start "rule__Function__ArgsAssignment_3_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7984:1: rule__Function__ArgsAssignment_3_0 : ( ruleArgument ) ;
    public final void rule__Function__ArgsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7988:1: ( ( ruleArgument ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7989:1: ( ruleArgument )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7989:1: ( ruleArgument )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7990:1: ruleArgument
            {
             before(grammarAccess.getFunctionAccess().getArgsArgumentParserRuleCall_3_0_0()); 
            pushFollow(FOLLOW_ruleArgument_in_rule__Function__ArgsAssignment_3_016199);
            ruleArgument();

            state._fsp--;

             after(grammarAccess.getFunctionAccess().getArgsArgumentParserRuleCall_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgsAssignment_3_0"


    // $ANTLR start "rule__Function__ArgsAssignment_3_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:7999:1: rule__Function__ArgsAssignment_3_1_1 : ( ruleArgument ) ;
    public final void rule__Function__ArgsAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8003:1: ( ( ruleArgument ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8004:1: ( ruleArgument )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8004:1: ( ruleArgument )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8005:1: ruleArgument
            {
             before(grammarAccess.getFunctionAccess().getArgsArgumentParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_ruleArgument_in_rule__Function__ArgsAssignment_3_1_116230);
            ruleArgument();

            state._fsp--;

             after(grammarAccess.getFunctionAccess().getArgsArgumentParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__ArgsAssignment_3_1_1"


    // $ANTLR start "rule__Function__BlockAssignment_5"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8014:1: rule__Function__BlockAssignment_5 : ( ruleBlock ) ;
    public final void rule__Function__BlockAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8018:1: ( ( ruleBlock ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8019:1: ( ruleBlock )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8019:1: ( ruleBlock )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8020:1: ruleBlock
            {
             before(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_5_0()); 
            pushFollow(FOLLOW_ruleBlock_in_rule__Function__BlockAssignment_516261);
            ruleBlock();

            state._fsp--;

             after(grammarAccess.getFunctionAccess().getBlockBlockParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Function__BlockAssignment_5"


    // $ANTLR start "rule__Argument__NameAssignment"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8029:1: rule__Argument__NameAssignment : ( RULE_ID ) ;
    public final void rule__Argument__NameAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8033:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8034:1: ( RULE_ID )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8034:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8035:1: RULE_ID
            {
             before(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__Argument__NameAssignment16292); 
             after(grammarAccess.getArgumentAccess().getNameIDTerminalRuleCall_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Argument__NameAssignment"


    // $ANTLR start "rule__Block__StatementsAssignment_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8044:1: rule__Block__StatementsAssignment_2 : ( ruleStatement ) ;
    public final void rule__Block__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8048:1: ( ( ruleStatement ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8049:1: ( ruleStatement )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8049:1: ( ruleStatement )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8050:1: ruleStatement
            {
             before(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleStatement_in_rule__Block__StatementsAssignment_216323);
            ruleStatement();

            state._fsp--;

             after(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Block__StatementsAssignment_2"


    // $ANTLR start "rule__Statement__ExpressionAssignment_0_0_4"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8059:1: rule__Statement__ExpressionAssignment_0_0_4 : ( ruleExpression ) ;
    public final void rule__Statement__ExpressionAssignment_0_0_4() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8063:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8064:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8064:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8065:1: ruleExpression
            {
             before(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_0_0_4_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__Statement__ExpressionAssignment_0_0_416354);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getStatementAccess().getExpressionExpressionParserRuleCall_0_0_4_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__ExpressionAssignment_0_0_4"


    // $ANTLR start "rule__ReturnStatement__ExpressionAssignment_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8074:1: rule__ReturnStatement__ExpressionAssignment_2 : ( ruleExpression ) ;
    public final void rule__ReturnStatement__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8078:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8079:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8079:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8080:1: ruleExpression
            {
             before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__ReturnStatement__ExpressionAssignment_216385);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReturnStatement__ExpressionAssignment_2"


    // $ANTLR start "rule__IfStatement__IfAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8089:1: rule__IfStatement__IfAssignment_3 : ( ruleLogical ) ;
    public final void rule__IfStatement__IfAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8093:1: ( ( ruleLogical ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8094:1: ( ruleLogical )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8094:1: ( ruleLogical )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8095:1: ruleLogical
            {
             before(grammarAccess.getIfStatementAccess().getIfLogicalParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleLogical_in_rule__IfStatement__IfAssignment_316416);
            ruleLogical();

            state._fsp--;

             after(grammarAccess.getIfStatementAccess().getIfLogicalParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__IfAssignment_3"


    // $ANTLR start "rule__IfStatement__ThenAssignment_5"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8104:1: rule__IfStatement__ThenAssignment_5 : ( ruleBlock ) ;
    public final void rule__IfStatement__ThenAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8108:1: ( ( ruleBlock ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8109:1: ( ruleBlock )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8109:1: ( ruleBlock )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8110:1: ruleBlock
            {
             before(grammarAccess.getIfStatementAccess().getThenBlockParserRuleCall_5_0()); 
            pushFollow(FOLLOW_ruleBlock_in_rule__IfStatement__ThenAssignment_516447);
            ruleBlock();

            state._fsp--;

             after(grammarAccess.getIfStatementAccess().getThenBlockParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__ThenAssignment_5"


    // $ANTLR start "rule__IfStatement__ElseAssignment_6_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8119:1: rule__IfStatement__ElseAssignment_6_1 : ( ruleBlock ) ;
    public final void rule__IfStatement__ElseAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8123:1: ( ( ruleBlock ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8124:1: ( ruleBlock )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8124:1: ( ruleBlock )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8125:1: ruleBlock
            {
             before(grammarAccess.getIfStatementAccess().getElseBlockParserRuleCall_6_1_0()); 
            pushFollow(FOLLOW_ruleBlock_in_rule__IfStatement__ElseAssignment_6_116478);
            ruleBlock();

            state._fsp--;

             after(grammarAccess.getIfStatementAccess().getElseBlockParserRuleCall_6_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IfStatement__ElseAssignment_6_1"


    // $ANTLR start "rule__WhileStatement__PredicateAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8134:1: rule__WhileStatement__PredicateAssignment_3 : ( ruleLogical ) ;
    public final void rule__WhileStatement__PredicateAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8138:1: ( ( ruleLogical ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8139:1: ( ruleLogical )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8139:1: ( ruleLogical )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8140:1: ruleLogical
            {
             before(grammarAccess.getWhileStatementAccess().getPredicateLogicalParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleLogical_in_rule__WhileStatement__PredicateAssignment_316509);
            ruleLogical();

            state._fsp--;

             after(grammarAccess.getWhileStatementAccess().getPredicateLogicalParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__PredicateAssignment_3"


    // $ANTLR start "rule__WhileStatement__BodyAssignment_5"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8149:1: rule__WhileStatement__BodyAssignment_5 : ( ruleBlock ) ;
    public final void rule__WhileStatement__BodyAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8153:1: ( ( ruleBlock ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8154:1: ( ruleBlock )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8154:1: ( ruleBlock )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8155:1: ruleBlock
            {
             before(grammarAccess.getWhileStatementAccess().getBodyBlockParserRuleCall_5_0()); 
            pushFollow(FOLLOW_ruleBlock_in_rule__WhileStatement__BodyAssignment_516540);
            ruleBlock();

            state._fsp--;

             after(grammarAccess.getWhileStatementAccess().getBodyBlockParserRuleCall_5_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileStatement__BodyAssignment_5"


    // $ANTLR start "rule__VariableStatement__NameAssignment_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8164:1: rule__VariableStatement__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__VariableStatement__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8168:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8169:1: ( RULE_ID )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8169:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8170:1: RULE_ID
            {
             before(grammarAccess.getVariableStatementAccess().getNameIDTerminalRuleCall_2_0()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__VariableStatement__NameAssignment_216571); 
             after(grammarAccess.getVariableStatementAccess().getNameIDTerminalRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__NameAssignment_2"


    // $ANTLR start "rule__VariableStatement__ExpressionAssignment_3_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8179:1: rule__VariableStatement__ExpressionAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__VariableStatement__ExpressionAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8183:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8184:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8184:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8185:1: ruleExpression
            {
             before(grammarAccess.getVariableStatementAccess().getExpressionExpressionParserRuleCall_3_1_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__VariableStatement__ExpressionAssignment_3_116602);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getVariableStatementAccess().getExpressionExpressionParserRuleCall_3_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableStatement__ExpressionAssignment_3_1"


    // $ANTLR start "rule__AssignmentStatement__VarAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8194:1: rule__AssignmentStatement__VarAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__AssignmentStatement__VarAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8198:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8199:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8199:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8200:1: ( RULE_ID )
            {
             before(grammarAccess.getAssignmentStatementAccess().getVarAbstractVarOrArgumentCrossReference_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8201:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8202:1: RULE_ID
            {
             before(grammarAccess.getAssignmentStatementAccess().getVarAbstractVarOrArgumentIDTerminalRuleCall_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__AssignmentStatement__VarAssignment_116637); 
             after(grammarAccess.getAssignmentStatementAccess().getVarAbstractVarOrArgumentIDTerminalRuleCall_1_0_1()); 

            }

             after(grammarAccess.getAssignmentStatementAccess().getVarAbstractVarOrArgumentCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__VarAssignment_1"


    // $ANTLR start "rule__AssignmentStatement__ExpressionAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8213:1: rule__AssignmentStatement__ExpressionAssignment_3 : ( ruleExpression ) ;
    public final void rule__AssignmentStatement__ExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8217:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8218:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8218:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8219:1: ruleExpression
            {
             before(grammarAccess.getAssignmentStatementAccess().getExpressionExpressionParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__AssignmentStatement__ExpressionAssignment_316672);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getAssignmentStatementAccess().getExpressionExpressionParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AssignmentStatement__ExpressionAssignment_3"


    // $ANTLR start "rule__PlusAssignmentStatement__VarAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8228:1: rule__PlusAssignmentStatement__VarAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__PlusAssignmentStatement__VarAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8232:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8233:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8233:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8234:1: ( RULE_ID )
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getVarAbstractVarOrArgumentCrossReference_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8235:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8236:1: RULE_ID
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getVarAbstractVarOrArgumentIDTerminalRuleCall_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__PlusAssignmentStatement__VarAssignment_116707); 
             after(grammarAccess.getPlusAssignmentStatementAccess().getVarAbstractVarOrArgumentIDTerminalRuleCall_1_0_1()); 

            }

             after(grammarAccess.getPlusAssignmentStatementAccess().getVarAbstractVarOrArgumentCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__VarAssignment_1"


    // $ANTLR start "rule__PlusAssignmentStatement__ExpressionAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8247:1: rule__PlusAssignmentStatement__ExpressionAssignment_3 : ( ruleExpression ) ;
    public final void rule__PlusAssignmentStatement__ExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8251:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8252:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8252:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8253:1: ruleExpression
            {
             before(grammarAccess.getPlusAssignmentStatementAccess().getExpressionExpressionParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__PlusAssignmentStatement__ExpressionAssignment_316742);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getPlusAssignmentStatementAccess().getExpressionExpressionParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusAssignmentStatement__ExpressionAssignment_3"


    // $ANTLR start "rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8262:1: rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1 : ( ( rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0 ) ) ;
    public final void rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8266:1: ( ( ( rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0 ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8267:1: ( ( rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0 ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8267:1: ( ( rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0 ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8268:1: ( rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0 )
            {
             before(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefAlternatives_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8269:1: ( rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0 )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8269:2: rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0
            {
            pushFollow(FOLLOW_rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0_in_rule__ReferenceAssignmentStatement__AssignmentRefAssignment_116773);
            rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0();

            state._fsp--;


            }

             after(grammarAccess.getReferenceAssignmentStatementAccess().getAssignmentRefAlternatives_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1"


    // $ANTLR start "rule__ReferenceAssignmentStatement__ExpressionAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8278:1: rule__ReferenceAssignmentStatement__ExpressionAssignment_3 : ( ruleExpression ) ;
    public final void rule__ReferenceAssignmentStatement__ExpressionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8282:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8283:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8283:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8284:1: ruleExpression
            {
             before(grammarAccess.getReferenceAssignmentStatementAccess().getExpressionExpressionParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__ReferenceAssignmentStatement__ExpressionAssignment_316806);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getReferenceAssignmentStatementAccess().getExpressionExpressionParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ReferenceAssignmentStatement__ExpressionAssignment_3"


    // $ANTLR start "rule__Logical__RightAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8293:1: rule__Logical__RightAssignment_1_1 : ( ruleEquality ) ;
    public final void rule__Logical__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8297:1: ( ( ruleEquality ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8298:1: ( ruleEquality )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8298:1: ( ruleEquality )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8299:1: ruleEquality
            {
             before(grammarAccess.getLogicalAccess().getRightEqualityParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleEquality_in_rule__Logical__RightAssignment_1_116837);
            ruleEquality();

            state._fsp--;

             after(grammarAccess.getLogicalAccess().getRightEqualityParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Logical__RightAssignment_1_1"


    // $ANTLR start "rule__Equality__RightAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8308:1: rule__Equality__RightAssignment_1_1 : ( ruleComparison ) ;
    public final void rule__Equality__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8312:1: ( ( ruleComparison ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8313:1: ( ruleComparison )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8313:1: ( ruleComparison )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8314:1: ruleComparison
            {
             before(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleComparison_in_rule__Equality__RightAssignment_1_116868);
            ruleComparison();

            state._fsp--;

             after(grammarAccess.getEqualityAccess().getRightComparisonParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equality__RightAssignment_1_1"


    // $ANTLR start "rule__Comparison__RightAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8323:1: rule__Comparison__RightAssignment_1_1 : ( ruleAddition ) ;
    public final void rule__Comparison__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8327:1: ( ( ruleAddition ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8328:1: ( ruleAddition )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8328:1: ( ruleAddition )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8329:1: ruleAddition
            {
             before(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleAddition_in_rule__Comparison__RightAssignment_1_116899);
            ruleAddition();

            state._fsp--;

             after(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparison__RightAssignment_1_1"


    // $ANTLR start "rule__Addition__RightAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8338:1: rule__Addition__RightAssignment_1_1 : ( ruleMultiplication ) ;
    public final void rule__Addition__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8342:1: ( ( ruleMultiplication ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8343:1: ( ruleMultiplication )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8343:1: ( ruleMultiplication )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8344:1: ruleMultiplication
            {
             before(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleMultiplication_in_rule__Addition__RightAssignment_1_116930);
            ruleMultiplication();

            state._fsp--;

             after(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__RightAssignment_1_1"


    // $ANTLR start "rule__Multiplication__RightAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8353:1: rule__Multiplication__RightAssignment_1_1 : ( ruleUnary ) ;
    public final void rule__Multiplication__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8357:1: ( ( ruleUnary ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8358:1: ( ruleUnary )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8358:1: ( ruleUnary )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8359:1: ruleUnary
            {
             before(grammarAccess.getMultiplicationAccess().getRightUnaryParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleUnary_in_rule__Multiplication__RightAssignment_1_116961);
            ruleUnary();

            state._fsp--;

             after(grammarAccess.getMultiplicationAccess().getRightUnaryParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__RightAssignment_1_1"


    // $ANTLR start "rule__Unary__OpAssignment_1_0_0_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8368:1: rule__Unary__OpAssignment_1_0_0_1 : ( ( '!' ) ) ;
    public final void rule__Unary__OpAssignment_1_0_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8372:1: ( ( ( '!' ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8373:1: ( ( '!' ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8373:1: ( ( '!' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8374:1: ( '!' )
            {
             before(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_0_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8375:1: ( '!' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8376:1: '!'
            {
             before(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_0_0_1_0()); 
            match(input,82,FOLLOW_82_in_rule__Unary__OpAssignment_1_0_0_116997); 
             after(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_0_0_1_0()); 

            }

             after(grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_0_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__OpAssignment_1_0_0_1"


    // $ANTLR start "rule__Unary__OpAssignment_1_0_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8391:1: rule__Unary__OpAssignment_1_0_1_1 : ( ruleUnaryOperator ) ;
    public final void rule__Unary__OpAssignment_1_0_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8395:1: ( ( ruleUnaryOperator ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8396:1: ( ruleUnaryOperator )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8396:1: ( ruleUnaryOperator )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8397:1: ruleUnaryOperator
            {
             before(grammarAccess.getUnaryAccess().getOpUnaryOperatorParserRuleCall_1_0_1_1_0()); 
            pushFollow(FOLLOW_ruleUnaryOperator_in_rule__Unary__OpAssignment_1_0_1_117036);
            ruleUnaryOperator();

            state._fsp--;

             after(grammarAccess.getUnaryAccess().getOpUnaryOperatorParserRuleCall_1_0_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__OpAssignment_1_0_1_1"


    // $ANTLR start "rule__Unary__RightAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8406:1: rule__Unary__RightAssignment_1_1 : ( ruleUnary ) ;
    public final void rule__Unary__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8410:1: ( ( ruleUnary ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8411:1: ( ruleUnary )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8411:1: ( ruleUnary )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8412:1: ruleUnary
            {
             before(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleUnary_in_rule__Unary__RightAssignment_1_117067);
            ruleUnary();

            state._fsp--;

             after(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Unary__RightAssignment_1_1"


    // $ANTLR start "rule__Literal__ConditionAssignment_1_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8421:1: rule__Literal__ConditionAssignment_1_1_0 : ( ( 'true' ) ) ;
    public final void rule__Literal__ConditionAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8425:1: ( ( ( 'true' ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8426:1: ( ( 'true' ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8426:1: ( ( 'true' ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8427:1: ( 'true' )
            {
             before(grammarAccess.getLiteralAccess().getConditionTrueKeyword_1_1_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8428:1: ( 'true' )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8429:1: 'true'
            {
             before(grammarAccess.getLiteralAccess().getConditionTrueKeyword_1_1_0_0()); 
            match(input,83,FOLLOW_83_in_rule__Literal__ConditionAssignment_1_1_017103); 
             after(grammarAccess.getLiteralAccess().getConditionTrueKeyword_1_1_0_0()); 

            }

             after(grammarAccess.getLiteralAccess().getConditionTrueKeyword_1_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Literal__ConditionAssignment_1_1_0"


    // $ANTLR start "rule__NumberLiteral__ValueAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8444:1: rule__NumberLiteral__ValueAssignment_1 : ( RULE_NUMBER ) ;
    public final void rule__NumberLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8448:1: ( ( RULE_NUMBER ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8449:1: ( RULE_NUMBER )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8449:1: ( RULE_NUMBER )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8450:1: RULE_NUMBER
            {
             before(grammarAccess.getNumberLiteralAccess().getValueNUMBERTerminalRuleCall_1_0()); 
            match(input,RULE_NUMBER,FOLLOW_RULE_NUMBER_in_rule__NumberLiteral__ValueAssignment_117142); 
             after(grammarAccess.getNumberLiteralAccess().getValueNUMBERTerminalRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NumberLiteral__ValueAssignment_1"


    // $ANTLR start "rule__FunctionCall__FuncAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8459:1: rule__FunctionCall__FuncAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__FunctionCall__FuncAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8463:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8464:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8464:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8465:1: ( RULE_ID )
            {
             before(grammarAccess.getFunctionCallAccess().getFuncAbstractFunctionCrossReference_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8466:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8467:1: RULE_ID
            {
             before(grammarAccess.getFunctionCallAccess().getFuncAbstractFunctionIDTerminalRuleCall_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__FunctionCall__FuncAssignment_117177); 
             after(grammarAccess.getFunctionCallAccess().getFuncAbstractFunctionIDTerminalRuleCall_1_0_1()); 

            }

             after(grammarAccess.getFunctionCallAccess().getFuncAbstractFunctionCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__FuncAssignment_1"


    // $ANTLR start "rule__FunctionCall__ArgsAssignment_3_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8478:1: rule__FunctionCall__ArgsAssignment_3_0 : ( ruleExpression ) ;
    public final void rule__FunctionCall__ArgsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8482:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8483:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8483:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8484:1: ruleExpression
            {
             before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_0_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__FunctionCall__ArgsAssignment_3_017212);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__ArgsAssignment_3_0"


    // $ANTLR start "rule__FunctionCall__ArgsAssignment_3_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8493:1: rule__FunctionCall__ArgsAssignment_3_1_1 : ( ruleExpression ) ;
    public final void rule__FunctionCall__ArgsAssignment_3_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8497:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8498:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8498:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8499:1: ruleExpression
            {
             before(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_1_1_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__FunctionCall__ArgsAssignment_3_1_117243);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getFunctionCallAccess().getArgsExpressionParserRuleCall_3_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionCall__ArgsAssignment_3_1_1"


    // $ANTLR start "rule__IndexedCall__IndexAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8508:1: rule__IndexedCall__IndexAssignment_1_1 : ( ruleExpression ) ;
    public final void rule__IndexedCall__IndexAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8512:1: ( ( ruleExpression ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8513:1: ( ruleExpression )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8513:1: ( ruleExpression )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8514:1: ruleExpression
            {
             before(grammarAccess.getIndexedCallAccess().getIndexExpressionParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleExpression_in_rule__IndexedCall__IndexAssignment_1_117274);
            ruleExpression();

            state._fsp--;

             after(grammarAccess.getIndexedCallAccess().getIndexExpressionParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IndexedCall__IndexAssignment_1_1"


    // $ANTLR start "rule__NativeExpression__RangeAssignment_1_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8523:1: rule__NativeExpression__RangeAssignment_1_0 : ( ruleRangeLiteral ) ;
    public final void rule__NativeExpression__RangeAssignment_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8527:1: ( ( ruleRangeLiteral ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8528:1: ( ruleRangeLiteral )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8528:1: ( ruleRangeLiteral )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8529:1: ruleRangeLiteral
            {
             before(grammarAccess.getNativeExpressionAccess().getRangeRangeLiteralParserRuleCall_1_0_0()); 
            pushFollow(FOLLOW_ruleRangeLiteral_in_rule__NativeExpression__RangeAssignment_1_017305);
            ruleRangeLiteral();

            state._fsp--;

             after(grammarAccess.getNativeExpressionAccess().getRangeRangeLiteralParserRuleCall_1_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__RangeAssignment_1_0"


    // $ANTLR start "rule__NativeExpression__RefAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8538:1: rule__NativeExpression__RefAssignment_1_1 : ( ruleReference ) ;
    public final void rule__NativeExpression__RefAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8542:1: ( ( ruleReference ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8543:1: ( ruleReference )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8543:1: ( ruleReference )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8544:1: ruleReference
            {
             before(grammarAccess.getNativeExpressionAccess().getRefReferenceParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleReference_in_rule__NativeExpression__RefAssignment_1_117336);
            ruleReference();

            state._fsp--;

             after(grammarAccess.getNativeExpressionAccess().getRefReferenceParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__RefAssignment_1_1"


    // $ANTLR start "rule__NativeExpression__VarAssignment_1_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8553:1: rule__NativeExpression__VarAssignment_1_2 : ( ruleVarOrArgumentCall ) ;
    public final void rule__NativeExpression__VarAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8557:1: ( ( ruleVarOrArgumentCall ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8558:1: ( ruleVarOrArgumentCall )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8558:1: ( ruleVarOrArgumentCall )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8559:1: ruleVarOrArgumentCall
            {
             before(grammarAccess.getNativeExpressionAccess().getVarVarOrArgumentCallParserRuleCall_1_2_0()); 
            pushFollow(FOLLOW_ruleVarOrArgumentCall_in_rule__NativeExpression__VarAssignment_1_217367);
            ruleVarOrArgumentCall();

            state._fsp--;

             after(grammarAccess.getNativeExpressionAccess().getVarVarOrArgumentCallParserRuleCall_1_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__VarAssignment_1_2"


    // $ANTLR start "rule__NativeExpression__NativeFunctionAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8568:1: rule__NativeExpression__NativeFunctionAssignment_3 : ( ruleNativeFunction ) ;
    public final void rule__NativeExpression__NativeFunctionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8572:1: ( ( ruleNativeFunction ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8573:1: ( ruleNativeFunction )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8573:1: ( ruleNativeFunction )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8574:1: ruleNativeFunction
            {
             before(grammarAccess.getNativeExpressionAccess().getNativeFunctionNativeFunctionEnumRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleNativeFunction_in_rule__NativeExpression__NativeFunctionAssignment_317398);
            ruleNativeFunction();

            state._fsp--;

             after(grammarAccess.getNativeExpressionAccess().getNativeFunctionNativeFunctionEnumRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NativeExpression__NativeFunctionAssignment_3"


    // $ANTLR start "rule__VarOrArgumentCall__CallAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8583:1: rule__VarOrArgumentCall__CallAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarOrArgumentCall__CallAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8587:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8588:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8588:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8589:1: ( RULE_ID )
            {
             before(grammarAccess.getVarOrArgumentCallAccess().getCallAbstractVarOrArgumentCrossReference_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8590:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8591:1: RULE_ID
            {
             before(grammarAccess.getVarOrArgumentCallAccess().getCallAbstractVarOrArgumentIDTerminalRuleCall_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__VarOrArgumentCall__CallAssignment_117433); 
             after(grammarAccess.getVarOrArgumentCallAccess().getCallAbstractVarOrArgumentIDTerminalRuleCall_1_0_1()); 

            }

             after(grammarAccess.getVarOrArgumentCallAccess().getCallAbstractVarOrArgumentCrossReference_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOrArgumentCall__CallAssignment_1"


    // $ANTLR start "rule__RangeLiteral__ValuesAssignment_2_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8602:1: rule__RangeLiteral__ValuesAssignment_2_0 : ( RULE_NUMBER ) ;
    public final void rule__RangeLiteral__ValuesAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8606:1: ( ( RULE_NUMBER ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8607:1: ( RULE_NUMBER )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8607:1: ( RULE_NUMBER )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8608:1: RULE_NUMBER
            {
             before(grammarAccess.getRangeLiteralAccess().getValuesNUMBERTerminalRuleCall_2_0_0()); 
            match(input,RULE_NUMBER,FOLLOW_RULE_NUMBER_in_rule__RangeLiteral__ValuesAssignment_2_017468); 
             after(grammarAccess.getRangeLiteralAccess().getValuesNUMBERTerminalRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__ValuesAssignment_2_0"


    // $ANTLR start "rule__RangeLiteral__ValuesAssignment_2_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8617:1: rule__RangeLiteral__ValuesAssignment_2_1_1 : ( RULE_NUMBER ) ;
    public final void rule__RangeLiteral__ValuesAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8621:1: ( ( RULE_NUMBER ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8622:1: ( RULE_NUMBER )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8622:1: ( RULE_NUMBER )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8623:1: RULE_NUMBER
            {
             before(grammarAccess.getRangeLiteralAccess().getValuesNUMBERTerminalRuleCall_2_1_1_0()); 
            match(input,RULE_NUMBER,FOLLOW_RULE_NUMBER_in_rule__RangeLiteral__ValuesAssignment_2_1_117499); 
             after(grammarAccess.getRangeLiteralAccess().getValuesNUMBERTerminalRuleCall_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeLiteral__ValuesAssignment_2_1_1"


    // $ANTLR start "rule__ParamRef__ParamAssignment_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8632:1: rule__ParamRef__ParamAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__ParamRef__ParamAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8636:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8637:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8637:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8638:1: ( RULE_ID )
            {
             before(grammarAccess.getParamRefAccess().getParamParameterCrossReference_2_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8639:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8640:1: RULE_ID
            {
             before(grammarAccess.getParamRefAccess().getParamParameterIDTerminalRuleCall_2_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ParamRef__ParamAssignment_217534); 
             after(grammarAccess.getParamRefAccess().getParamParameterIDTerminalRuleCall_2_0_1()); 

            }

             after(grammarAccess.getParamRefAccess().getParamParameterCrossReference_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ParamRef__ParamAssignment_2"


    // $ANTLR start "rule__NodeTypeRef__NodetypeAssignment_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8651:1: rule__NodeTypeRef__NodetypeAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__NodeTypeRef__NodetypeAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8655:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8656:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8656:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8657:1: ( RULE_ID )
            {
             before(grammarAccess.getNodeTypeRefAccess().getNodetypeNodeTypeCrossReference_2_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8658:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8659:1: RULE_ID
            {
             before(grammarAccess.getNodeTypeRefAccess().getNodetypeNodeTypeIDTerminalRuleCall_2_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__NodeTypeRef__NodetypeAssignment_217573); 
             after(grammarAccess.getNodeTypeRefAccess().getNodetypeNodeTypeIDTerminalRuleCall_2_0_1()); 

            }

             after(grammarAccess.getNodeTypeRefAccess().getNodetypeNodeTypeCrossReference_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__NodetypeAssignment_2"


    // $ANTLR start "rule__NodeTypeRef__PrimaryRefAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8670:1: rule__NodeTypeRef__PrimaryRefAssignment_3 : ( rulePrimaryRef ) ;
    public final void rule__NodeTypeRef__PrimaryRefAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8674:1: ( ( rulePrimaryRef ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8675:1: ( rulePrimaryRef )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8675:1: ( rulePrimaryRef )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8676:1: rulePrimaryRef
            {
             before(grammarAccess.getNodeTypeRefAccess().getPrimaryRefPrimaryRefParserRuleCall_3_0()); 
            pushFollow(FOLLOW_rulePrimaryRef_in_rule__NodeTypeRef__PrimaryRefAssignment_317608);
            rulePrimaryRef();

            state._fsp--;

             after(grammarAccess.getNodeTypeRefAccess().getPrimaryRefPrimaryRefParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NodeTypeRef__PrimaryRefAssignment_3"


    // $ANTLR start "rule__ContextRef__PrimaryRefAssignment_2_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8685:1: rule__ContextRef__PrimaryRefAssignment_2_0 : ( rulePrimaryRef ) ;
    public final void rule__ContextRef__PrimaryRefAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8689:1: ( ( rulePrimaryRef ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8690:1: ( rulePrimaryRef )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8690:1: ( rulePrimaryRef )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8691:1: rulePrimaryRef
            {
             before(grammarAccess.getContextRefAccess().getPrimaryRefPrimaryRefParserRuleCall_2_0_0()); 
            pushFollow(FOLLOW_rulePrimaryRef_in_rule__ContextRef__PrimaryRefAssignment_2_017639);
            rulePrimaryRef();

            state._fsp--;

             after(grammarAccess.getContextRefAccess().getPrimaryRefPrimaryRefParserRuleCall_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__PrimaryRefAssignment_2_0"


    // $ANTLR start "rule__ContextRef__RangeRefAssignment_2_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8700:1: rule__ContextRef__RangeRefAssignment_2_1 : ( ruleRangeRef ) ;
    public final void rule__ContextRef__RangeRefAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8704:1: ( ( ruleRangeRef ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8705:1: ( ruleRangeRef )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8705:1: ( ruleRangeRef )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8706:1: ruleRangeRef
            {
             before(grammarAccess.getContextRefAccess().getRangeRefRangeRefParserRuleCall_2_1_0()); 
            pushFollow(FOLLOW_ruleRangeRef_in_rule__ContextRef__RangeRefAssignment_2_117670);
            ruleRangeRef();

            state._fsp--;

             after(grammarAccess.getContextRefAccess().getRangeRefRangeRefParserRuleCall_2_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ContextRef__RangeRefAssignment_2_1"


    // $ANTLR start "rule__PrimaryRef__ComponentsAssignment_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8715:1: rule__PrimaryRef__ComponentsAssignment_0 : ( ruleComponentRef ) ;
    public final void rule__PrimaryRef__ComponentsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8719:1: ( ( ruleComponentRef ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8720:1: ( ruleComponentRef )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8720:1: ( ruleComponentRef )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8721:1: ruleComponentRef
            {
             before(grammarAccess.getPrimaryRefAccess().getComponentsComponentRefParserRuleCall_0_0()); 
            pushFollow(FOLLOW_ruleComponentRef_in_rule__PrimaryRef__ComponentsAssignment_017701);
            ruleComponentRef();

            state._fsp--;

             after(grammarAccess.getPrimaryRefAccess().getComponentsComponentRefParserRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__ComponentsAssignment_0"


    // $ANTLR start "rule__PrimaryRef__LeafRefAssignment_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8730:1: rule__PrimaryRef__LeafRefAssignment_1_1 : ( ruleLeafReference ) ;
    public final void rule__PrimaryRef__LeafRefAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8734:1: ( ( ruleLeafReference ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8735:1: ( ruleLeafReference )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8735:1: ( ruleLeafReference )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8736:1: ruleLeafReference
            {
             before(grammarAccess.getPrimaryRefAccess().getLeafRefLeafReferenceParserRuleCall_1_1_0()); 
            pushFollow(FOLLOW_ruleLeafReference_in_rule__PrimaryRef__LeafRefAssignment_1_117732);
            ruleLeafReference();

            state._fsp--;

             after(grammarAccess.getPrimaryRefAccess().getLeafRefLeafReferenceParserRuleCall_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PrimaryRef__LeafRefAssignment_1_1"


    // $ANTLR start "rule__ComponentRef__FunctionAssignment_2_0_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8745:1: rule__ComponentRef__FunctionAssignment_2_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__ComponentRef__FunctionAssignment_2_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8749:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8750:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8750:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8751:1: ( RULE_ID )
            {
             before(grammarAccess.getComponentRefAccess().getFunctionFunctionCrossReference_2_0_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8752:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8753:1: RULE_ID
            {
             before(grammarAccess.getComponentRefAccess().getFunctionFunctionIDTerminalRuleCall_2_0_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ComponentRef__FunctionAssignment_2_0_117767); 
             after(grammarAccess.getComponentRefAccess().getFunctionFunctionIDTerminalRuleCall_2_0_1_0_1()); 

            }

             after(grammarAccess.getComponentRefAccess().getFunctionFunctionCrossReference_2_0_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__FunctionAssignment_2_0_1"


    // $ANTLR start "rule__ComponentRef__EquipmentAssignment_2_1_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8764:1: rule__ComponentRef__EquipmentAssignment_2_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__ComponentRef__EquipmentAssignment_2_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8768:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8769:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8769:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8770:1: ( RULE_ID )
            {
             before(grammarAccess.getComponentRefAccess().getEquipmentEquipmentCrossReference_2_1_1_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8771:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8772:1: RULE_ID
            {
             before(grammarAccess.getComponentRefAccess().getEquipmentEquipmentIDTerminalRuleCall_2_1_1_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ComponentRef__EquipmentAssignment_2_1_117806); 
             after(grammarAccess.getComponentRefAccess().getEquipmentEquipmentIDTerminalRuleCall_2_1_1_0_1()); 

            }

             after(grammarAccess.getComponentRefAccess().getEquipmentEquipmentCrossReference_2_1_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ComponentRef__EquipmentAssignment_2_1_1"


    // $ANTLR start "rule__ResourceRef__ResourceAssignment_2_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8783:1: rule__ResourceRef__ResourceAssignment_2_0 : ( ( RULE_ID ) ) ;
    public final void rule__ResourceRef__ResourceAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8787:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8788:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8788:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8789:1: ( RULE_ID )
            {
             before(grammarAccess.getResourceRefAccess().getResourceBaseResourceCrossReference_2_0_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8790:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8791:1: RULE_ID
            {
             before(grammarAccess.getResourceRefAccess().getResourceBaseResourceIDTerminalRuleCall_2_0_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__ResourceRef__ResourceAssignment_2_017845); 
             after(grammarAccess.getResourceRefAccess().getResourceBaseResourceIDTerminalRuleCall_2_0_0_1()); 

            }

             after(grammarAccess.getResourceRefAccess().getResourceBaseResourceCrossReference_2_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__ResourceAssignment_2_0"


    // $ANTLR start "rule__ResourceRef__RangeRefAssignment_3"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8802:1: rule__ResourceRef__RangeRefAssignment_3 : ( ruleRangeRef ) ;
    public final void rule__ResourceRef__RangeRefAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8806:1: ( ( ruleRangeRef ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8807:1: ( ruleRangeRef )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8807:1: ( ruleRangeRef )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8808:1: ruleRangeRef
            {
             before(grammarAccess.getResourceRefAccess().getRangeRefRangeRefParserRuleCall_3_0()); 
            pushFollow(FOLLOW_ruleRangeRef_in_rule__ResourceRef__RangeRefAssignment_317880);
            ruleRangeRef();

            state._fsp--;

             after(grammarAccess.getResourceRefAccess().getRangeRefRangeRefParserRuleCall_3_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ResourceRef__RangeRefAssignment_3"


    // $ANTLR start "rule__StatusRef__TolerancelevelAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8817:1: rule__StatusRef__TolerancelevelAssignment_1 : ( ruleToleranceLevel ) ;
    public final void rule__StatusRef__TolerancelevelAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8821:1: ( ( ruleToleranceLevel ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8822:1: ( ruleToleranceLevel )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8822:1: ( ruleToleranceLevel )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8823:1: ruleToleranceLevel
            {
             before(grammarAccess.getStatusRefAccess().getTolerancelevelToleranceLevelEnumRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleToleranceLevel_in_rule__StatusRef__TolerancelevelAssignment_117911);
            ruleToleranceLevel();

            state._fsp--;

             after(grammarAccess.getStatusRefAccess().getTolerancelevelToleranceLevelEnumRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__StatusRef__TolerancelevelAssignment_1"


    // $ANTLR start "rule__RangeRef__ValuerangeAssignment_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8832:1: rule__RangeRef__ValuerangeAssignment_0 : ( ruleValueRange ) ;
    public final void rule__RangeRef__ValuerangeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8836:1: ( ( ruleValueRange ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8837:1: ( ruleValueRange )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8837:1: ( ruleValueRange )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8838:1: ruleValueRange
            {
             before(grammarAccess.getRangeRefAccess().getValuerangeValueRangeEnumRuleCall_0_0()); 
            pushFollow(FOLLOW_ruleValueRange_in_rule__RangeRef__ValuerangeAssignment_017942);
            ruleValueRange();

            state._fsp--;

             after(grammarAccess.getRangeRefAccess().getValuerangeValueRangeEnumRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__ValuerangeAssignment_0"


    // $ANTLR start "rule__RangeRef__KindAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8847:1: rule__RangeRef__KindAssignment_1 : ( ruleValueKind ) ;
    public final void rule__RangeRef__KindAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8851:1: ( ( ruleValueKind ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8852:1: ( ruleValueKind )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8852:1: ( ruleValueKind )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8853:1: ruleValueKind
            {
             before(grammarAccess.getRangeRefAccess().getKindValueKindEnumRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleValueKind_in_rule__RangeRef__KindAssignment_117973);
            ruleValueKind();

            state._fsp--;

             after(grammarAccess.getRangeRefAccess().getKindValueKindEnumRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__KindAssignment_1"


    // $ANTLR start "rule__RangeRef__IntervalAssignment_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8862:1: rule__RangeRef__IntervalAssignment_2 : ( ruleInterval ) ;
    public final void rule__RangeRef__IntervalAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8866:1: ( ( ruleInterval ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8867:1: ( ruleInterval )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8867:1: ( ruleInterval )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8868:1: ruleInterval
            {
             before(grammarAccess.getRangeRefAccess().getIntervalIntervalParserRuleCall_2_0()); 
            pushFollow(FOLLOW_ruleInterval_in_rule__RangeRef__IntervalAssignment_218004);
            ruleInterval();

            state._fsp--;

             after(grammarAccess.getRangeRefAccess().getIntervalIntervalParserRuleCall_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeRef__IntervalAssignment_2"


    // $ANTLR start "rule__Interval__IntervalAssignment_0"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8877:1: rule__Interval__IntervalAssignment_0 : ( RULE_NUMBER ) ;
    public final void rule__Interval__IntervalAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8881:1: ( ( RULE_NUMBER ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8882:1: ( RULE_NUMBER )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8882:1: ( RULE_NUMBER )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8883:1: RULE_NUMBER
            {
             before(grammarAccess.getIntervalAccess().getIntervalNUMBERTerminalRuleCall_0_0()); 
            match(input,RULE_NUMBER,FOLLOW_RULE_NUMBER_in_rule__Interval__IntervalAssignment_018035); 
             after(grammarAccess.getIntervalAccess().getIntervalNUMBERTerminalRuleCall_0_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Interval__IntervalAssignment_0"


    // $ANTLR start "rule__Interval__KindAssignment_1"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8892:1: rule__Interval__KindAssignment_1 : ( ruleIntervalKind ) ;
    public final void rule__Interval__KindAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8896:1: ( ( ruleIntervalKind ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8897:1: ( ruleIntervalKind )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8897:1: ( ruleIntervalKind )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8898:1: ruleIntervalKind
            {
             before(grammarAccess.getIntervalAccess().getKindIntervalKindEnumRuleCall_1_0()); 
            pushFollow(FOLLOW_ruleIntervalKind_in_rule__Interval__KindAssignment_118066);
            ruleIntervalKind();

            state._fsp--;

             after(grammarAccess.getIntervalAccess().getKindIntervalKindEnumRuleCall_1_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Interval__KindAssignment_1"


    // $ANTLR start "rule__LinkRef__LinkAssignment_2"
    // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8907:1: rule__LinkRef__LinkAssignment_2 : ( ( RULE_ID ) ) ;
    public final void rule__LinkRef__LinkAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
            
        try {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8911:1: ( ( ( RULE_ID ) ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8912:1: ( ( RULE_ID ) )
            {
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8912:1: ( ( RULE_ID ) )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8913:1: ( RULE_ID )
            {
             before(grammarAccess.getLinkRefAccess().getLinkRelationshipCrossReference_2_0()); 
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8914:1: ( RULE_ID )
            // ../com.netxforge.netxscript.ui/src-gen/com/netxforge/ui/contentassist/antlr/internal/InternalNetxscript.g:8915:1: RULE_ID
            {
             before(grammarAccess.getLinkRefAccess().getLinkRelationshipIDTerminalRuleCall_2_0_1()); 
            match(input,RULE_ID,FOLLOW_RULE_ID_in_rule__LinkRef__LinkAssignment_218101); 
             after(grammarAccess.getLinkRefAccess().getLinkRelationshipIDTerminalRuleCall_2_0_1()); 

            }

             after(grammarAccess.getLinkRefAccess().getLinkRelationshipCrossReference_2_0()); 

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LinkRef__LinkAssignment_2"

    // Delegated rules


    protected DFA5 dfa5 = new DFA5(this);
    protected DFA15 dfa15 = new DFA15(this);
    static final String DFA5_eotS =
        "\150\uffff";
    static final String DFA5_eofS =
        "\150\uffff";
    static final String DFA5_minS =
        "\1\4\1\uffff\1\14\1\42\1\4\4\uffff\1\17\10\6\1\111\2\4\2\14\2\6"+
        "\5\14\1\uffff\1\17\2\14\1\17\1\36\2\4\2\14\2\4\2\14\2\4\6\14\1\17"+
        "\1\36\2\14\2\42\1\14\2\4\2\14\2\4\4\14\10\6\2\14\2\42\1\14\2\6\5"+
        "\14\12\6\5\14";
    static final String DFA5_maxS =
        "\1\123\1\uffff\2\111\1\4\4\uffff\1\117\11\111\2\4\2\115\7\111\1"+
        "\uffff\1\117\2\115\1\117\1\121\2\4\2\115\2\4\2\115\1\21\1\4\4\111"+
        "\2\115\1\117\1\121\2\115\2\51\1\111\2\4\2\115\1\21\1\4\14\111\2"+
        "\115\2\51\27\111";
    static final String DFA5_acceptS =
        "\1\uffff\1\1\3\uffff\1\5\1\6\1\3\1\2\25\uffff\1\4\111\uffff";
    static final String DFA5_specialS =
        "\150\uffff}>";
    static final String[] DFA5_transitionS = {
            "\1\2\1\uffff\1\5\5\uffff\3\5\40\uffff\1\5\5\uffff\1\6\3\uffff"+
            "\1\1\15\uffff\1\5\2\uffff\1\5\1\4\1\3\5\uffff\2\5",
            "",
            "\2\5\41\uffff\1\5\4\uffff\1\5\5\uffff\1\10\1\7\14\5\1\uffff"+
            "\1\5",
            "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\37\uffff\1\11",
            "\1\22",
            "",
            "",
            "",
            "",
            "\1\25\1\26\75\uffff\1\23\1\24",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\14\uffff\1\27"+
            "\1\30\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\37",
            "\1\40",
            "\1\41",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\26\uffff\1\5"+
            "\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\31\5\uffff\2\5\14\uffff\1\32\1\33\1\34\1\35\26\uffff\1\5"+
            "\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "",
            "\1\46\1\47\75\uffff\1\44\1\45",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\1\52\1\53\1\uffff\10\5\64\uffff\1\50\1\51",
            "\1\56\1\57\1\60\1\61\56\uffff\1\54\1\55",
            "\1\62",
            "\1\63",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\1\66",
            "\1\67",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\1\70\14\uffff\1\71",
            "\1\72",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\1\75\1\76\1\uffff\10\5\64\uffff\1\73\1\74",
            "\1\101\1\102\1\103\1\104\56\uffff\1\77\1\100",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\42\3"+
            "\uffff\1\43",
            "\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114",
            "\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\115",
            "\1\116",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\1\117\14\uffff\1\120",
            "\1\121",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\14\uffff"+
            "\1\122\1\123\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\64\3"+
            "\uffff\1\65",
            "\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140",
            "\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\26\uffff"+
            "\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\124\5\uffff\2\5\14\uffff\1\125\1\126\1\127\1\130\26\uffff"+
            "\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\14\uffff"+
            "\1\141\1\142\10\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff"+
            "\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\26\uffff"+
            "\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\1\143\5\uffff\2\5\14\uffff\1\144\1\145\1\146\1\147\26\uffff"+
            "\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5",
            "\2\5\46\uffff\1\5\5\uffff\1\36\1\uffff\13\5\2\uffff\1\5"
    };

    static final short[] DFA5_eot = DFA.unpackEncodedString(DFA5_eotS);
    static final short[] DFA5_eof = DFA.unpackEncodedString(DFA5_eofS);
    static final char[] DFA5_min = DFA.unpackEncodedStringToUnsignedChars(DFA5_minS);
    static final char[] DFA5_max = DFA.unpackEncodedStringToUnsignedChars(DFA5_maxS);
    static final short[] DFA5_accept = DFA.unpackEncodedString(DFA5_acceptS);
    static final short[] DFA5_special = DFA.unpackEncodedString(DFA5_specialS);
    static final short[][] DFA5_transition;

    static {
        int numStates = DFA5_transitionS.length;
        DFA5_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA5_transition[i] = DFA.unpackEncodedString(DFA5_transitionS[i]);
        }
    }

    class DFA5 extends DFA {

        public DFA5(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 5;
            this.eot = DFA5_eot;
            this.eof = DFA5_eof;
            this.min = DFA5_min;
            this.max = DFA5_max;
            this.accept = DFA5_accept;
            this.special = DFA5_special;
            this.transition = DFA5_transition;
        }
        public String getDescription() {
            return "1435:1: rule__Statement__Alternatives_0_0 : ( ( ruleVariableStatement ) | ( ruleAssignmentStatement ) | ( rulePlusAssignmentStatement ) | ( ruleReferenceAssignmentStatement ) | ( ( rule__Statement__ExpressionAssignment_0_0_4 ) ) | ( ruleReturnStatement ) );";
        }
    }
    static final String DFA15_eotS =
        "\160\uffff";
    static final String DFA15_eofS =
        "\6\uffff\1\27\2\uffff\1\31\1\uffff\10\45\1\uffff\1\45\7\uffff\11"+
        "\45\3\uffff\2\45\4\uffff\2\45\2\uffff\2\45\2\uffff\6\45\2\uffff"+
        "\2\45\2\uffff\1\45\2\uffff\2\45\2\uffff\16\45\2\uffff\27\45";
    static final String DFA15_minS =
        "\1\4\1\uffff\1\6\1\42\2\4\1\14\1\uffff\1\61\1\14\1\17\10\6\1\111"+
        "\1\14\3\uffff\1\6\1\uffff\2\4\2\14\2\6\5\14\1\uffff\1\17\1\61\2"+
        "\14\1\17\1\36\2\4\2\14\2\4\2\14\2\4\6\14\1\17\1\36\2\14\2\42\1\14"+
        "\2\4\2\14\2\4\4\14\10\6\2\14\2\42\1\14\2\6\5\14\12\6\5\14";
    static final String DFA15_maxS =
        "\1\123\1\uffff\1\110\1\111\2\4\1\111\1\uffff\1\110\1\111\1\117\12"+
        "\111\3\uffff\1\6\1\uffff\2\4\2\115\7\111\1\uffff\1\117\1\110\2\115"+
        "\1\117\1\121\2\4\2\115\2\4\2\115\1\21\1\4\4\111\2\115\1\117\1\121"+
        "\2\115\2\51\1\111\2\4\2\115\1\21\1\4\14\111\2\115\2\51\27\111";
    static final String DFA15_acceptS =
        "\1\uffff\1\1\5\uffff\1\7\15\uffff\1\3\1\5\1\6\1\uffff\1\2\13\uffff"+
        "\1\4\112\uffff";
    static final String DFA15_specialS =
        "\160\uffff}>";
    static final String[] DFA15_transitionS = {
            "\1\6\1\uffff\1\1\7\uffff\1\1\40\uffff\1\7\27\uffff\1\2\2\uffff"+
            "\1\5\1\4\1\3\6\uffff\1\1",
            "",
            "\1\10\101\uffff\1\11",
            "\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\37\uffff\1\12",
            "\1\23",
            "\1\24",
            "\2\27\41\uffff\1\26\2\27\2\uffff\1\27\7\uffff\15\27\1\25",
            "",
            "\1\30\26\uffff\1\11",
            "\2\31\42\uffff\2\31\2\uffff\1\31\7\uffff\13\31\1\uffff\1\31"+
            "\1\25",
            "\1\34\1\35\75\uffff\1\32\1\33",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\14\uffff\1"+
            "\36\1\37\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\46",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "",
            "",
            "",
            "\1\47",
            "",
            "\1\50",
            "\1\51",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\22\uffff\2"+
            "\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45\1\25",
            "\1\40\5\uffff\2\45\14\uffff\1\41\1\42\1\43\1\44\22\uffff\2"+
            "\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "",
            "\1\56\1\57\75\uffff\1\54\1\55",
            "\1\30\26\uffff\1\11",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\1\62\1\63\1\uffff\10\25\64\uffff\1\60\1\61",
            "\1\66\1\67\1\70\1\71\56\uffff\1\64\1\65",
            "\1\72",
            "\1\73",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\1\76",
            "\1\77",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\1\100\14\uffff\1\101",
            "\1\102",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\1\105\1\106\1\uffff\10\25\64\uffff\1\103\1\104",
            "\1\111\1\112\1\113\1\114\56\uffff\1\107\1\110",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\52\3\uffff\1\53",
            "\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124",
            "\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\125",
            "\1\126",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\1\127\14\uffff\1\130",
            "\1\131",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\14\uffff"+
            "\1\132\1\133\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\74\3\uffff\1\75",
            "\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150",
            "\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\22\uffff"+
            "\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45\1\25",
            "\1\134\5\uffff\2\45\14\uffff\1\135\1\136\1\137\1\140\22\uffff"+
            "\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\14\uffff"+
            "\1\151\1\152\4\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff"+
            "\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\22\uffff"+
            "\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45\1\25",
            "\1\153\5\uffff\2\45\14\uffff\1\154\1\155\1\156\1\157\22\uffff"+
            "\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25",
            "\2\45\42\uffff\2\45\2\uffff\1\45\7\uffff\13\45\1\uffff\1\45"+
            "\1\25"
    };

    static final short[] DFA15_eot = DFA.unpackEncodedString(DFA15_eotS);
    static final short[] DFA15_eof = DFA.unpackEncodedString(DFA15_eofS);
    static final char[] DFA15_min = DFA.unpackEncodedStringToUnsignedChars(DFA15_minS);
    static final char[] DFA15_max = DFA.unpackEncodedStringToUnsignedChars(DFA15_maxS);
    static final short[] DFA15_accept = DFA.unpackEncodedString(DFA15_acceptS);
    static final short[] DFA15_special = DFA.unpackEncodedString(DFA15_specialS);
    static final short[][] DFA15_transition;

    static {
        int numStates = DFA15_transitionS.length;
        DFA15_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA15_transition[i] = DFA.unpackEncodedString(DFA15_transitionS[i]);
        }
    }

    class DFA15 extends DFA {

        public DFA15(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 15;
            this.eot = DFA15_eot;
            this.eof = DFA15_eof;
            this.min = DFA15_min;
            this.max = DFA15_max;
            this.accept = DFA15_accept;
            this.special = DFA15_special;
            this.transition = DFA15_transition;
        }
        public String getDescription() {
            return "1701:1: rule__PrimaryExpression__Alternatives : ( ( ruleLiteral ) | ( ruleRange ) | ( ruleNativeExpression ) | ( ruleReference ) | ( ruleFunctionCall ) | ( ruleIndexedCall ) | ( ruleParenthesizedExpression ) );";
        }
    }
 

    public static final BitSet FOLLOW_ruleMod_in_entryRuleMod61 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMod68 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__Group__0_in_ruleMod94 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_entryRuleImport121 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleImport128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Import__Group__0_in_ruleImport154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunction_in_entryRuleFunction181 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFunction188 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group__0_in_ruleFunction214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArgument_in_entryRuleArgument241 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleArgument248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Argument__NameAssignment_in_ruleArgument274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBlock_in_entryRuleBlock305 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleBlock312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Block__Group__0_in_ruleBlock338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_entryRuleStatement365 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatement372 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Statement__Alternatives_in_ruleStatement398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_entryRuleReturnStatement425 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReturnStatement432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReturnStatement__Group__0_in_ruleReturnStatement458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_entryRuleIfStatement485 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIfStatement492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__0_in_ruleIfStatement518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_entryRuleWhileStatement545 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleWhileStatement552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__0_in_ruleWhileStatement578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableStatement_in_entryRuleVariableStatement605 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVariableStatement612 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__0_in_ruleVariableStatement638 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentStatement_in_entryRuleAssignmentStatement665 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAssignmentStatement672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__0_in_ruleAssignmentStatement698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePlusAssignmentStatement_in_entryRulePlusAssignmentStatement725 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePlusAssignmentStatement732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__0_in_rulePlusAssignmentStatement758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReferenceAssignmentStatement_in_entryRuleReferenceAssignmentStatement785 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReferenceAssignmentStatement792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__0_in_ruleReferenceAssignmentStatement818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_entryRuleExpression845 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleExpression852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLogical_in_ruleExpression878 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLogical_in_entryRuleLogical904 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLogical911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group__0_in_ruleLogical937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquality_in_entryRuleEquality964 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleEquality971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group__0_in_ruleEquality997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComparison_in_entryRuleComparison1024 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComparison1031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group__0_in_ruleComparison1057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddition_in_entryRuleAddition1084 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleAddition1091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group__0_in_ruleAddition1117 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiplication_in_entryRuleMultiplication1144 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleMultiplication1151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group__0_in_ruleMultiplication1177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnary_in_entryRuleUnary1204 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnary1211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Alternatives_in_ruleUnary1237 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryOperator_in_entryRuleUnaryOperator1264 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleUnaryOperator1271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__UnaryOperator__Alternatives_in_ruleUnaryOperator1297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_entryRulePrimaryExpression1324 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrimaryExpression1331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryExpression__Alternatives_in_rulePrimaryExpression1357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_entryRuleLiteral1384 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLiteral1391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Literal__Alternatives_in_ruleLiteral1417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumberLiteral_in_entryRuleNumberLiteral1444 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNumberLiteral1451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NumberLiteral__Group__0_in_ruleNumberLiteral1477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParenthesizedExpression_in_entryRuleParenthesizedExpression1504 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParenthesizedExpression1511 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParenthesizedExpression__Group__0_in_ruleParenthesizedExpression1537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionCall_in_entryRuleFunctionCall1564 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleFunctionCall1571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__0_in_ruleFunctionCall1597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIndexedCall_in_entryRuleIndexedCall1624 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleIndexedCall1631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group__0_in_ruleIndexedCall1657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNativeExpression_in_entryRuleNativeExpression1684 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNativeExpression1691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__0_in_ruleNativeExpression1717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarOrArgumentCall_in_entryRuleVarOrArgumentCall1744 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleVarOrArgumentCall1751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VarOrArgumentCall__Group__0_in_ruleVarOrArgumentCall1777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRange_in_entryRuleRange1804 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRange1811 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRangeLiteral_in_ruleRange1837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRangeLiteral_in_entryRuleRangeLiteral1863 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRangeLiteral1870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__0_in_ruleRangeLiteral1896 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReference_in_entryRuleReference1923 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleReference1930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Reference__Alternatives_in_ruleReference1956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParamRef_in_entryRuleParamRef1983 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleParamRef1990 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParamRef__Group__0_in_ruleParamRef2016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNodeTypeRef_in_entryRuleNodeTypeRef2043 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleNodeTypeRef2050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__0_in_ruleNodeTypeRef2076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContextRef_in_entryRuleContextRef2103 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleContextRef2110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ContextRef__Group__0_in_ruleContextRef2136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryRef_in_entryRulePrimaryRef2163 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRulePrimaryRef2170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group__0_in_rulePrimaryRef2196 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentRef_in_entryRuleComponentRef2223 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleComponentRef2230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group__0_in_ruleComponentRef2256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLeafReference_in_entryRuleLeafReference2283 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLeafReference2290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LeafReference__Alternatives_in_ruleLeafReference2316 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleResourceRef_in_entryRuleResourceRef2343 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleResourceRef2350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__0_in_ruleResourceRef2376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatusRef_in_entryRuleStatusRef2403 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleStatusRef2410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__StatusRef__Group__0_in_ruleStatusRef2436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRangeRef_in_entryRuleRangeRef2463 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleRangeRef2470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeRef__Group__0_in_ruleRangeRef2496 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterval_in_entryRuleInterval2523 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleInterval2530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Interval__Alternatives_in_ruleInterval2556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLinkRef_in_entryRuleLinkRef2583 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_entryRuleLinkRef2590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LinkRef__Group__0_in_ruleLinkRef2616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeFunction__Alternatives_in_ruleNativeFunction2653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IntervalKind__Alternatives_in_ruleIntervalKind2689 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ToleranceLevel__Alternatives_in_ruleToleranceLevel2725 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ValueRange__Alternatives_in_ruleValueRange2761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ValueKind__Alternatives_in_ruleValueKind2797 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__FunctionsAssignment_2_0_in_rule__Mod__Alternatives_22834 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_rule__Mod__FunctionsAssignment_2_0_in_rule__Mod__Alternatives_22846 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_rule__Mod__StatementsAssignment_2_1_in_rule__Mod__Alternatives_22869 = new BitSet(new long[]{0x0364800000007052L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Mod__StatementsAssignment_2_1_in_rule__Mod__Alternatives_22881 = new BitSet(new long[]{0x0364800000007052L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Statement__Group_0__0_in_rule__Statement__Alternatives2918 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIfStatement_in_rule__Statement__Alternatives2936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleWhileStatement_in_rule__Statement__Alternatives2953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBlock_in_rule__Statement__Alternatives2970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVariableStatement_in_rule__Statement__Alternatives_0_03002 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAssignmentStatement_in_rule__Statement__Alternatives_0_03019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePlusAssignmentStatement_in_rule__Statement__Alternatives_0_03036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReferenceAssignmentStatement_in_rule__Statement__Alternatives_0_03053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Statement__ExpressionAssignment_0_0_4_in_rule__Statement__Alternatives_0_03070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReturnStatement_in_rule__Statement__Alternatives_0_03088 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContextRef_in_rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_03120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNodeTypeRef_in_rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_03137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_0__0_in_rule__Logical__Alternatives_1_03169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_1__0_in_rule__Logical__Alternatives_1_03187 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_0__0_in_rule__Equality__Alternatives_1_03220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_1__0_in_rule__Equality__Alternatives_1_03238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_0__0_in_rule__Comparison__Alternatives_1_03271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_1__0_in_rule__Comparison__Alternatives_1_03289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_2__0_in_rule__Comparison__Alternatives_1_03307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_3__0_in_rule__Comparison__Alternatives_1_03325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_0__0_in_rule__Addition__Alternatives_1_03358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_1__0_in_rule__Addition__Alternatives_1_03376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_0__0_in_rule__Multiplication__Alternatives_1_03409 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_1__0_in_rule__Multiplication__Alternatives_1_03427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_2__0_in_rule__Multiplication__Alternatives_1_03445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryExpression_in_rule__Unary__Alternatives3478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1__0_in_rule__Unary__Alternatives3495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_0__0_in_rule__Unary__Alternatives_1_03528 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_1__0_in_rule__Unary__Alternatives_1_03546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_rule__UnaryOperator__Alternatives3580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_rule__UnaryOperator__Alternatives3600 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLiteral_in_rule__PrimaryExpression__Alternatives3634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRange_in_rule__PrimaryExpression__Alternatives3651 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNativeExpression_in_rule__PrimaryExpression__Alternatives3668 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReference_in_rule__PrimaryExpression__Alternatives3685 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunctionCall_in_rule__PrimaryExpression__Alternatives3702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIndexedCall_in_rule__PrimaryExpression__Alternatives3719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParenthesizedExpression_in_rule__PrimaryExpression__Alternatives3736 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNumberLiteral_in_rule__Literal__Alternatives3768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Literal__Group_1__0_in_rule__Literal__Alternatives3785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Literal__ConditionAssignment_1_1_0_in_rule__Literal__Alternatives_1_13818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_rule__Literal__Alternatives_1_13837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__RangeAssignment_1_0_in_rule__NativeExpression__Alternatives_13871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__RefAssignment_1_1_in_rule__NativeExpression__Alternatives_13889 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__VarAssignment_1_2_in_rule__NativeExpression__Alternatives_13907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleContextRef_in_rule__Reference__Alternatives3940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNodeTypeRef_in_rule__Reference__Alternatives3957 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleParamRef_in_rule__Reference__Alternatives3974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ContextRef__PrimaryRefAssignment_2_0_in_rule__ContextRef__Alternatives_24006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ContextRef__RangeRefAssignment_2_1_in_rule__ContextRef__Alternatives_24024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_0__0_in_rule__ComponentRef__Alternatives_24057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_1__0_in_rule__ComponentRef__Alternatives_24075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_rule__ComponentRef__Alternatives_24094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_16_in_rule__ComponentRef__Alternatives_24114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleResourceRef_in_rule__LeafReference__Alternatives4148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLinkRef_in_rule__LeafReference__Alternatives4165 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatusRef_in_rule__LeafReference__Alternatives4182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__ResourceAssignment_2_0_in_rule__ResourceRef__Alternatives_24214 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_17_in_rule__ResourceRef__Alternatives_24233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Interval__IntervalAssignment_0_in_rule__Interval__Alternatives4267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Interval__KindAssignment_1_in_rule__Interval__Alternatives4285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_18_in_rule__NativeFunction__Alternatives4319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_rule__NativeFunction__Alternatives4340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_20_in_rule__NativeFunction__Alternatives4361 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_rule__NativeFunction__Alternatives4382 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_22_in_rule__NativeFunction__Alternatives4403 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_rule__NativeFunction__Alternatives4424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_24_in_rule__NativeFunction__Alternatives4445 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_25_in_rule__NativeFunction__Alternatives4466 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_26_in_rule__IntervalKind__Alternatives4502 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_27_in_rule__IntervalKind__Alternatives4523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_rule__IntervalKind__Alternatives4544 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_rule__IntervalKind__Alternatives4565 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_rule__ToleranceLevel__Alternatives4601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_rule__ToleranceLevel__Alternatives4622 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_rule__ToleranceLevel__Alternatives4643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_rule__ToleranceLevel__Alternatives4664 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_rule__ValueRange__Alternatives4700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_rule__ValueRange__Alternatives4721 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_rule__ValueRange__Alternatives4742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_rule__ValueRange__Alternatives4763 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_rule__ValueRange__Alternatives4784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_rule__ValueRange__Alternatives4805 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_rule__ValueRange__Alternatives4826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_rule__ValueRange__Alternatives4847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_rule__ValueKind__Alternatives4883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_rule__ValueKind__Alternatives4904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__Group__0__Impl_in_rule__Mod__Group__04937 = new BitSet(new long[]{0x0364E00000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Mod__Group__1_in_rule__Mod__Group__04940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__Group_0__0_in_rule__Mod__Group__0__Impl4967 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__Group__1__Impl_in_rule__Mod__Group__14998 = new BitSet(new long[]{0x0364E00000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Mod__Group__2_in_rule__Mod__Group__15001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__ImportsAssignment_1_in_rule__Mod__Group__1__Impl5028 = new BitSet(new long[]{0x0000200000000002L});
    public static final BitSet FOLLOW_rule__Mod__Group__2__Impl_in_rule__Mod__Group__25059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__Alternatives_2_in_rule__Mod__Group__2__Impl5086 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__Group_0__0__Impl_in_rule__Mod__Group_0__05122 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Mod__Group_0__1_in_rule__Mod__Group_0__05125 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_rule__Mod__Group_0__0__Impl5153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__Group_0__1__Impl_in_rule__Mod__Group_0__15184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Mod__NameAssignment_0_1_in_rule__Mod__Group_0__1__Impl5211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Import__Group__0__Impl_in_rule__Import__Group__05245 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_rule__Import__Group__1_in_rule__Import__Group__05248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_rule__Import__Group__0__Impl5276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Import__Group__1__Impl_in_rule__Import__Group__15307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Import__ImportURIAssignment_1_in_rule__Import__Group__1__Impl5334 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group__0__Impl_in_rule__Function__Group__05368 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Function__Group__1_in_rule__Function__Group__05371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_rule__Function__Group__0__Impl5399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group__1__Impl_in_rule__Function__Group__15430 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_rule__Function__Group__2_in_rule__Function__Group__15433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__NameAssignment_1_in_rule__Function__Group__1__Impl5460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group__2__Impl_in_rule__Function__Group__25490 = new BitSet(new long[]{0x0001000000000010L});
    public static final BitSet FOLLOW_rule__Function__Group__3_in_rule__Function__Group__25493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__Function__Group__2__Impl5521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group__3__Impl_in_rule__Function__Group__35552 = new BitSet(new long[]{0x0001000000000010L});
    public static final BitSet FOLLOW_rule__Function__Group__4_in_rule__Function__Group__35555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group_3__0_in_rule__Function__Group__3__Impl5582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group__4__Impl_in_rule__Function__Group__45613 = new BitSet(new long[]{0x0364800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Function__Group__5_in_rule__Function__Group__45616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__Function__Group__4__Impl5644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group__5__Impl_in_rule__Function__Group__55675 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__BlockAssignment_5_in_rule__Function__Group__5__Impl5702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group_3__0__Impl_in_rule__Function__Group_3__05744 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_rule__Function__Group_3__1_in_rule__Function__Group_3__05747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__ArgsAssignment_3_0_in_rule__Function__Group_3__0__Impl5774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group_3__1__Impl_in_rule__Function__Group_3__15804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group_3_1__0_in_rule__Function__Group_3__1__Impl5831 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group_3_1__0__Impl_in_rule__Function__Group_3_1__05866 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Function__Group_3_1__1_in_rule__Function__Group_3_1__05869 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_rule__Function__Group_3_1__0__Impl5897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__Group_3_1__1__Impl_in_rule__Function__Group_3_1__15928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Function__ArgsAssignment_3_1_1_in_rule__Function__Group_3_1__1__Impl5955 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Block__Group__0__Impl_in_rule__Block__Group__05989 = new BitSet(new long[]{0x0364800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Block__Group__1_in_rule__Block__Group__05992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Block__Group__1__Impl_in_rule__Block__Group__16050 = new BitSet(new long[]{0x036C800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Block__Group__2_in_rule__Block__Group__16053 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_rule__Block__Group__1__Impl6081 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Block__Group__2__Impl_in_rule__Block__Group__26112 = new BitSet(new long[]{0x036C800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Block__Group__3_in_rule__Block__Group__26115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Block__StatementsAssignment_2_in_rule__Block__Group__2__Impl6142 = new BitSet(new long[]{0x0364800000007052L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Block__Group__3__Impl_in_rule__Block__Group__36173 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_rule__Block__Group__3__Impl6201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Statement__Group_0__0__Impl_in_rule__Statement__Group_0__06240 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_rule__Statement__Group_0__1_in_rule__Statement__Group_0__06243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Statement__Alternatives_0_0_in_rule__Statement__Group_0__0__Impl6270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Statement__Group_0__1__Impl_in_rule__Statement__Group_0__16300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_rule__Statement__Group_0__1__Impl6328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReturnStatement__Group__0__Impl_in_rule__ReturnStatement__Group__06363 = new BitSet(new long[]{0x0220800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__ReturnStatement__Group__1_in_rule__ReturnStatement__Group__06366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReturnStatement__Group__1__Impl_in_rule__ReturnStatement__Group__16424 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__ReturnStatement__Group__2_in_rule__ReturnStatement__Group__16427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_rule__ReturnStatement__Group__1__Impl6455 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReturnStatement__Group__2__Impl_in_rule__ReturnStatement__Group__26486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReturnStatement__ExpressionAssignment_2_in_rule__ReturnStatement__Group__2__Impl6513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__0__Impl_in_rule__IfStatement__Group__06550 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__1_in_rule__IfStatement__Group__06553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__1__Impl_in_rule__IfStatement__Group__16611 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__2_in_rule__IfStatement__Group__16614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_rule__IfStatement__Group__1__Impl6642 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__2__Impl_in_rule__IfStatement__Group__26673 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__3_in_rule__IfStatement__Group__26676 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__IfStatement__Group__2__Impl6704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__3__Impl_in_rule__IfStatement__Group__36735 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__4_in_rule__IfStatement__Group__36738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__IfAssignment_3_in_rule__IfStatement__Group__3__Impl6765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__4__Impl_in_rule__IfStatement__Group__46795 = new BitSet(new long[]{0x0364800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__5_in_rule__IfStatement__Group__46798 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__IfStatement__Group__4__Impl6826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__5__Impl_in_rule__IfStatement__Group__56857 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__6_in_rule__IfStatement__Group__56860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__ThenAssignment_5_in_rule__IfStatement__Group__5__Impl6887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group__6__Impl_in_rule__IfStatement__Group__66917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group_6__0_in_rule__IfStatement__Group__6__Impl6944 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group_6__0__Impl_in_rule__IfStatement__Group_6__06989 = new BitSet(new long[]{0x0364800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__IfStatement__Group_6__1_in_rule__IfStatement__Group_6__06992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_rule__IfStatement__Group_6__0__Impl7020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__Group_6__1__Impl_in_rule__IfStatement__Group_6__17051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IfStatement__ElseAssignment_6_1_in_rule__IfStatement__Group_6__1__Impl7078 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__0__Impl_in_rule__WhileStatement__Group__07112 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__1_in_rule__WhileStatement__Group__07115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__1__Impl_in_rule__WhileStatement__Group__17173 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__2_in_rule__WhileStatement__Group__17176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_rule__WhileStatement__Group__1__Impl7204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__2__Impl_in_rule__WhileStatement__Group__27235 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__3_in_rule__WhileStatement__Group__27238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__WhileStatement__Group__2__Impl7266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__3__Impl_in_rule__WhileStatement__Group__37297 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__4_in_rule__WhileStatement__Group__37300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__PredicateAssignment_3_in_rule__WhileStatement__Group__3__Impl7327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__4__Impl_in_rule__WhileStatement__Group__47357 = new BitSet(new long[]{0x0364800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__5_in_rule__WhileStatement__Group__47360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__WhileStatement__Group__4__Impl7388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__Group__5__Impl_in_rule__WhileStatement__Group__57419 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__WhileStatement__BodyAssignment_5_in_rule__WhileStatement__Group__5__Impl7446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__0__Impl_in_rule__VariableStatement__Group__07488 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__1_in_rule__VariableStatement__Group__07491 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__1__Impl_in_rule__VariableStatement__Group__17549 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__2_in_rule__VariableStatement__Group__17552 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_rule__VariableStatement__Group__1__Impl7580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__2__Impl_in_rule__VariableStatement__Group__27611 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__3_in_rule__VariableStatement__Group__27614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__NameAssignment_2_in_rule__VariableStatement__Group__2__Impl7641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group__3__Impl_in_rule__VariableStatement__Group__37671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group_3__0_in_rule__VariableStatement__Group__3__Impl7698 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group_3__0__Impl_in_rule__VariableStatement__Group_3__07737 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group_3__1_in_rule__VariableStatement__Group_3__07740 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_rule__VariableStatement__Group_3__0__Impl7768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__Group_3__1__Impl_in_rule__VariableStatement__Group_3__17799 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VariableStatement__ExpressionAssignment_3_1_in_rule__VariableStatement__Group_3__1__Impl7826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__0__Impl_in_rule__AssignmentStatement__Group__07860 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__1_in_rule__AssignmentStatement__Group__07863 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__1__Impl_in_rule__AssignmentStatement__Group__17921 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__2_in_rule__AssignmentStatement__Group__17924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__VarAssignment_1_in_rule__AssignmentStatement__Group__1__Impl7951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__2__Impl_in_rule__AssignmentStatement__Group__27981 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__3_in_rule__AssignmentStatement__Group__27984 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_rule__AssignmentStatement__Group__2__Impl8012 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__Group__3__Impl_in_rule__AssignmentStatement__Group__38043 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__AssignmentStatement__ExpressionAssignment_3_in_rule__AssignmentStatement__Group__3__Impl8070 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__0__Impl_in_rule__PlusAssignmentStatement__Group__08108 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__1_in_rule__PlusAssignmentStatement__Group__08111 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__1__Impl_in_rule__PlusAssignmentStatement__Group__18169 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__2_in_rule__PlusAssignmentStatement__Group__18172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__VarAssignment_1_in_rule__PlusAssignmentStatement__Group__1__Impl8199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__2__Impl_in_rule__PlusAssignmentStatement__Group__28229 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__3_in_rule__PlusAssignmentStatement__Group__28232 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_rule__PlusAssignmentStatement__Group__2__Impl8260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__Group__3__Impl_in_rule__PlusAssignmentStatement__Group__38291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PlusAssignmentStatement__ExpressionAssignment_3_in_rule__PlusAssignmentStatement__Group__3__Impl8318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__0__Impl_in_rule__ReferenceAssignmentStatement__Group__08356 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__1_in_rule__ReferenceAssignmentStatement__Group__08359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__1__Impl_in_rule__ReferenceAssignmentStatement__Group__18417 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__2_in_rule__ReferenceAssignmentStatement__Group__18420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__AssignmentRefAssignment_1_in_rule__ReferenceAssignmentStatement__Group__1__Impl8447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__2__Impl_in_rule__ReferenceAssignmentStatement__Group__28477 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__3_in_rule__ReferenceAssignmentStatement__Group__28480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_rule__ReferenceAssignmentStatement__Group__2__Impl8508 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__Group__3__Impl_in_rule__ReferenceAssignmentStatement__Group__38539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__ExpressionAssignment_3_in_rule__ReferenceAssignmentStatement__Group__3__Impl8566 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group__0__Impl_in_rule__Logical__Group__08604 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_rule__Logical__Group__1_in_rule__Logical__Group__08607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquality_in_rule__Logical__Group__0__Impl8634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group__1__Impl_in_rule__Logical__Group__18663 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1__0_in_rule__Logical__Group__1__Impl8690 = new BitSet(new long[]{0x3000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1__0__Impl_in_rule__Logical__Group_1__08725 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Logical__Group_1__1_in_rule__Logical__Group_1__08728 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Alternatives_1_0_in_rule__Logical__Group_1__0__Impl8755 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1__1__Impl_in_rule__Logical__Group_1__18785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__RightAssignment_1_1_in_rule__Logical__Group_1__1__Impl8812 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_0__0__Impl_in_rule__Logical__Group_1_0_0__08846 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_0__1_in_rule__Logical__Group_1_0_0__08849 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_0__1__Impl_in_rule__Logical__Group_1_0_0__18907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_rule__Logical__Group_1_0_0__1__Impl8935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_1__0__Impl_in_rule__Logical__Group_1_0_1__08970 = new BitSet(new long[]{0x3000000000000000L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_1__1_in_rule__Logical__Group_1_0_1__08973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Logical__Group_1_0_1__1__Impl_in_rule__Logical__Group_1_0_1__19031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_rule__Logical__Group_1_0_1__1__Impl9059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group__0__Impl_in_rule__Equality__Group__09094 = new BitSet(new long[]{0xC000000000000000L});
    public static final BitSet FOLLOW_rule__Equality__Group__1_in_rule__Equality__Group__09097 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComparison_in_rule__Equality__Group__0__Impl9124 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group__1__Impl_in_rule__Equality__Group__19153 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1__0_in_rule__Equality__Group__1__Impl9180 = new BitSet(new long[]{0xC000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1__0__Impl_in_rule__Equality__Group_1__09215 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Equality__Group_1__1_in_rule__Equality__Group_1__09218 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Alternatives_1_0_in_rule__Equality__Group_1__0__Impl9245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1__1__Impl_in_rule__Equality__Group_1__19275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__RightAssignment_1_1_in_rule__Equality__Group_1__1__Impl9302 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_0__0__Impl_in_rule__Equality__Group_1_0_0__09336 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_0__1_in_rule__Equality__Group_1_0_0__09339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_0__1__Impl_in_rule__Equality__Group_1_0_0__19397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_rule__Equality__Group_1_0_0__1__Impl9425 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_1__0__Impl_in_rule__Equality__Group_1_0_1__09460 = new BitSet(new long[]{0xC000000000000000L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_1__1_in_rule__Equality__Group_1_0_1__09463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Equality__Group_1_0_1__1__Impl_in_rule__Equality__Group_1_0_1__19521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_rule__Equality__Group_1_0_1__1__Impl9549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group__0__Impl_in_rule__Comparison__Group__09584 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_rule__Comparison__Group__1_in_rule__Comparison__Group__09587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddition_in_rule__Comparison__Group__0__Impl9614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group__1__Impl_in_rule__Comparison__Group__19643 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1__0_in_rule__Comparison__Group__1__Impl9670 = new BitSet(new long[]{0x0000000000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_rule__Comparison__Group_1__0__Impl_in_rule__Comparison__Group_1__09705 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1__1_in_rule__Comparison__Group_1__09708 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Alternatives_1_0_in_rule__Comparison__Group_1__0__Impl9735 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1__1__Impl_in_rule__Comparison__Group_1__19765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__RightAssignment_1_1_in_rule__Comparison__Group_1__1__Impl9792 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_0__0__Impl_in_rule__Comparison__Group_1_0_0__09826 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_0__1_in_rule__Comparison__Group_1_0_0__09829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_0__1__Impl_in_rule__Comparison__Group_1_0_0__19887 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_rule__Comparison__Group_1_0_0__1__Impl9915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_1__0__Impl_in_rule__Comparison__Group_1_0_1__09950 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_1__1_in_rule__Comparison__Group_1_0_1__09953 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_1__1__Impl_in_rule__Comparison__Group_1_0_1__110011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_rule__Comparison__Group_1_0_1__1__Impl10039 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_2__0__Impl_in_rule__Comparison__Group_1_0_2__010074 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_2__1_in_rule__Comparison__Group_1_0_2__010077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_2__1__Impl_in_rule__Comparison__Group_1_0_2__110135 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_rule__Comparison__Group_1_0_2__1__Impl10163 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_3__0__Impl_in_rule__Comparison__Group_1_0_3__010198 = new BitSet(new long[]{0x0000000000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_3__1_in_rule__Comparison__Group_1_0_3__010201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Comparison__Group_1_0_3__1__Impl_in_rule__Comparison__Group_1_0_3__110259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_rule__Comparison__Group_1_0_3__1__Impl10287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group__0__Impl_in_rule__Addition__Group__010322 = new BitSet(new long[]{0x0000000000003000L});
    public static final BitSet FOLLOW_rule__Addition__Group__1_in_rule__Addition__Group__010325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiplication_in_rule__Addition__Group__0__Impl10352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group__1__Impl_in_rule__Addition__Group__110381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1__0_in_rule__Addition__Group__1__Impl10408 = new BitSet(new long[]{0x0000000000003002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1__0__Impl_in_rule__Addition__Group_1__010443 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Addition__Group_1__1_in_rule__Addition__Group_1__010446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Alternatives_1_0_in_rule__Addition__Group_1__0__Impl10473 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1__1__Impl_in_rule__Addition__Group_1__110503 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__RightAssignment_1_1_in_rule__Addition__Group_1__1__Impl10530 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_0__0__Impl_in_rule__Addition__Group_1_0_0__010564 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_0__1_in_rule__Addition__Group_1_0_0__010567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_0__1__Impl_in_rule__Addition__Group_1_0_0__110625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_13_in_rule__Addition__Group_1_0_0__1__Impl10653 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_1__0__Impl_in_rule__Addition__Group_1_0_1__010688 = new BitSet(new long[]{0x0000000000003000L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_1__1_in_rule__Addition__Group_1_0_1__010691 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Addition__Group_1_0_1__1__Impl_in_rule__Addition__Group_1_0_1__110749 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_12_in_rule__Addition__Group_1_0_1__1__Impl10777 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group__0__Impl_in_rule__Multiplication__Group__010812 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000070L});
    public static final BitSet FOLLOW_rule__Multiplication__Group__1_in_rule__Multiplication__Group__010815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnary_in_rule__Multiplication__Group__0__Impl10842 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group__1__Impl_in_rule__Multiplication__Group__110871 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1__0_in_rule__Multiplication__Group__1__Impl10898 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000070L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1__0__Impl_in_rule__Multiplication__Group_1__010933 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1__1_in_rule__Multiplication__Group_1__010936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Alternatives_1_0_in_rule__Multiplication__Group_1__0__Impl10963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1__1__Impl_in_rule__Multiplication__Group_1__110993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__RightAssignment_1_1_in_rule__Multiplication__Group_1__1__Impl11020 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_0__0__Impl_in_rule__Multiplication__Group_1_0_0__011054 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_0__1_in_rule__Multiplication__Group_1_0_0__011057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_0__1__Impl_in_rule__Multiplication__Group_1_0_0__111115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_rule__Multiplication__Group_1_0_0__1__Impl11143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_1__0__Impl_in_rule__Multiplication__Group_1_0_1__011178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_1__1_in_rule__Multiplication__Group_1_0_1__011181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_1__1__Impl_in_rule__Multiplication__Group_1_0_1__111239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_rule__Multiplication__Group_1_0_1__1__Impl11267 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_2__0__Impl_in_rule__Multiplication__Group_1_0_2__011302 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000070L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_2__1_in_rule__Multiplication__Group_1_0_2__011305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Multiplication__Group_1_0_2__1__Impl_in_rule__Multiplication__Group_1_0_2__111363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_rule__Multiplication__Group_1_0_2__1__Impl11391 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1__0__Impl_in_rule__Unary__Group_1__011426 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Unary__Group_1__1_in_rule__Unary__Group_1__011429 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Alternatives_1_0_in_rule__Unary__Group_1__0__Impl11456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1__1__Impl_in_rule__Unary__Group_1__111486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__RightAssignment_1_1_in_rule__Unary__Group_1__1__Impl11513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_0__0__Impl_in_rule__Unary__Group_1_0_0__011547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_0__1_in_rule__Unary__Group_1_0_0__011550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_0__1__Impl_in_rule__Unary__Group_1_0_0__111608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__OpAssignment_1_0_0_1_in_rule__Unary__Group_1_0_0__1__Impl11635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_1__0__Impl_in_rule__Unary__Group_1_0_1__011669 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_1__1_in_rule__Unary__Group_1_0_1__011672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__Group_1_0_1__1__Impl_in_rule__Unary__Group_1_0_1__111730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Unary__OpAssignment_1_0_1_1_in_rule__Unary__Group_1_0_1__1__Impl11757 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Literal__Group_1__0__Impl_in_rule__Literal__Group_1__011791 = new BitSet(new long[]{0x0000000000004040L,0x0000000000080000L});
    public static final BitSet FOLLOW_rule__Literal__Group_1__1_in_rule__Literal__Group_1__011794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Literal__Group_1__1__Impl_in_rule__Literal__Group_1__111852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__Literal__Alternatives_1_1_in_rule__Literal__Group_1__1__Impl11879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NumberLiteral__Group__0__Impl_in_rule__NumberLiteral__Group__011913 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_rule__NumberLiteral__Group__1_in_rule__NumberLiteral__Group__011916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NumberLiteral__Group__1__Impl_in_rule__NumberLiteral__Group__111974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NumberLiteral__ValueAssignment_1_in_rule__NumberLiteral__Group__1__Impl12001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParenthesizedExpression__Group__0__Impl_in_rule__ParenthesizedExpression__Group__012035 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__ParenthesizedExpression__Group__1_in_rule__ParenthesizedExpression__Group__012038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__ParenthesizedExpression__Group__0__Impl12066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParenthesizedExpression__Group__1__Impl_in_rule__ParenthesizedExpression__Group__112097 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_rule__ParenthesizedExpression__Group__2_in_rule__ParenthesizedExpression__Group__112100 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__ParenthesizedExpression__Group__1__Impl12127 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParenthesizedExpression__Group__2__Impl_in_rule__ParenthesizedExpression__Group__212156 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__ParenthesizedExpression__Group__2__Impl12184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__0__Impl_in_rule__FunctionCall__Group__012221 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__1_in_rule__FunctionCall__Group__012224 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__1__Impl_in_rule__FunctionCall__Group__112282 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__2_in_rule__FunctionCall__Group__112285 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__FuncAssignment_1_in_rule__FunctionCall__Group__1__Impl12312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__2__Impl_in_rule__FunctionCall__Group__212342 = new BitSet(new long[]{0x0001800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__3_in_rule__FunctionCall__Group__212345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_rule__FunctionCall__Group__2__Impl12373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__3__Impl_in_rule__FunctionCall__Group__312404 = new BitSet(new long[]{0x0001800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__4_in_rule__FunctionCall__Group__312407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3__0_in_rule__FunctionCall__Group__3__Impl12434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group__4__Impl_in_rule__FunctionCall__Group__412465 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_rule__FunctionCall__Group__4__Impl12493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3__0__Impl_in_rule__FunctionCall__Group_3__012534 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3__1_in_rule__FunctionCall__Group_3__012537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__ArgsAssignment_3_0_in_rule__FunctionCall__Group_3__0__Impl12564 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3__1__Impl_in_rule__FunctionCall__Group_3__112594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3_1__0_in_rule__FunctionCall__Group_3__1__Impl12621 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3_1__0__Impl_in_rule__FunctionCall__Group_3_1__012656 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3_1__1_in_rule__FunctionCall__Group_3_1__012659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_rule__FunctionCall__Group_3_1__0__Impl12687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__Group_3_1__1__Impl_in_rule__FunctionCall__Group_3_1__112718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__FunctionCall__ArgsAssignment_3_1_1_in_rule__FunctionCall__Group_3_1__1__Impl12745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group__0__Impl_in_rule__IndexedCall__Group__012779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group__1_in_rule__IndexedCall__Group__012782 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarOrArgumentCall_in_rule__IndexedCall__Group__0__Impl12809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group__1__Impl_in_rule__IndexedCall__Group__112838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group_1__0_in_rule__IndexedCall__Group__1__Impl12865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group_1__0__Impl_in_rule__IndexedCall__Group_1__012900 = new BitSet(new long[]{0x0000800000007050L,0x00000000000C1C80L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group_1__1_in_rule__IndexedCall__Group_1__012903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_rule__IndexedCall__Group_1__0__Impl12931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group_1__1__Impl_in_rule__IndexedCall__Group_1__112962 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group_1__2_in_rule__IndexedCall__Group_1__112965 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__IndexAssignment_1_1_in_rule__IndexedCall__Group_1__1__Impl12992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__IndexedCall__Group_1__2__Impl_in_rule__IndexedCall__Group_1__213022 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_rule__IndexedCall__Group_1__2__Impl13050 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__0__Impl_in_rule__NativeExpression__Group__013087 = new BitSet(new long[]{0x0000000000000010L,0x0000000000001C80L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__1_in_rule__NativeExpression__Group__013090 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__1__Impl_in_rule__NativeExpression__Group__113148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__2_in_rule__NativeExpression__Group__113151 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__Alternatives_1_in_rule__NativeExpression__Group__1__Impl13178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__2__Impl_in_rule__NativeExpression__Group__213208 = new BitSet(new long[]{0x0000000003FC0000L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__3_in_rule__NativeExpression__Group__213211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_rule__NativeExpression__Group__2__Impl13239 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__Group__3__Impl_in_rule__NativeExpression__Group__313270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NativeExpression__NativeFunctionAssignment_3_in_rule__NativeExpression__Group__3__Impl13297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VarOrArgumentCall__Group__0__Impl_in_rule__VarOrArgumentCall__Group__013335 = new BitSet(new long[]{0x0000000000000010L,0x0000000000001C80L});
    public static final BitSet FOLLOW_rule__VarOrArgumentCall__Group__1_in_rule__VarOrArgumentCall__Group__013338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VarOrArgumentCall__Group__1__Impl_in_rule__VarOrArgumentCall__Group__113396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__VarOrArgumentCall__CallAssignment_1_in_rule__VarOrArgumentCall__Group__1__Impl13423 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__0__Impl_in_rule__RangeLiteral__Group__013457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__1_in_rule__RangeLiteral__Group__013460 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__1__Impl_in_rule__RangeLiteral__Group__113518 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000100L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__2_in_rule__RangeLiteral__Group__113521 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_rule__RangeLiteral__Group__1__Impl13549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__2__Impl_in_rule__RangeLiteral__Group__213580 = new BitSet(new long[]{0x0000000000000040L,0x0000000000000100L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__3_in_rule__RangeLiteral__Group__213583 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2__0_in_rule__RangeLiteral__Group__2__Impl13610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group__3__Impl_in_rule__RangeLiteral__Group__313641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_rule__RangeLiteral__Group__3__Impl13669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2__0__Impl_in_rule__RangeLiteral__Group_2__013708 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2__1_in_rule__RangeLiteral__Group_2__013711 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__ValuesAssignment_2_0_in_rule__RangeLiteral__Group_2__0__Impl13738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2__1__Impl_in_rule__RangeLiteral__Group_2__113768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2_1__0_in_rule__RangeLiteral__Group_2__1__Impl13795 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2_1__0__Impl_in_rule__RangeLiteral__Group_2_1__013830 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2_1__1_in_rule__RangeLiteral__Group_2_1__013833 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_rule__RangeLiteral__Group_2_1__0__Impl13861 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__Group_2_1__1__Impl_in_rule__RangeLiteral__Group_2_1__113892 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeLiteral__ValuesAssignment_2_1_1_in_rule__RangeLiteral__Group_2_1__1__Impl13919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParamRef__Group__0__Impl_in_rule__ParamRef__Group__013953 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001C00L});
    public static final BitSet FOLLOW_rule__ParamRef__Group__1_in_rule__ParamRef__Group__013956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParamRef__Group__1__Impl_in_rule__ParamRef__Group__114014 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ParamRef__Group__2_in_rule__ParamRef__Group__114017 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_rule__ParamRef__Group__1__Impl14045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParamRef__Group__2__Impl_in_rule__ParamRef__Group__214076 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ParamRef__ParamAssignment_2_in_rule__ParamRef__Group__2__Impl14103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__0__Impl_in_rule__NodeTypeRef__Group__014139 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001800L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__1_in_rule__NodeTypeRef__Group__014142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__1__Impl_in_rule__NodeTypeRef__Group__114200 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__2_in_rule__NodeTypeRef__Group__114203 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_rule__NodeTypeRef__Group__1__Impl14231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__2__Impl_in_rule__NodeTypeRef__Group__214262 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__3_in_rule__NodeTypeRef__Group__214265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__NodetypeAssignment_2_in_rule__NodeTypeRef__Group__2__Impl14292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__Group__3__Impl_in_rule__NodeTypeRef__Group__314322 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__NodeTypeRef__PrimaryRefAssignment_3_in_rule__NodeTypeRef__Group__3__Impl14349 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ContextRef__Group__0__Impl_in_rule__ContextRef__Group__014387 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_rule__ContextRef__Group__1_in_rule__ContextRef__Group__014390 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ContextRef__Group__1__Impl_in_rule__ContextRef__Group__114448 = new BitSet(new long[]{0x000003FC00000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_rule__ContextRef__Group__2_in_rule__ContextRef__Group__114451 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_rule__ContextRef__Group__1__Impl14479 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ContextRef__Group__2__Impl_in_rule__ContextRef__Group__214510 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ContextRef__Alternatives_2_in_rule__ContextRef__Group__2__Impl14537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group__0__Impl_in_rule__PrimaryRef__Group__014573 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group__1_in_rule__PrimaryRef__Group__014576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryRef__ComponentsAssignment_0_in_rule__PrimaryRef__Group__0__Impl14605 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_rule__PrimaryRef__ComponentsAssignment_0_in_rule__PrimaryRef__Group__0__Impl14617 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group__1__Impl_in_rule__PrimaryRef__Group__114650 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group_1__0_in_rule__PrimaryRef__Group__1__Impl14677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group_1__0__Impl_in_rule__PrimaryRef__Group_1__014712 = new BitSet(new long[]{0x00000003C0000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group_1__1_in_rule__PrimaryRef__Group_1__014715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_rule__PrimaryRef__Group_1__0__Impl14743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryRef__Group_1__1__Impl_in_rule__PrimaryRef__Group_1__114774 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__PrimaryRef__LeafRefAssignment_1_1_in_rule__PrimaryRef__Group_1__1__Impl14801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group__0__Impl_in_rule__ComponentRef__Group__014835 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group__1_in_rule__ComponentRef__Group__014838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group__1__Impl_in_rule__ComponentRef__Group__114896 = new BitSet(new long[]{0x0000000000018000L,0x000000000000C000L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group__2_in_rule__ComponentRef__Group__114899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_rule__ComponentRef__Group__1__Impl14927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group__2__Impl_in_rule__ComponentRef__Group__214958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Alternatives_2_in_rule__ComponentRef__Group__2__Impl14985 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_0__0__Impl_in_rule__ComponentRef__Group_2_0__015021 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_0__1_in_rule__ComponentRef__Group_2_0__015024 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_rule__ComponentRef__Group_2_0__0__Impl15052 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_0__1__Impl_in_rule__ComponentRef__Group_2_0__115083 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__FunctionAssignment_2_0_1_in_rule__ComponentRef__Group_2_0__1__Impl15110 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_1__0__Impl_in_rule__ComponentRef__Group_2_1__015144 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_1__1_in_rule__ComponentRef__Group_2_1__015147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_rule__ComponentRef__Group_2_1__0__Impl15175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__Group_2_1__1__Impl_in_rule__ComponentRef__Group_2_1__115206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ComponentRef__EquipmentAssignment_2_1_1_in_rule__ComponentRef__Group_2_1__1__Impl15233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__0__Impl_in_rule__ResourceRef__Group__015267 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__1_in_rule__ResourceRef__Group__015270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__1__Impl_in_rule__ResourceRef__Group__115328 = new BitSet(new long[]{0x0000000000020010L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__2_in_rule__ResourceRef__Group__115331 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_rule__ResourceRef__Group__1__Impl15359 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__2__Impl_in_rule__ResourceRef__Group__215390 = new BitSet(new long[]{0x000003FC00000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__3_in_rule__ResourceRef__Group__215393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__Alternatives_2_in_rule__ResourceRef__Group__2__Impl15420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__Group__3__Impl_in_rule__ResourceRef__Group__315450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ResourceRef__RangeRefAssignment_3_in_rule__ResourceRef__Group__3__Impl15477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__StatusRef__Group__0__Impl_in_rule__StatusRef__Group__015515 = new BitSet(new long[]{0x00000003C0000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_rule__StatusRef__Group__1_in_rule__StatusRef__Group__015518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__StatusRef__Group__1__Impl_in_rule__StatusRef__Group__115576 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__StatusRef__TolerancelevelAssignment_1_in_rule__StatusRef__Group__1__Impl15603 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeRef__Group__0__Impl_in_rule__RangeRef__Group__015637 = new BitSet(new long[]{0x00000C003C000040L});
    public static final BitSet FOLLOW_rule__RangeRef__Group__1_in_rule__RangeRef__Group__015640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeRef__ValuerangeAssignment_0_in_rule__RangeRef__Group__0__Impl15667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeRef__Group__1__Impl_in_rule__RangeRef__Group__115697 = new BitSet(new long[]{0x00000C003C000040L});
    public static final BitSet FOLLOW_rule__RangeRef__Group__2_in_rule__RangeRef__Group__115700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeRef__KindAssignment_1_in_rule__RangeRef__Group__1__Impl15727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeRef__Group__2__Impl_in_rule__RangeRef__Group__215758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__RangeRef__IntervalAssignment_2_in_rule__RangeRef__Group__2__Impl15785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LinkRef__Group__0__Impl_in_rule__LinkRef__Group__015822 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_rule__LinkRef__Group__1_in_rule__LinkRef__Group__015825 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LinkRef__Group__1__Impl_in_rule__LinkRef__Group__115883 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_rule__LinkRef__Group__2_in_rule__LinkRef__Group__115886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_rule__LinkRef__Group__1__Impl15914 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LinkRef__Group__2__Impl_in_rule__LinkRef__Group__215945 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__LinkRef__LinkAssignment_2_in_rule__LinkRef__Group__2__Impl15972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Mod__NameAssignment_0_116013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleImport_in_rule__Mod__ImportsAssignment_116044 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleFunction_in_rule__Mod__FunctionsAssignment_2_016075 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_rule__Mod__StatementsAssignment_2_116106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_STRING_in_rule__Import__ImportURIAssignment_116137 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Function__NameAssignment_116168 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArgument_in_rule__Function__ArgsAssignment_3_016199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleArgument_in_rule__Function__ArgsAssignment_3_1_116230 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBlock_in_rule__Function__BlockAssignment_516261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__Argument__NameAssignment16292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleStatement_in_rule__Block__StatementsAssignment_216323 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__Statement__ExpressionAssignment_0_0_416354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__ReturnStatement__ExpressionAssignment_216385 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLogical_in_rule__IfStatement__IfAssignment_316416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBlock_in_rule__IfStatement__ThenAssignment_516447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBlock_in_rule__IfStatement__ElseAssignment_6_116478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLogical_in_rule__WhileStatement__PredicateAssignment_316509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleBlock_in_rule__WhileStatement__BodyAssignment_516540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__VariableStatement__NameAssignment_216571 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__VariableStatement__ExpressionAssignment_3_116602 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__AssignmentStatement__VarAssignment_116637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__AssignmentStatement__ExpressionAssignment_316672 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__PlusAssignmentStatement__VarAssignment_116707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__PlusAssignmentStatement__ExpressionAssignment_316742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rule__ReferenceAssignmentStatement__AssignmentRefAlternatives_1_0_in_rule__ReferenceAssignmentStatement__AssignmentRefAssignment_116773 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__ReferenceAssignmentStatement__ExpressionAssignment_316806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleEquality_in_rule__Logical__RightAssignment_1_116837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComparison_in_rule__Equality__RightAssignment_1_116868 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleAddition_in_rule__Comparison__RightAssignment_1_116899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleMultiplication_in_rule__Addition__RightAssignment_1_116930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnary_in_rule__Multiplication__RightAssignment_1_116961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_rule__Unary__OpAssignment_1_0_0_116997 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnaryOperator_in_rule__Unary__OpAssignment_1_0_1_117036 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleUnary_in_rule__Unary__RightAssignment_1_117067 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_rule__Literal__ConditionAssignment_1_1_017103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_NUMBER_in_rule__NumberLiteral__ValueAssignment_117142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__FunctionCall__FuncAssignment_117177 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__FunctionCall__ArgsAssignment_3_017212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__FunctionCall__ArgsAssignment_3_1_117243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleExpression_in_rule__IndexedCall__IndexAssignment_1_117274 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRangeLiteral_in_rule__NativeExpression__RangeAssignment_1_017305 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleReference_in_rule__NativeExpression__RefAssignment_1_117336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleVarOrArgumentCall_in_rule__NativeExpression__VarAssignment_1_217367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleNativeFunction_in_rule__NativeExpression__NativeFunctionAssignment_317398 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__VarOrArgumentCall__CallAssignment_117433 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_NUMBER_in_rule__RangeLiteral__ValuesAssignment_2_017468 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_NUMBER_in_rule__RangeLiteral__ValuesAssignment_2_1_117499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ParamRef__ParamAssignment_217534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__NodeTypeRef__NodetypeAssignment_217573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryRef_in_rule__NodeTypeRef__PrimaryRefAssignment_317608 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rulePrimaryRef_in_rule__ContextRef__PrimaryRefAssignment_2_017639 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRangeRef_in_rule__ContextRef__RangeRefAssignment_2_117670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleComponentRef_in_rule__PrimaryRef__ComponentsAssignment_017701 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleLeafReference_in_rule__PrimaryRef__LeafRefAssignment_1_117732 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ComponentRef__FunctionAssignment_2_0_117767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ComponentRef__EquipmentAssignment_2_1_117806 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__ResourceRef__ResourceAssignment_2_017845 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleRangeRef_in_rule__ResourceRef__RangeRefAssignment_317880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleToleranceLevel_in_rule__StatusRef__TolerancelevelAssignment_117911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueRange_in_rule__RangeRef__ValuerangeAssignment_017942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleValueKind_in_rule__RangeRef__KindAssignment_117973 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleInterval_in_rule__RangeRef__IntervalAssignment_218004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_NUMBER_in_rule__Interval__IntervalAssignment_018035 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ruleIntervalKind_in_rule__Interval__KindAssignment_118066 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RULE_ID_in_rule__LinkRef__LinkAssignment_218101 = new BitSet(new long[]{0x0000000000000002L});

}