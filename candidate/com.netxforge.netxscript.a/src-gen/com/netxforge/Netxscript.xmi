<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext">
  <xtext:Grammar name="com.netxforge.Netxscript" usedGrammars="/1">
    <metamodelDeclarations xsi:type="xtext:GeneratedMetamodel" name="netxscript">
      <ePackage href="http://www.netxforge.com/Netxscript#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="library">
      <ePackage href="http://www.netxforge.com/library#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Mod">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Mod"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="mod"/>
          <elements xsi:type="xtext:Assignment" feature="name" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="imports" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="functions" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="statements" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Context">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Context"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="context"/>
        <elements xsi:type="xtext:Assignment" feature="context" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.1">
              <classifier xsi:type="ecore:EClass" href="http://www.eclipse.org/emf/2002/Ecore#//EObject"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Import">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Import"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="import"/>
        <elements xsi:type="xtext:Assignment" feature="importURI" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Function">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Function"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="def"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
        <elements xsi:type="xtext:Assignment" feature="block" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Argument">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Argument"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="name" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AbstractVarOrArgument">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//AbstractVarOrArgument"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.12"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AbstractFunction">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//AbstractFunction"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Block">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Block"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Block"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="{"/>
        <elements xsi:type="xtext:Assignment" cardinality="*" feature="statements" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="}"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Statement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:RuleCall" rule="/0/@rules.12"/>
            <elements xsi:type="xtext:RuleCall" rule="/0/@rules.13"/>
            <elements xsi:type="xtext:RuleCall" rule="/0/@rules.14"/>
            <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
            </elements>
            <elements xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=";"/>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.10"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.11"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ReturnStatement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Return"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="return"/>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="expression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="IfStatement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//If"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="if"/>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="if" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.16"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
        <elements xsi:type="xtext:Assignment" feature="then" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="else"/>
          <elements xsi:type="xtext:Assignment" feature="else" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="WhileStatement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//While"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="while"/>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="predicate" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.16"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
        <elements xsi:type="xtext:Assignment" feature="body" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="VariableStatement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Variable"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="var"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="="/>
          <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AssignmentStatement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Assignment"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="var" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//AbstractVarOrArgument"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ReferenceAssignmentStatement">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Statement"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//RefAssignement"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.30"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="="/>
        <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Expression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/0/@rules.16"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Logical">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.17"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//And"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="&amp;&amp;"/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Or"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="||"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="right" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.17"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Equality">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.18"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Equal"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="=="/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Unequal"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="!="/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="right" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.18"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Comparison">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.19"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Lesser"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="&lt;"/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//LesserEqual"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="&lt;="/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Greater"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value=">"/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//GreaterEqual"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value=">="/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="right" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.19"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Addition">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.20"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Plus"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="+"/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Minus"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="-"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="right" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.20"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Multiplication">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Multi"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="*"/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Div"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="/"/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action" feature="left" operator="=">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Modulo"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Keyword" value="%"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="right" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Unary">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.23"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Negation"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Assignment" feature="op" operator="=">
                <terminal xsi:type="xtext:Keyword" value="!"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Action">
                <type metamodel="/0/@metamodelDeclarations.0">
                  <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//UnaryPlusMinus"/>
                </type>
              </elements>
              <elements xsi:type="xtext:Assignment" feature="op" operator="=">
                <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.22"/>
              </elements>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="right" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.21"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="UnaryOperator">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="-"/>
        <elements xsi:type="xtext:Keyword" value="+"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="PrimaryExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.24"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.28"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.26"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.27"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.25"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Literal">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//NumberLiteral"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="value" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.35"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//BooleanLiteral"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Assignment" feature="condition" operator="?=">
              <terminal xsi:type="xtext:Keyword" value="true"/>
            </elements>
            <elements xsi:type="xtext:Keyword" value="false"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ParenthesizedExpression">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="FunctionCall">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//FunctionCall"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="func" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//AbstractFunction"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="args" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.15"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="VarOrArgumentCall">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//VarOrArgumentCall"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="call" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//AbstractVarOrArgument"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Reference">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.30"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:Assignment" feature="nativeFunction" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.29"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="NativeFunction">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://www.netxforge.com/Netxscript#//NativeFunction"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.netxforge.com/Netxscript#//NativeFunction/COUNT"/>
          <literal value="COUNT"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.netxforge.com/Netxscript#//NativeFunction/SUM"/>
          <literal value="SUM"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.netxforge.com/Netxscript#//NativeFunction/MIN"/>
          <literal value="MIN"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.netxforge.com/Netxscript#//NativeFunction/MAX"/>
          <literal value="MAX"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.netxforge.com/Netxscript#//NativeFunction/MEAN"/>
          <literal value="MEAN"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://www.netxforge.com/Netxscript#//NativeFunction/DEVIATION"/>
          <literal value="DEVIATION"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ContextRef">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Reference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="this"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.31"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NodeRef">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Reference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" cardinality="+" feature="nodes" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.32"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="->"/>
          <elements xsi:type="xtext:Assignment" feature="ref" operator="=">
            <terminal xsi:type="xtext:Alternatives">
              <elements xsi:type="xtext:RuleCall" rule="/0/@rules.33"/>
              <elements xsi:type="xtext:RuleCall" rule="/0/@rules.34"/>
            </terminal>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="PrimaryNodeRef">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Reference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//NodeRef"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="->"/>
        <elements xsi:type="xtext:Assignment" feature="node" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.2">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/library#//Node"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ResourceRef">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Reference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//ResourceRef"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="RES"/>
        <elements xsi:type="xtext:Assignment" feature="resource" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.2">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/library#//Resource"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="LinkRef">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//Reference"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/Netxscript#//LinkRef"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Keyword" value="LINK"/>
        <elements xsi:type="xtext:Assignment" feature="link" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.2">
              <classifier xsi:type="ecore:EClass" href="http://www.netxforge.com/library#//Link"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.0"/>
          </terminal>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="NUMBER">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBigDecimal"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:CharacterRange" cardinality="*">
          <left value="0"/>
          <right value="9"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="."/>
          <elements xsi:type="xtext:CharacterRange" cardinality="+">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:Keyword" value="this one has been deactivated"/>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="org.eclipse.xtext.common.Terminals" definesHiddenTokens="true" hiddenTokens="/1/@rules.5 /1/@rules.3 /1/@rules.4">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
        <left value="0"/>
        <right value="9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="STRING">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="u"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="u"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="'"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ML_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/*"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="*/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="//"/>
        <elements xsi:type="xtext:NegatedToken" cardinality="*">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&#xA;"/>
            <elements xsi:type="xtext:Keyword" value="&#xD;"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="WS">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:Keyword" value=" "/>
        <elements xsi:type="xtext:Keyword" value="&#x9;"/>
        <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        <elements xsi:type="xtext:Keyword" value="&#xA;"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ANY_OTHER">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Wildcard"/>
    </rules>
  </xtext:Grammar>
</xmi:XMI>
