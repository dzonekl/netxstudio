BUILDING NETXSTUDIO HANDBOOK 
----------------------------

- Requirements

Requirements
============
- Jetty 8.1.4
- Jenkins 1.466
- Buckminster jenkins plugin(Installed by jenkins).
- Buckminster headless. 
- Buckminster plugins in Eclise IDE. 

Installation 
============

Step by step on how to setup a build server for NetXStudio. 
1) Requires Jenkins, a web application for running jobs. 
2) (Optional) Requires Jetty, which will be the webcontainer for jenkins. 
3) Requires Buckminster, a headless Eclipse builder.

Jenkins Administration See: https://wiki.jenkins-ci.org/display/JENKINS/Administering+Jenkins
=======================

4) Install Buckminster. (https://wiki.jenkins-ci.org/display/JENKINS/Buckminster+PlugIn)
The plugin helps with download and a build.step. 

	4.1) Install the buckminster plugin jenkins-> Configuration, install the plugin. 
	4.2) Activate buckminster  in jenkins configuration. 

In our case the auto install, isn't working, so
4.1) Fixing buckminster plugin bugs: 
http://www.lorenzobettini.it/2012/10/using-buckminster-plugin-in-jenkins/


Setting Up GIT in Jenkins
=========================

Make sure, it's clear who we are. In this case we are the Jenkins build server. 
*** Please tell me who you are.



Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"



1) Enable the plugin, requires restart of plugin: ( https://wiki.jenkins-ci.org/display/JENKINS/Git+Plugin)
2) Enter the GIT Repo URL (i.e. URL from github). 


Lazy dog installation of Jetty (http://wiki.eclipse.org/Jetty/Starting/Downloads)
============================================
http://docs.codehaus.org/display/JETTY/Jetty+Documentation
1) Install jetty. (6.1.22)
On ubuntu:
	apt-get install jetty
	install dir = /etc/jetty
	config file = jetty.xml	
2) - Change the port number, to avoid conflict with the netxstudio CDO Server.
URL = http://176.58.103.70:8814/
	Change to the server directory cd /usr/share/jetty
	Start the server => java -jar start.jar
 	
3) deploy on [jetty install]/webapps


4) Installing Jenkins (https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+on+Ubuntu)
4.1) wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key add -
4.1) OK
4.2) sudo sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
4.2) 
4.3) sudo apt-get update
4.3) 
Fetched 840kB in 0s (1,023kB/s) 
Reading package lists... Done

4.4) sudo apt-get install jenkins
4.4) output
===========

The following extra packages will be installed:
  daemon default-jre icedtea-6-jre-cacao icedtea-netx libflac8 libogg0 libpcsclite1 libpulse0 libsndfile1 libvorbis0a libvorbisenc2 openjdk-6-jre openjdk-6-jre-headless openjdk-6-jre-lib ttf-dejavu-extra

- Jenkins will be launched as a daemon up on start. See /etc/init.d/jenkins for more details.
- The 'jenkins' user is created to run this service.
- Log file will be placed in /var/log/jenkins/jenkins.log. Check this file if you are troubleshooting Jenkins.
- /etc/default/jenkins will capture configuration parameters for the launch.
- By default, Jenkins listen on port 8080. Access this port with your browser to start configuration.

The workspace is here!

/var/lib/jenkins/workspace



Deploy Jenkins in a Jetty Container (Optional, jenkins works without this). https://wiki.jenkins-ci.org/display/JENKINS/Jetty
===========================================================================
create a copy of test.xml from [jetty install]/contexts
replace the WebContext with this: 

<?xml version="1.0"  encoding="ISO-8859-1"?>
<!DOCTYPE Configure PUBLIC "-//Jetty//Configure//EN" "http://www.eclipse.org/jetty/configure.dtd">

<!-- ==================================================================
Configure and deploy the test web application in $(jetty.home)/webapps/test

Note. If this file did not exist or used a context path other that /test
then the default configuration of jetty.xml would discover the test
webapplication with a WebAppDeployer.  By specifying a context in this
directory, additional configuration may be specified and hot deployments 
detected.
===================================================================== -->

<Configure class="org.eclipse.jetty.webapp.WebAppContext">  
	<Set name="contextPath">/jenkins</Set>  
	<Set name="war"><SystemProperty name="jetty.home" default="."/>/webapps/jenkins.war</Set>  


	<Get name="securityHandler">    
		<Set name="loginService">      
			<New class="org.eclipse.jetty.security.HashLoginService">            
				<Set name="name">Jenkins Realm</Set>            
				<Set name="config"><SystemProperty name="jetty.home" default="."/>/etc/realm.properties</Set>      
			</New>    
		</Set>  
	</Get>
</Configure>
