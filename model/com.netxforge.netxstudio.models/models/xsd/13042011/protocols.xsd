<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xs:schema xmlns="http://www.netxforge.com/13042011/protocols"
	xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:gen="http://www.netxforge.com/13042011/generics"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" ecore:package="com.netxforge.netxstudio.protocols"
	id="protocols" targetNamespace="http://www.netxforge.com/13042011/protocols">
	<xs:import namespace="http://www.netxforge.com/13042011/generics"
		schemaLocation="generics.xsd" />
	<xs:annotation>
		<xs:documentation>
		</xs:documentation>
		<xs:appinfo ecore:key="validationDelegates"
			source="http://www.eclipse.org/emf/2002/Ecore">http://www.eclipse.org/emf/2002/Ecore/OCL</xs:appinfo>
		<xs:appinfo ecore:key="settingDelegates"
			source="http://www.eclipse.org/emf/2002/Ecore">http://www.eclipse.org/emf/2002/Ecore/OCL</xs:appinfo>
		<xs:appinfo ecore:key="invocationDelegates"
			source="http://www.eclipse.org/emf/2002/Ecore">http://www.eclipse.org/emf/2002/Ecore/OCL</xs:appinfo>
	</xs:annotation>
	<!--_____________________________ -->
	<!--| PROTOCOL | -->
	<!--|___________________________| -->

	<xs:complexType name="Protocol">
		<xs:annotation>
			<xs:documentation>A type representing the basic information points of
				a protocol. A communications protocol is a formal description of
				digital message formats
				and the rules for exchanging those messages.


				Examples:

				1. The ISUP protocol is defined and referred to by a
				Function ISDN
				User part.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="gen:Base">
				<xs:sequence>
					<xs:element maxOccurs="unbounded" minOccurs="0" name="Procedures"
						type="Procedure">
						<xs:annotation>
							<xs:documentation>The Procedures reference, contains 0 or more
								Procedure types.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute ecore:reference="gen:Company" name="BodyRef"
					type="xs:anyURI">
					<xs:annotation>
						<xs:documentation>The BodyRef reference, refers to a Company type.
							In this case we refer to standardisation bodies responsible for
							maintaining the protocol.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="OSI">
					<xs:annotation>
						<xs:documentation>The OSI attribute refers to the OSI layer in
							which the protocol operates.
						</xs:documentation>
					</xs:annotation>
					<xs:simpleType>
						<xs:restriction base="xs:string">
							<xs:enumeration value="Application"></xs:enumeration>
							<xs:enumeration value="Presentation"></xs:enumeration>
							<xs:enumeration value="Session"></xs:enumeration>
							<xs:enumeration value="Transport"></xs:enumeration>
							<xs:enumeration value="Network"></xs:enumeration>
							<xs:enumeration value="DataLink"></xs:enumeration>
							<xs:enumeration value="Physiscal"></xs:enumeration>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="Name" type="gen:Name255">
					<xs:annotation>
						<xs:documentation>The Name attribute holds a name used for
							presentation.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="Description" type="gen:Description2000">
					<xs:annotation>
						<xs:documentation>The Description attribute holds the description
							of the equipment
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="Specification" type="xs:string">
					<xs:annotation>
						<xs:documentation>The Specification attribute holds a reference to
							a specification code.

							Example:
							The specification could be: RFC 1234
							or Q.711
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!--_____________________________ -->
	<!--| MESSAGE | -->
	<!--|___________________________| -->

	<xs:complexType name="Message">
		<xs:annotation>
			<xs:documentation>A type representing a message in a protocol
				procedure.
				THIS TYPE SHOULD NOT BE CONSIDERED FOR NOW.

				Examples:
				1. The
				Message type could be for example a "Location Update" message
				in the
				MAP protocol.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="gen:Base">
				<xs:attribute name="Name" type="gen:Name255">
					<xs:annotation>
						<xs:documentation>The Name attribute holds the name of the
							Message.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<!--_____________________________ -->
	<!--| PROCEDURE | -->
	<!--|___________________________| -->

	<xs:complexType name="Procedure">
		<xs:annotation>
			<xs:documentation>A type representing the basic information points of
				a protocol procedure. A procedure is a sequence of messages in a
				protocol. The order in which the messages are expected, is the order
				in which
				the messages are stored in the messages reference.

				THIS TYPE
				SHOULD NOT BE CONSIDERED FOR NOW.

				Examples:
				1. The routing procedure
				for a terminating cal consists of the
				following messages.
				- Send
				Routing Information
				- Provide Roaming Number.
				- etc..
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="gen:Base">
				<xs:sequence>
					<xs:element name="Messages" type="Message" minOccurs="0"
						maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>The Messages reference, refers to 0 or more
								Message types.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="Name" type="gen:Name255">
					<xs:annotation>
						<xs:documentation>The Name attribute holds a name used for
							presentation.
						</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
