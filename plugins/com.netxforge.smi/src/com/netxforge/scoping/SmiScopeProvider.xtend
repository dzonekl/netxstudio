/*
 * generated by Xtext
 */
package com.netxforge.scoping

import com.netxforge.smi.Attribute
import com.netxforge.smi.Macro
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.IScope
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import com.netxforge.smi.SmiPackage
import org.eclipse.emf.codegen.ecore.genmodel.impl.Literals

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping
 * on how and when to use it 
 *
 */
class SmiScopeProvider extends AbstractDeclarativeScopeProvider {

	def IScope scope_Attribute_paramRef(Attribute attr, EReference eRef){
		val com.netxforge.smi.Object o = attr.eContainer as com.netxforge.smi.Object;
		super.getScope(o.macroRef.typeNotation,SmiPackage.Literals.TYPE_NOTATION__TYPE_NOTATIONS);
	}

//	def IScope scope_ParamAssignment(Attribute attr, EReference ref) {
//		System.out.println("scope_ParamAssignment: => " + attr + "," + ref)
//		if(attr.eContainer instanceof Macro){
//			return super.getScope(attr.eContainer, ref);
//		}
//		return super.getScope(attr, ref);
//	}
	

}
