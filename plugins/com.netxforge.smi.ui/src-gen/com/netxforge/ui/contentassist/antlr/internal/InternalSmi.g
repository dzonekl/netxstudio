/*
* generated by Xtext
*/
grammar InternalSmi;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.netxforge.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.netxforge.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.netxforge.services.SmiGrammarAccess;

}

@parser::members {
 
 	private SmiGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SmiGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectIdentifier
entryRuleObjectIdentifier 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_ASN1_COMMENT");
}
:
{ before(grammarAccess.getObjectIdentifierRule()); }
	 ruleObjectIdentifier
{ after(grammarAccess.getObjectIdentifierRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ObjectIdentifier
ruleObjectIdentifier
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_ASN1_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectIdentifierAccess().getGroup()); }
(rule__ObjectIdentifier__Group__0)
{ after(grammarAccess.getObjectIdentifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleObjectIdentifierValue
entryRuleObjectIdentifierValue 
:
{ before(grammarAccess.getObjectIdentifierValueRule()); }
	 ruleObjectIdentifierValue
{ after(grammarAccess.getObjectIdentifierValueRule()); } 
	 EOF 
;

// Rule ObjectIdentifierValue
ruleObjectIdentifierValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getGroup()); }
(rule__ObjectIdentifierValue__Group__0)
{ after(grammarAccess.getObjectIdentifierValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition 
:
{ before(grammarAccess.getTypeDefinitionRule()); }
	 ruleTypeDefinition
{ after(grammarAccess.getTypeDefinitionRule()); } 
	 EOF 
;

// Rule TypeDefinition
ruleTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDefinitionAccess().getGroup()); }
(rule__TypeDefinition__Group__0)
{ after(grammarAccess.getTypeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacro
entryRuleMacro 
:
{ before(grammarAccess.getMacroRule()); }
	 ruleMacro
{ after(grammarAccess.getMacroRule()); } 
	 EOF 
;

// Rule Macro
ruleMacro
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroAccess().getGroup()); }
(rule__Macro__Group__0)
{ after(grammarAccess.getMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeNotation
entryRuleTypeNotation 
:
{ before(grammarAccess.getTypeNotationRule()); }
	 ruleTypeNotation
{ after(grammarAccess.getTypeNotationRule()); } 
	 EOF 
;

// Rule TypeNotation
ruleTypeNotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeNotationAccess().getGroup()); }
(rule__TypeNotation__Group__0)
{ after(grammarAccess.getTypeNotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueNotation
entryRuleValueNotation 
:
{ before(grammarAccess.getValueNotationRule()); }
	 ruleValueNotation
{ after(grammarAccess.getValueNotationRule()); } 
	 EOF 
;

// Rule ValueNotation
ruleValueNotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueNotationAccess().getGroup()); }
(rule__ValueNotation__Group__0)
{ after(grammarAccess.getValueNotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeAssignment
entryRuleTypeAssignment 
:
{ before(grammarAccess.getTypeAssignmentRule()); }
	 ruleTypeAssignment
{ after(grammarAccess.getTypeAssignmentRule()); } 
	 EOF 
;

// Rule TypeAssignment
ruleTypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAssignmentAccess().getGroup()); }
(rule__TypeAssignment__Group__0)
{ after(grammarAccess.getTypeAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParamAssignment
entryRuleParamAssignment 
:
{ before(grammarAccess.getParamAssignmentRule()); }
	 ruleParamAssignment
{ after(grammarAccess.getParamAssignmentRule()); } 
	 EOF 
;

// Rule ParamAssignment
ruleParamAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParamAssignmentAccess().getGroup()); }
(rule__ParamAssignment__Group__0)
{ after(grammarAccess.getParamAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeNotationRight
entryRuleTypeNotationRight 
:
{ before(grammarAccess.getTypeNotationRightRule()); }
	 ruleTypeNotationRight
{ after(grammarAccess.getTypeNotationRightRule()); } 
	 EOF 
;

// Rule TypeNotationRight
ruleTypeNotationRight
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeNotationRightAccess().getAlternatives()); }
(rule__TypeNotationRight__Alternatives)
{ after(grammarAccess.getTypeNotationRightAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReferenceExt
entryRuleTypeReferenceExt 
:
{ before(grammarAccess.getTypeReferenceExtRule()); }
	 ruleTypeReferenceExt
{ after(grammarAccess.getTypeReferenceExtRule()); } 
	 EOF 
;

// Rule TypeReferenceExt
ruleTypeReferenceExt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceExtAccess().getGroup()); }
(rule__TypeReferenceExt__Group__0)
{ after(grammarAccess.getTypeReferenceExtAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReference
entryRuleTypeReference 
:
{ before(grammarAccess.getTypeReferenceRule()); }
	 ruleTypeReference
{ after(grammarAccess.getTypeReferenceRule()); } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeAssignment()); }
(rule__TypeReference__TypeAssignment)
{ after(grammarAccess.getTypeReferenceAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getGroup()); }
(rule__Value__Group__0)
{ after(grammarAccess.getValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTag
entryRuleTag 
:
{ before(grammarAccess.getTagRule()); }
	 ruleTag
{ after(grammarAccess.getTagRule()); } 
	 EOF 
;

// Rule Tag
ruleTag
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAccess().getGroup()); }
(rule__Tag__Group__0)
{ after(grammarAccess.getTagAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueType
entryRuleValueType 
:
{ before(grammarAccess.getValueTypeRule()); }
	 ruleValueType
{ after(grammarAccess.getValueTypeRule()); } 
	 EOF 
;

// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacroValue
entryRuleMacroValue 
:
{ before(grammarAccess.getMacroValueRule()); }
	 ruleMacroValue
{ after(grammarAccess.getMacroValueRule()); } 
	 EOF 
;

// Rule MacroValue
ruleMacroValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroValueAccess().getGroup()); }
(rule__MacroValue__Group__0)
{ after(grammarAccess.getMacroValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMACRO_VALUE_TYPE
entryRuleMACRO_VALUE_TYPE 
:
{ before(grammarAccess.getMACRO_VALUE_TYPERule()); }
	 ruleMACRO_VALUE_TYPE
{ after(grammarAccess.getMACRO_VALUE_TYPERule()); } 
	 EOF 
;

// Rule MACRO_VALUE_TYPE
ruleMACRO_VALUE_TYPE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getAlternatives()); }
(rule__MACRO_VALUE_TYPE__Alternatives)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUpdateType
entryRuleUpdateType 
:
{ before(grammarAccess.getUpdateTypeRule()); }
	 ruleUpdateType
{ after(grammarAccess.getUpdateTypeRule()); } 
	 EOF 
;

// Rule UpdateType
ruleUpdateType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUpdateTypeAccess().getGroup()); }
(rule__UpdateType__Group__0)
{ after(grammarAccess.getUpdateTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMACRO_VALUE_CAP
entryRuleMACRO_VALUE_CAP 
:
{ before(grammarAccess.getMACRO_VALUE_CAPRule()); }
	 ruleMACRO_VALUE_CAP
{ after(grammarAccess.getMACRO_VALUE_CAPRule()); } 
	 EOF 
;

// Rule MACRO_VALUE_CAP
ruleMACRO_VALUE_CAP
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMACRO_VALUE_CAPAccess().getAlternatives()); }
(rule__MACRO_VALUE_CAP__Alternatives)
{ after(grammarAccess.getMACRO_VALUE_CAPAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_TYPE
entryRuleASN1_TYPE 
:
{ before(grammarAccess.getASN1_TYPERule()); }
	 ruleASN1_TYPE
{ after(grammarAccess.getASN1_TYPERule()); } 
	 EOF 
;

// Rule ASN1_TYPE
ruleASN1_TYPE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_TYPEAccess().getAlternatives()); }
(rule__ASN1_TYPE__Alternatives)
{ after(grammarAccess.getASN1_TYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_SIMPLE
entryRuleASN1_SIMPLE 
:
{ before(grammarAccess.getASN1_SIMPLERule()); }
	 ruleASN1_SIMPLE
{ after(grammarAccess.getASN1_SIMPLERule()); } 
	 EOF 
;

// Rule ASN1_SIMPLE
ruleASN1_SIMPLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getAlternatives()); }
(rule__ASN1_SIMPLE__Alternatives)
{ after(grammarAccess.getASN1_SIMPLEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_OCTET_STRING
entryRuleASN1_OCTET_STRING 
:
{ before(grammarAccess.getASN1_OCTET_STRINGRule()); }
	 ruleASN1_OCTET_STRING
{ after(grammarAccess.getASN1_OCTET_STRINGRule()); } 
	 EOF 
;

// Rule ASN1_OCTET_STRING
ruleASN1_OCTET_STRING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getGroup()); }
(rule__ASN1_OCTET_STRING__Group__0)
{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_INTEGER
entryRuleASN1_INTEGER 
:
{ before(grammarAccess.getASN1_INTEGERRule()); }
	 ruleASN1_INTEGER
{ after(grammarAccess.getASN1_INTEGERRule()); } 
	 EOF 
;

// Rule ASN1_INTEGER
ruleASN1_INTEGER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getGroup()); }
(rule__ASN1_INTEGER__Group__0)
{ after(grammarAccess.getASN1_INTEGERAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_SUBTYPE
entryRuleASN1_SUBTYPE 
:
{ before(grammarAccess.getASN1_SUBTYPERule()); }
	 ruleASN1_SUBTYPE
{ after(grammarAccess.getASN1_SUBTYPERule()); } 
	 EOF 
;

// Rule ASN1_SUBTYPE
ruleASN1_SUBTYPE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getGroup()); }
(rule__ASN1_SUBTYPE__Group__0)
{ after(grammarAccess.getASN1_SUBTYPEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_RANGE
entryRuleASN1_RANGE 
:
{ before(grammarAccess.getASN1_RANGERule()); }
	 ruleASN1_RANGE
{ after(grammarAccess.getASN1_RANGERule()); } 
	 EOF 
;

// Rule ASN1_RANGE
ruleASN1_RANGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_RANGEAccess().getAlternatives()); }
(rule__ASN1_RANGE__Alternatives)
{ after(grammarAccess.getASN1_RANGEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleASN1_CHOICE
entryRuleASN1_CHOICE 
:
{ before(grammarAccess.getASN1_CHOICERule()); }
	 ruleASN1_CHOICE
{ after(grammarAccess.getASN1_CHOICERule()); } 
	 EOF 
;

// Rule ASN1_CHOICE
ruleASN1_CHOICE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getGroup()); }
(rule__ASN1_CHOICE__Group__0)
{ after(grammarAccess.getASN1_CHOICEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_CHOICE_ENTRY
entryRuleASN1_CHOICE_ENTRY 
:
{ before(grammarAccess.getASN1_CHOICE_ENTRYRule()); }
	 ruleASN1_CHOICE_ENTRY
{ after(grammarAccess.getASN1_CHOICE_ENTRYRule()); } 
	 EOF 
;

// Rule ASN1_CHOICE_ENTRY
ruleASN1_CHOICE_ENTRY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getGroup()); }
(rule__ASN1_CHOICE_ENTRY__Group__0)
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoiceType
entryRuleChoiceType 
:
{ before(grammarAccess.getChoiceTypeRule()); }
	 ruleChoiceType
{ after(grammarAccess.getChoiceTypeRule()); } 
	 EOF 
;

// Rule ChoiceType
ruleChoiceType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoiceTypeAccess().getAlternatives()); }
(rule__ChoiceType__Alternatives)
{ after(grammarAccess.getChoiceTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Module__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIdentifiersAssignment_5_0()); }
(rule__Module__IdentifiersAssignment_5_0)
{ after(grammarAccess.getModuleAccess().getIdentifiersAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getTypesAssignment_5_1()); }
(rule__Module__TypesAssignment_5_1)
{ after(grammarAccess.getModuleAccess().getTypesAssignment_5_1()); }
)

    |(
{ before(grammarAccess.getModuleAccess().getMacrosAssignment_5_2()); }
(rule__Module__MacrosAssignment_5_2)
{ after(grammarAccess.getModuleAccess().getMacrosAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getNameAssignment_0_0()); }
(rule__ObjectIdentifierValue__NameAssignment_0_0)
{ after(grammarAccess.getObjectIdentifierValueAccess().getNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceAssignment_0_1()); }
(rule__ObjectIdentifierValue__DescriptorReferenceAssignment_0_1)
{ after(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssignment__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAssignmentAccess().getParamAssignmentParserRuleCall_1_0()); }
	ruleParamAssignment
{ after(grammarAccess.getTypeAssignmentAccess().getParamAssignmentParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getTypeAssignmentAccess().getTypeReferenceParserRuleCall_1_1()); }
	ruleTypeReference
{ after(grammarAccess.getTypeAssignmentAccess().getTypeReferenceParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getTypeAssignmentAccess().getMacroValueParserRuleCall_1_2()); }
	ruleMacroValue
{ after(grammarAccess.getTypeAssignmentAccess().getMacroValueParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotationRight__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNotationRightAccess().getTypeReferenceParserRuleCall_0()); }
	ruleTypeReference
{ after(grammarAccess.getTypeNotationRightAccess().getTypeReferenceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeNotationRightAccess().getValueAssignment_1()); }
(rule__TypeNotationRight__ValueAssignment_1)
{ after(grammarAccess.getTypeNotationRightAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getParamAssignment_0()); }
(rule__ValueType__ParamAssignment_0)
{ after(grammarAccess.getValueTypeAccess().getParamAssignment_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getTypesAssignment_1()); }
(rule__ValueType__TypesAssignment_1)
{ after(grammarAccess.getValueTypeAccess().getTypesAssignment_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getSimpleTypeAssignment_2()); }
(rule__ValueType__SimpleTypeAssignment_2)
{ after(grammarAccess.getValueTypeAccess().getSimpleTypeAssignment_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getMacroValueAssignment_3()); }
(rule__ValueType__MacroValueAssignment_3)
{ after(grammarAccess.getValueTypeAccess().getMacroValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getOiAssignment_4()); }
(rule__ValueType__OiAssignment_4)
{ after(grammarAccess.getValueTypeAccess().getOiAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_TYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getUpdateAssignment_0()); }
(rule__MACRO_VALUE_TYPE__UpdateAssignment_0)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getUpdateAssignment_0()); }
)

    |(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getGroup_1()); }
(rule__MACRO_VALUE_TYPE__Group_1__0)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getStringAssignment_2()); }
(rule__MACRO_VALUE_TYPE__StringAssignment_2)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getStringAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_CAP__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_CAPAccess().getGroup_0()); }
(rule__MACRO_VALUE_CAP__Group_0__0)
{ after(grammarAccess.getMACRO_VALUE_CAPAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getMACRO_VALUE_CAPAccess().getRefAssignment_1()); }
(rule__MACRO_VALUE_CAP__RefAssignment_1)
{ after(grammarAccess.getMACRO_VALUE_CAPAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_TYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_TYPEAccess().getASN1_SIMPLEParserRuleCall_0()); }
	ruleASN1_SIMPLE
{ after(grammarAccess.getASN1_TYPEAccess().getASN1_SIMPLEParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getASN1_TYPEAccess().getASN1_CHOICEParserRuleCall_1()); }
	ruleASN1_CHOICE
{ after(grammarAccess.getASN1_TYPEAccess().getASN1_CHOICEParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getGroup_0()); }
(rule__ASN1_SIMPLE__Group_0__0)
{ after(grammarAccess.getASN1_SIMPLEAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getASN1_SIMPLEAccess().getGroup_1()); }
(rule__ASN1_SIMPLE__Group_1__0)
{ after(grammarAccess.getASN1_SIMPLEAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getASN1_SIMPLEAccess().getGroup_2()); }
(rule__ASN1_SIMPLE__Group_2__0)
{ after(grammarAccess.getASN1_SIMPLEAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getASN1_SIMPLEAccess().getASN1_INTEGERParserRuleCall_3()); }
	ruleASN1_INTEGER
{ after(grammarAccess.getASN1_SIMPLEAccess().getASN1_INTEGERParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getGroup_0()); }
(rule__ASN1_RANGE__Group_0__0)
{ after(grammarAccess.getASN1_RANGEAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getASN1_RANGEAccess().getGroup_1()); }
(rule__ASN1_RANGE__Group_1__0)
{ after(grammarAccess.getASN1_RANGEAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceTypeAccess().getTypeRefAssignment_0()); }
(rule__ChoiceType__TypeRefAssignment_0)
{ after(grammarAccess.getChoiceTypeAccess().getTypeRefAssignment_0()); }
)

    |(
{ before(grammarAccess.getChoiceTypeAccess().getSimpleTypeAssignment_1()); }
(rule__ChoiceType__SimpleTypeAssignment_1)
{ after(grammarAccess.getChoiceTypeAccess().getSimpleTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getChoiceTypeAccess().getOiAssignment_2()); }
(rule__ChoiceType__OiAssignment_2)
{ after(grammarAccess.getChoiceTypeAccess().getOiAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_0()); }
(rule__Module__NameAssignment_0)
{ after(grammarAccess.getModuleAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getDEFINITIONSKeyword_1()); }

	'DEFINITIONS' 

{ after(grammarAccess.getModuleAccess().getDEFINITIONSKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getColonColonEqualsSignKeyword_2()); }

	'::=' 

{ after(grammarAccess.getModuleAccess().getColonColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getBEGINKeyword_3()); }

	'BEGIN' 

{ after(grammarAccess.getModuleAccess().getBEGINKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNEWLINETerminalRuleCall_4()); }
	RULE_NEWLINE
{ after(grammarAccess.getModuleAccess().getNEWLINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__5__Impl
	rule__Module__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getModuleAccess().getAlternatives_5()); }
(rule__Module__Alternatives_5)
{ after(grammarAccess.getModuleAccess().getAlternatives_5()); }
)
(
{ before(grammarAccess.getModuleAccess().getAlternatives_5()); }
(rule__Module__Alternatives_5)*
{ after(grammarAccess.getModuleAccess().getAlternatives_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__6__Impl
	rule__Module__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNEWLINETerminalRuleCall_6()); }
	RULE_NEWLINE
{ after(grammarAccess.getModuleAccess().getNEWLINETerminalRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__7__Impl
	rule__Module__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getENDKeyword_7()); }

	'END' 

{ after(grammarAccess.getModuleAccess().getENDKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNEWLINETerminalRuleCall_8()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getModuleAccess().getNEWLINETerminalRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__ObjectIdentifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__0__Impl
	rule__ObjectIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getObjectIdentifierAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getObjectIdentifierAccess().getNEWLINETerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getObjectIdentifierAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getObjectIdentifierAccess().getNEWLINETerminalRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__1__Impl
	rule__ObjectIdentifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getNameAssignment_1()); }
(rule__ObjectIdentifier__NameAssignment_1)
{ after(grammarAccess.getObjectIdentifierAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__2__Impl
	rule__ObjectIdentifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getOBJECTIDENTIFIERKeyword_2()); }

	'OBJECT IDENTIFIER' 

{ after(grammarAccess.getObjectIdentifierAccess().getOBJECTIDENTIFIERKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__3__Impl
	rule__ObjectIdentifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getColonColonEqualsSignKeyword_3()); }

	'::=' 

{ after(grammarAccess.getObjectIdentifierAccess().getColonColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__4__Impl
	rule__ObjectIdentifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getObjectIdentifierAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__5__Impl
	rule__ObjectIdentifier__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getOidValueAssignment_5()); }
(rule__ObjectIdentifier__OidValueAssignment_5)
{ after(grammarAccess.getObjectIdentifierAccess().getOidValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getObjectIdentifierAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ObjectIdentifierValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifierValue__Group__0__Impl
	rule__ObjectIdentifierValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getAlternatives_0()); }
(rule__ObjectIdentifierValue__Alternatives_0)?
{ after(grammarAccess.getObjectIdentifierValueAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifierValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifierValue__Group__1__Impl
	rule__ObjectIdentifierValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_1()); }
(rule__ObjectIdentifierValue__SubIdsAssignment_1)
{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifierValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifierValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_2()); }
(rule__ObjectIdentifierValue__SubIdsAssignment_2)*
{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDefinition__Group__0__Impl
	rule__TypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTypeDefinitionAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getTypeDefinitionAccess().getNEWLINETerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getTypeDefinitionAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getTypeDefinitionAccess().getNEWLINETerminalRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDefinition__Group__1__Impl
	rule__TypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefinitionAccess().getNameAssignment_1()); }
(rule__TypeDefinition__NameAssignment_1)
{ after(grammarAccess.getTypeDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDefinition__Group__2__Impl
	rule__TypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefinitionAccess().getColonColonEqualsSignKeyword_2()); }

	'::=' 

{ after(grammarAccess.getTypeDefinitionAccess().getColonColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTypeDefinitionAccess().getValuesAssignment_3()); }
(rule__TypeDefinition__ValuesAssignment_3)
{ after(grammarAccess.getTypeDefinitionAccess().getValuesAssignment_3()); }
)
(
{ before(grammarAccess.getTypeDefinitionAccess().getValuesAssignment_3()); }
(rule__TypeDefinition__ValuesAssignment_3)*
{ after(grammarAccess.getTypeDefinitionAccess().getValuesAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Macro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__0__Impl
	rule__Macro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__1__Impl
	rule__Macro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getNameAssignment_1()); }
(rule__Macro__NameAssignment_1)
{ after(grammarAccess.getMacroAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__2__Impl
	rule__Macro__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getMACROKeyword_2()); }

	'MACRO' 

{ after(grammarAccess.getMacroAccess().getMACROKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__3__Impl
	rule__Macro__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getColonColonEqualsSignKeyword_3()); }

	'::=' 

{ after(grammarAccess.getMacroAccess().getColonColonEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__4__Impl
	rule__Macro__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_4()); }
	RULE_NEWLINE
{ after(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__5__Impl
	rule__Macro__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getBEGINKeyword_5()); }

	'BEGIN' 

{ after(grammarAccess.getMacroAccess().getBEGINKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__6__Impl
	rule__Macro__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getTypeNotationAssignment_6()); }
(rule__Macro__TypeNotationAssignment_6)
{ after(grammarAccess.getMacroAccess().getTypeNotationAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__7__Impl
	rule__Macro__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getValueNotationAssignment_7()); }
(rule__Macro__ValueNotationAssignment_7)
{ after(grammarAccess.getMacroAccess().getValueNotationAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__8__Impl
	rule__Macro__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
(rule__Macro__InnerTypesAssignment_8)
{ after(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
)
(
{ before(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
(rule__Macro__InnerTypesAssignment_8)*
{ after(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__9__Impl
	rule__Macro__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_9()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_9()); }
)
(
{ before(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_9()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getMacroAccess().getNEWLINETerminalRuleCall_9()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getENDKeyword_10()); }

	'END' 

{ after(grammarAccess.getMacroAccess().getENDKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__TypeNotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNotation__Group__0__Impl
	rule__TypeNotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTypeNotationAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getTypeNotationAccess().getNEWLINETerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getTypeNotationAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getTypeNotationAccess().getNEWLINETerminalRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNotation__Group__1__Impl
	rule__TypeNotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNotationAccess().getNameAssignment_1()); }
(rule__TypeNotation__NameAssignment_1)
{ after(grammarAccess.getTypeNotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNotation__Group__2__Impl
	rule__TypeNotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNotationAccess().getColonColonEqualsSignKeyword_2()); }

	'::=' 

{ after(grammarAccess.getTypeNotationAccess().getColonColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeNotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeNotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTypeNotationAccess().getTypeNotationsAssignment_3()); }
(rule__TypeNotation__TypeNotationsAssignment_3)
{ after(grammarAccess.getTypeNotationAccess().getTypeNotationsAssignment_3()); }
)
(
{ before(grammarAccess.getTypeNotationAccess().getTypeNotationsAssignment_3()); }
(rule__TypeNotation__TypeNotationsAssignment_3)*
{ after(grammarAccess.getTypeNotationAccess().getTypeNotationsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ValueNotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNotation__Group__0__Impl
	rule__ValueNotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getValueNotationAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getValueNotationAccess().getNEWLINETerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getValueNotationAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getValueNotationAccess().getNEWLINETerminalRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueNotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNotation__Group__1__Impl
	rule__ValueNotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNotationAccess().getNameAssignment_1()); }
(rule__ValueNotation__NameAssignment_1)
{ after(grammarAccess.getValueNotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueNotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNotation__Group__2__Impl
	rule__ValueNotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNotationAccess().getColonColonEqualsSignKeyword_2()); }

	'::=' 

{ after(grammarAccess.getValueNotationAccess().getColonColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueNotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNotation__Group__3__Impl
	rule__ValueNotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNotationAccess().getNEWLINETerminalRuleCall_3()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getValueNotationAccess().getNEWLINETerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueNotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueNotation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNotationAccess().getValueNotationAssignment_4()); }
(rule__ValueNotation__ValueNotationAssignment_4)
{ after(grammarAccess.getValueNotationAccess().getValueNotationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TypeAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAssignment__Group__0__Impl
	rule__TypeAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTypeAssignmentAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getTypeAssignmentAccess().getNEWLINETerminalRuleCall_0()); }
)
(
{ before(grammarAccess.getTypeAssignmentAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getTypeAssignmentAccess().getNEWLINETerminalRuleCall_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeAssignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAssignmentAccess().getAlternatives_1()); }
(rule__TypeAssignment__Alternatives_1)
{ after(grammarAccess.getTypeAssignmentAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParamAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group__0__Impl
	rule__ParamAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getParamAssignment_0()); }
(rule__ParamAssignment__ParamAssignment_0)
{ after(grammarAccess.getParamAssignmentAccess().getParamAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParamAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParamAssignment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getRightAssignment_1()); }
(rule__ParamAssignment__RightAssignment_1)
{ after(grammarAccess.getParamAssignmentAccess().getRightAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeReferenceExt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReferenceExt__Group__0__Impl
	rule__TypeReferenceExt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceExt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceExtAccess().getParentRefAssignment_0()); }
(rule__TypeReferenceExt__ParentRefAssignment_0)
{ after(grammarAccess.getTypeReferenceExtAccess().getParentRefAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReferenceExt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReferenceExt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceExt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceExtAccess().getChildRefAssignment_1()); }
(rule__TypeReferenceExt__ChildRefAssignment_1)?
{ after(grammarAccess.getTypeReferenceExtAccess().getChildRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTagAssignment_0()); }
(rule__Value__TagAssignment_0)?
{ after(grammarAccess.getValueAccess().getTagAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__1__Impl
	rule__Value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNEWLINETerminalRuleCall_1()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getValueAccess().getNEWLINETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__2__Impl
	rule__Value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getImplicitAssignment_2()); }
(rule__Value__ImplicitAssignment_2)?
{ after(grammarAccess.getValueAccess().getImplicitAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__3__Impl
	rule__Value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueTypesAssignment_3()); }
(rule__Value__ValueTypesAssignment_3)
{ after(grammarAccess.getValueAccess().getValueTypesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getGroup_4()); }
(rule__Value__Group_4__0)*
{ after(grammarAccess.getValueAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Value__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_4__0__Impl
	rule__Value__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNEWLINETerminalRuleCall_4_0()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getValueAccess().getNEWLINETerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_4__1__Impl
	rule__Value__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getVerticalLineKeyword_4_1()); }

	'|' 

{ after(grammarAccess.getValueAccess().getVerticalLineKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueTypesAssignment_4_2()); }
(rule__Value__ValueTypesAssignment_4_2)
{ after(grammarAccess.getValueAccess().getValueTypesAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Tag__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag__Group__0__Impl
	rule__Tag__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getNEWLINETerminalRuleCall_0()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getTagAccess().getNEWLINETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag__Group__1__Impl
	rule__Tag__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getAPPLICATIONKeyword_1()); }

	'[APPLICATION' 

{ after(grammarAccess.getTagAccess().getAPPLICATIONKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag__Group__2__Impl
	rule__Tag__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getTagValueAssignment_2()); }
(rule__Tag__TagValueAssignment_2)
{ after(grammarAccess.getTagAccess().getTagValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tag__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tag__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getTagAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MacroValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__0__Impl
	rule__MacroValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getMacroValueAction_0()); }
(

)
{ after(grammarAccess.getMacroValueAccess().getMacroValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__1__Impl
	rule__MacroValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getValueKeyword_1()); }

	'value' 

{ after(grammarAccess.getMacroValueAccess().getValueKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__2__Impl
	rule__MacroValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getMacroValueAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__3__Impl
	rule__MacroValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getValueTypeAssignment_3()); }
(rule__MacroValue__ValueTypeAssignment_3)
{ after(grammarAccess.getMacroValueAccess().getValueTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMacroValueAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MACRO_VALUE_TYPE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MACRO_VALUE_TYPE__Group_1__0__Impl
	rule__MACRO_VALUE_TYPE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_TYPE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getVALUEKeyword_1_0()); }

	'VALUE' 

{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getVALUEKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MACRO_VALUE_TYPE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MACRO_VALUE_TYPE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_TYPE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getLiteralAssignment_1_1()); }
(rule__MACRO_VALUE_TYPE__LiteralAssignment_1_1)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getLiteralAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UpdateType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateType__Group__0__Impl
	rule__UpdateType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateTypeAccess().getUpdateKeyword_0()); }

	'Update' 

{ after(grammarAccess.getUpdateTypeAccess().getUpdateKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UpdateType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UpdateType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateTypeAccess().getRefAssignment_1()); }
(rule__UpdateType__RefAssignment_1)
{ after(grammarAccess.getUpdateTypeAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MACRO_VALUE_CAP__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MACRO_VALUE_CAP__Group_0__0__Impl
	rule__MACRO_VALUE_CAP__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_CAP__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_CAPAccess().getMACRO_VALUE_CAPAction_0_0()); }
(

)
{ after(grammarAccess.getMACRO_VALUE_CAPAccess().getMACRO_VALUE_CAPAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MACRO_VALUE_CAP__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MACRO_VALUE_CAP__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_CAP__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_CAPAccess().getOBJECTIDENTIFIERKeyword_0_1()); }

	'OBJECT IDENTIFIER' 

{ after(grammarAccess.getMACRO_VALUE_CAPAccess().getOBJECTIDENTIFIERKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_SIMPLE__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_0__0__Impl
	rule__ASN1_SIMPLE__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getASN1_SIMPLEAction_0_0()); }
(

)
{ after(grammarAccess.getASN1_SIMPLEAccess().getASN1_SIMPLEAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SIMPLE__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getEmptyKeyword_0_1()); }

	'empty' 

{ after(grammarAccess.getASN1_SIMPLEAccess().getEmptyKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_SIMPLE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_1__0__Impl
	rule__ASN1_SIMPLE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getASN1_SIMPLEAction_1_0()); }
(

)
{ after(grammarAccess.getASN1_SIMPLEAccess().getASN1_SIMPLEAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SIMPLE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getIA5STRINGTerminalRuleCall_1_1()); }
	RULE_IA5STRING
{ after(grammarAccess.getASN1_SIMPLEAccess().getIA5STRINGTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_SIMPLE__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_2__0__Impl
	rule__ASN1_SIMPLE__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getASN1_OCTET_STRINGParserRuleCall_2_0()); }
	ruleASN1_OCTET_STRING
{ after(grammarAccess.getASN1_SIMPLEAccess().getASN1_OCTET_STRINGParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SIMPLE__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getConstraintAssignment_2_1()); }
(rule__ASN1_SIMPLE__ConstraintAssignment_2_1)?
{ after(grammarAccess.getASN1_SIMPLEAccess().getConstraintAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_OCTET_STRING__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_OCTET_STRING__Group__0__Impl
	rule__ASN1_OCTET_STRING__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_OCTET_STRING__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getASN1_OCTET_STRINGAction_0()); }
(

)
{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getASN1_OCTET_STRINGAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_OCTET_STRING__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_OCTET_STRING__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_OCTET_STRING__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getNameAssignment_1()); }
(rule__ASN1_OCTET_STRING__NameAssignment_1)
{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_INTEGER__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group__0__Impl
	rule__ASN1_INTEGER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getNameAssignment_0()); }
(rule__ASN1_INTEGER__NameAssignment_0)
{ after(grammarAccess.getASN1_INTEGERAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_INTEGER__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getGroup_1()); }
(rule__ASN1_INTEGER__Group_1__0)?
{ after(grammarAccess.getASN1_INTEGERAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_INTEGER__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group_1__0__Impl
	rule__ASN1_INTEGER__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getASN1_INTEGERAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_INTEGER__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group_1__1__Impl
	rule__ASN1_INTEGER__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getRangeAssignment_1_1()); }
(rule__ASN1_INTEGER__RangeAssignment_1_1)
{ after(grammarAccess.getASN1_INTEGERAccess().getRangeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_INTEGER__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getASN1_INTEGERAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ASN1_SUBTYPE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group__0__Impl
	rule__ASN1_SUBTYPE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getASN1_SUBTYPEAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group__1__Impl
	rule__ASN1_SUBTYPE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getSIZEKeyword_1()); }

	'SIZE' 

{ after(grammarAccess.getASN1_SUBTYPEAccess().getSIZEKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group__2__Impl
	rule__ASN1_SUBTYPE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getASN1_SUBTYPEAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group__3__Impl
	rule__ASN1_SUBTYPE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRangesAssignment_3()); }
(rule__ASN1_SUBTYPE__RangesAssignment_3)
{ after(grammarAccess.getASN1_SUBTYPEAccess().getRangesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group__4__Impl
	rule__ASN1_SUBTYPE__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getGroup_4()); }
(rule__ASN1_SUBTYPE__Group_4__0)*
{ after(grammarAccess.getASN1_SUBTYPEAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group__5__Impl
	rule__ASN1_SUBTYPE__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getASN1_SUBTYPEAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getASN1_SUBTYPEAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ASN1_SUBTYPE__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group_4__0__Impl
	rule__ASN1_SUBTYPE__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getVerticalLineKeyword_4_0()); }

	'|' 

{ after(grammarAccess.getASN1_SUBTYPEAccess().getVerticalLineKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRangesAssignment_4_1()); }
(rule__ASN1_SUBTYPE__RangesAssignment_4_1)
{ after(grammarAccess.getASN1_SUBTYPEAccess().getRangesAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_RANGE__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_0__0__Impl
	rule__ASN1_RANGE__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getASN1_RANGEAction_0_0()); }
(

)
{ after(grammarAccess.getASN1_RANGEAccess().getASN1_RANGEAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getValueAssignment_0_1()); }
(rule__ASN1_RANGE__ValueAssignment_0_1)
{ after(grammarAccess.getASN1_RANGEAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_RANGE__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_1__0__Impl
	rule__ASN1_RANGE__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getStartAssignment_1_0()); }
(rule__ASN1_RANGE__StartAssignment_1_0)
{ after(grammarAccess.getASN1_RANGEAccess().getStartAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_1__1__Impl
	rule__ASN1_RANGE__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getFullStopFullStopKeyword_1_1()); }

	'..' 

{ after(grammarAccess.getASN1_RANGEAccess().getFullStopFullStopKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getEndAssignment_1_2()); }
(rule__ASN1_RANGE__EndAssignment_1_2)
{ after(grammarAccess.getASN1_RANGEAccess().getEndAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ASN1_CHOICE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__0__Impl
	rule__ASN1_CHOICE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getCHOICEKeyword_0()); }

	'CHOICE' 

{ after(grammarAccess.getASN1_CHOICEAccess().getCHOICEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__1__Impl
	rule__ASN1_CHOICE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getASN1_CHOICEAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__2__Impl
	rule__ASN1_CHOICE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_2()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_2()); }
)
(
{ before(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_2()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__3__Impl
	rule__ASN1_CHOICE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeAssignment_3()); }
(rule__ASN1_CHOICE__ChoiceTypeAssignment_3)
{ after(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__4__Impl
	rule__ASN1_CHOICE__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getGroup_4()); }
(rule__ASN1_CHOICE__Group_4__0)*
{ after(grammarAccess.getASN1_CHOICEAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__5__Impl
	rule__ASN1_CHOICE__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_5()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_5()); }
)
(
{ before(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_5()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getASN1_CHOICEAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ASN1_CHOICE__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group_4__0__Impl
	rule__ASN1_CHOICE__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getASN1_CHOICEAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group_4__1__Impl
	rule__ASN1_CHOICE__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_4_1()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_4_1()); }
)
(
{ before(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_4_1()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getASN1_CHOICEAccess().getNEWLINETerminalRuleCall_4_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeAssignment_4_2()); }
(rule__ASN1_CHOICE__ChoiceTypeAssignment_4_2)
{ after(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ASN1_CHOICE_ENTRY__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE_ENTRY__Group__0__Impl
	rule__ASN1_CHOICE_ENTRY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdAssignment_0()); }
(rule__ASN1_CHOICE_ENTRY__IdAssignment_0)
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE_ENTRY__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE_ENTRY__Group__1__Impl
	rule__ASN1_CHOICE_ENTRY__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getNEWLINETerminalRuleCall_1()); }
(	RULE_NEWLINE)?
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getNEWLINETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE_ENTRY__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE_ENTRY__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeAssignment_2()); }
(rule__ASN1_CHOICE_ENTRY__ValueTypeAssignment_2)
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Module__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameMODULE_IDTerminalRuleCall_0_0()); }
	RULE_MODULE_ID{ after(grammarAccess.getModuleAccess().getNameMODULE_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__IdentifiersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIdentifiersObjectIdentifierParserRuleCall_5_0_0()); }
	ruleObjectIdentifier{ after(grammarAccess.getModuleAccess().getIdentifiersObjectIdentifierParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__TypesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getTypesTypeDefinitionParserRuleCall_5_1_0()); }
	ruleTypeDefinition{ after(grammarAccess.getModuleAccess().getTypesTypeDefinitionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__MacrosAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getMacrosMacroParserRuleCall_5_2_0()); }
	ruleMacro{ after(grammarAccess.getModuleAccess().getMacrosMacroParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getNameASN1_IDTerminalRuleCall_1_0()); }
	RULE_ASN1_ID{ after(grammarAccess.getObjectIdentifierAccess().getNameASN1_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__OidValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getOidValueObjectIdentifierValueParserRuleCall_5_0()); }
	ruleObjectIdentifierValue{ after(grammarAccess.getObjectIdentifierAccess().getOidValueObjectIdentifierValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getNameASN1_IDTerminalRuleCall_0_0_0()); }
	RULE_ASN1_ID{ after(grammarAccess.getObjectIdentifierValueAccess().getNameASN1_IDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__DescriptorReferenceAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierCrossReference_0_1_0()); }
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierASN1_IDTerminalRuleCall_0_1_0_1()); }
	RULE_ASN1_ID{ after(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierASN1_IDTerminalRuleCall_0_1_0_1()); }
)
{ after(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierCrossReference_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__SubIdsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsBIG_INTEGERTerminalRuleCall_1_0()); }
	RULE_BIG_INTEGER{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsBIG_INTEGERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__SubIdsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsBIG_INTEGERTerminalRuleCall_2_0()); }
	RULE_BIG_INTEGER{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsBIG_INTEGERTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefinitionAccess().getNameMODULE_IDTerminalRuleCall_1_0()); }
	RULE_MODULE_ID{ after(grammarAccess.getTypeDefinitionAccess().getNameMODULE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__ValuesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefinitionAccess().getValuesValueParserRuleCall_3_0()); }
	ruleValue{ after(grammarAccess.getTypeDefinitionAccess().getValuesValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getNameMODULE_IDTerminalRuleCall_1_0()); }
	RULE_MODULE_ID{ after(grammarAccess.getMacroAccess().getNameMODULE_IDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__TypeNotationAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getTypeNotationTypeNotationParserRuleCall_6_0()); }
	ruleTypeNotation{ after(grammarAccess.getMacroAccess().getTypeNotationTypeNotationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__ValueNotationAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getValueNotationValueNotationParserRuleCall_7_0()); }
	ruleValueNotation{ after(grammarAccess.getMacroAccess().getValueNotationValueNotationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__InnerTypesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getInnerTypesTypeDefinitionParserRuleCall_8_0()); }
	ruleTypeDefinition{ after(grammarAccess.getMacroAccess().getInnerTypesTypeDefinitionParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNotationAccess().getNameTYPENOTATIONKeyword_1_0()); }
(
{ before(grammarAccess.getTypeNotationAccess().getNameTYPENOTATIONKeyword_1_0()); }

	'TYPE NOTATION' 

{ after(grammarAccess.getTypeNotationAccess().getNameTYPENOTATIONKeyword_1_0()); }
)

{ after(grammarAccess.getTypeNotationAccess().getNameTYPENOTATIONKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotation__TypeNotationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNotationAccess().getTypeNotationsTypeAssignmentParserRuleCall_3_0()); }
	ruleTypeAssignment{ after(grammarAccess.getTypeNotationAccess().getTypeNotationsTypeAssignmentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNotationAccess().getNameVALUENOTATIONKeyword_1_0()); }
(
{ before(grammarAccess.getValueNotationAccess().getNameVALUENOTATIONKeyword_1_0()); }

	'VALUE NOTATION' 

{ after(grammarAccess.getValueNotationAccess().getNameVALUENOTATIONKeyword_1_0()); }
)

{ after(grammarAccess.getValueNotationAccess().getNameVALUENOTATIONKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueNotation__ValueNotationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueNotationAccess().getValueNotationMacroValueParserRuleCall_4_0()); }
	ruleMacroValue{ after(grammarAccess.getValueNotationAccess().getValueNotationMacroValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__ParamAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getParamPARAMETERTerminalRuleCall_0_0()); }
	RULE_PARAMETER{ after(grammarAccess.getParamAssignmentAccess().getParamPARAMETERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParamAssignment__RightAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParamAssignmentAccess().getRightTypeNotationRightParserRuleCall_1_0()); }
	ruleTypeNotationRight{ after(grammarAccess.getParamAssignmentAccess().getRightTypeNotationRightParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeNotationRight__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeNotationRightAccess().getValueMacroValueParserRuleCall_1_0()); }
	ruleMacroValue{ after(grammarAccess.getTypeNotationRightAccess().getValueMacroValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceExt__ParentRefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceExtAccess().getParentRefTypeReferenceParserRuleCall_0_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeReferenceExtAccess().getParentRefTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceExt__ChildRefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceExtAccess().getChildRefTypeReferenceParserRuleCall_1_0()); }
	ruleTypeReference{ after(grammarAccess.getTypeReferenceExtAccess().getChildRefTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReference__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeDefinitionCrossReference_0()); }
(
{ before(grammarAccess.getTypeReferenceAccess().getTypeTypeDefinitionMODULE_IDTerminalRuleCall_0_1()); }
	RULE_MODULE_ID{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeDefinitionMODULE_IDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getTypeReferenceAccess().getTypeTypeDefinitionCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__TagAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getTagTagParserRuleCall_0_0()); }
	ruleTag{ after(grammarAccess.getValueAccess().getTagTagParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ImplicitAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getImplicitIMPLICITKeyword_2_0()); }
(
{ before(grammarAccess.getValueAccess().getImplicitIMPLICITKeyword_2_0()); }

	'IMPLICIT' 

{ after(grammarAccess.getValueAccess().getImplicitIMPLICITKeyword_2_0()); }
)

{ after(grammarAccess.getValueAccess().getImplicitIMPLICITKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueTypesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueTypesValueTypeParserRuleCall_3_0()); }
	ruleValueType{ after(grammarAccess.getValueAccess().getValueTypesValueTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ValueTypesAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getValueTypesValueTypeParserRuleCall_4_2_0()); }
	ruleValueType{ after(grammarAccess.getValueAccess().getValueTypesValueTypeParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tag__TagValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAccess().getTagValueBIG_INTEGERTerminalRuleCall_2_0()); }
	RULE_BIG_INTEGER{ after(grammarAccess.getTagAccess().getTagValueBIG_INTEGERTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__ParamAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getParamParamAssignmentParserRuleCall_0_0()); }
	ruleParamAssignment{ after(grammarAccess.getValueTypeAccess().getParamParamAssignmentParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__TypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getTypesTypeReferenceExtParserRuleCall_1_0()); }
	ruleTypeReferenceExt{ after(grammarAccess.getValueTypeAccess().getTypesTypeReferenceExtParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__SimpleTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getSimpleTypeASN1_TYPEParserRuleCall_2_0()); }
	ruleASN1_TYPE{ after(grammarAccess.getValueTypeAccess().getSimpleTypeASN1_TYPEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__MacroValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getMacroValueMacroValueParserRuleCall_3_0()); }
	ruleMacroValue{ after(grammarAccess.getValueTypeAccess().getMacroValueMacroValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__OiAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getOiOBJECTIDENTIFIERKeyword_4_0()); }
(
{ before(grammarAccess.getValueTypeAccess().getOiOBJECTIDENTIFIERKeyword_4_0()); }

	'OBJECT IDENTIFIER' 

{ after(grammarAccess.getValueTypeAccess().getOiOBJECTIDENTIFIERKeyword_4_0()); }
)

{ after(grammarAccess.getValueTypeAccess().getOiOBJECTIDENTIFIERKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__ValueTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getValueTypeMACRO_VALUE_TYPEParserRuleCall_3_0()); }
	ruleMACRO_VALUE_TYPE{ after(grammarAccess.getMacroValueAccess().getValueTypeMACRO_VALUE_TYPEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_TYPE__UpdateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getUpdateUpdateTypeParserRuleCall_0_0()); }
	ruleUpdateType{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getUpdateUpdateTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_TYPE__LiteralAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getLiteralMACRO_VALUE_CAPParserRuleCall_1_1_0()); }
	ruleMACRO_VALUE_CAP{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getLiteralMACRO_VALUE_CAPParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_TYPE__StringAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getStringIA5StringKeyword_2_0()); }
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getStringIA5StringKeyword_2_0()); }

	'IA5String' 

{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getStringIA5StringKeyword_2_0()); }
)

{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getStringIA5StringKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UpdateType__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUpdateTypeAccess().getRefTypeReferenceParserRuleCall_1_0()); }
	ruleTypeReference{ after(grammarAccess.getUpdateTypeAccess().getRefTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_CAP__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_CAPAccess().getRefTypeReferenceParserRuleCall_1_0()); }
	ruleTypeReference{ after(grammarAccess.getMACRO_VALUE_CAPAccess().getRefTypeReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__ConstraintAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getConstraintASN1_SUBTYPEParserRuleCall_2_1_0()); }
	ruleASN1_SUBTYPE{ after(grammarAccess.getASN1_SIMPLEAccess().getConstraintASN1_SUBTYPEParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_OCTET_STRING__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getNameOCTETSTRINGKeyword_1_0()); }
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getNameOCTETSTRINGKeyword_1_0()); }

	'OCTET STRING' 

{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getNameOCTETSTRINGKeyword_1_0()); }
)

{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getNameOCTETSTRINGKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getNameINTEGERKeyword_0_0()); }
(
{ before(grammarAccess.getASN1_INTEGERAccess().getNameINTEGERKeyword_0_0()); }

	'INTEGER' 

{ after(grammarAccess.getASN1_INTEGERAccess().getNameINTEGERKeyword_0_0()); }
)

{ after(grammarAccess.getASN1_INTEGERAccess().getNameINTEGERKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__RangeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getRangeASN1_RANGEParserRuleCall_1_1_0()); }
	ruleASN1_RANGE{ after(grammarAccess.getASN1_INTEGERAccess().getRangeASN1_RANGEParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__RangesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRangesASN1_RANGEParserRuleCall_3_0()); }
	ruleASN1_RANGE{ after(grammarAccess.getASN1_SUBTYPEAccess().getRangesASN1_RANGEParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__RangesAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRangesASN1_RANGEParserRuleCall_4_1_0()); }
	ruleASN1_RANGE{ after(grammarAccess.getASN1_SUBTYPEAccess().getRangesASN1_RANGEParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getValueBIG_INTEGERTerminalRuleCall_0_1_0()); }
	RULE_BIG_INTEGER{ after(grammarAccess.getASN1_RANGEAccess().getValueBIG_INTEGERTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__StartAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getStartBIG_INTEGERTerminalRuleCall_1_0_0()); }
	RULE_BIG_INTEGER{ after(grammarAccess.getASN1_RANGEAccess().getStartBIG_INTEGERTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__EndAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getEndBIG_INTEGERTerminalRuleCall_1_2_0()); }
	RULE_BIG_INTEGER{ after(grammarAccess.getASN1_RANGEAccess().getEndBIG_INTEGERTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__ChoiceTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeASN1_CHOICE_ENTRYParserRuleCall_3_0()); }
	ruleASN1_CHOICE_ENTRY{ after(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeASN1_CHOICE_ENTRYParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__ChoiceTypeAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeASN1_CHOICE_ENTRYParserRuleCall_4_2_0()); }
	ruleASN1_CHOICE_ENTRY{ after(grammarAccess.getASN1_CHOICEAccess().getChoiceTypeASN1_CHOICE_ENTRYParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdASN1_IDTerminalRuleCall_0_0()); }
	RULE_ASN1_ID{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdASN1_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__ValueTypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeChoiceTypeParserRuleCall_2_0()); }
	ruleChoiceType{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeChoiceTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceType__TypeRefAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceTypeAccess().getTypeRefTypeReferenceParserRuleCall_0_0()); }
	ruleTypeReference{ after(grammarAccess.getChoiceTypeAccess().getTypeRefTypeReferenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceType__SimpleTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceTypeAccess().getSimpleTypeASN1_TYPEParserRuleCall_1_0()); }
	ruleASN1_TYPE{ after(grammarAccess.getChoiceTypeAccess().getSimpleTypeASN1_TYPEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChoiceType__OiAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceTypeAccess().getOiOBJECTIDENTIFIERKeyword_2_0()); }
(
{ before(grammarAccess.getChoiceTypeAccess().getOiOBJECTIDENTIFIERKeyword_2_0()); }

	'OBJECT IDENTIFIER' 

{ after(grammarAccess.getChoiceTypeAccess().getOiOBJECTIDENTIFIERKeyword_2_0()); }
)

{ after(grammarAccess.getChoiceTypeAccess().getOiOBJECTIDENTIFIERKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_MODULE_ID : RULE_ALPHA_CAP (RULE_ALPHA|RULE_ALPHA_CAP|'-'|RULE_NUMERIC)* (RULE_ALPHA_CAP|RULE_ALPHA|RULE_NUMERIC);

RULE_ASN1_ID : RULE_ALPHA (RULE_ALPHA|RULE_ALPHA_CAP|'-'|RULE_NUMERIC)*;

RULE_PARAMETER : '"' RULE_MODULE_ID '"';

RULE_IA5STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

fragment RULE_ALPHA : 'a'..'z';

fragment RULE_ALPHA_CAP : 'A'..'Z';

fragment RULE_NUMERIC : '0'..'9';

RULE_BIG_INTEGER : '-'? ('0'..'9')+;

RULE_SL_ASN1_COMMENT : '--' ~(('\n'|'\r'))*;

RULE_WS : (' '|'\t')+;

RULE_NEWLINE : ('\r'?|'\n');

RULE_ANY_OTHER : .;


