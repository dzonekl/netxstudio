
Background
==========

NetXStudio is a so-called Eclipse-RCP application. It uses various features from the 
Eclipse community, each of these are described further below. Also NetXStudio defines
various plugins itself for the application. 

As Eclipse plugins have a standard structure, we don't describe it here, but it's recommended
to be familiar with the Eclipse plugins framework. 

The plugins defined in the application are the following: 

com.netxforge.planner.emf

This contains the model and the model source code generated by the code generator. 
/model => The model files. 
/src => The model code. 

com.netxforge.planner.emf.edit

This contains the generated edit code. This is mainly the Factory and providers for the UI. (So bridge from model to UI). 

com.netxforge.planner.emf.editor

This is the application code, without Diagram editing. It also contains
the calculation code and the code to talk to the database. 

com.netxforge.planner.emf.diagram

This is the application code for diagram editing

com.netxforge.planner.connect (Experimental). 

this plugin provides functionality for making HTTP calls to a REST full service. 

com.netxforge.planner.query (Experiemental)

Implements standard query calls using the OCL (Object Constrain Language). 

com.netxforge.planner.query.ocl (Experimental)

Implements a console which supports OCL, so the model can be queried with OCL statements. 

com.netxforge.hb

Contains the Hibernate libraries needed to persist an EMF model into an RDBMS.  
The following version and source are used: 
source: hibernate.org
lib:hibernate3.jar (Which includes various other jars, wso perhaps should be decomposed). 

org.antlrv3.runtime

Antlr is a compiler compiler. 
source: antlr.org
lib: antlr-3.1.2.jar


Requirements for the development environment:
---------------------------------------------

Required software:

- Java J2SEv5 or higher (java.com)
- NetXForge plugins and 3rd party libraries: (See above). 
- Standard Eclipse with Plugin and RCP development. Ganymede 3.4
- Subclipse (tigris.org) -> latest version (1.4) 
- EMF Core (Comes with some Eclipse distributions) http://www.eclipse.org/modeling/emf/
	- EMF Query 
	- EMF Transaction
	- EMF Validation
	- EMF Teneo (For persisting the model). 
- GMF http://www.eclipse.org/modeling/gmf/
- OCL http://www.eclipse.org/modeling/mdt/
- GEF, Draw2D http://www.eclipse.org/gef/

A database is also needed, if persistence is required. 
The settings for the database can be found here: 

/com.netxforge.planner.emf.editor/src/com/netxforge/planner/emf/persistence/HibernateFactory.java
The DB settings are hardcoded for MYSQL and a db named "icebreaker". Change to your liking.


Checking out netxforge plugins:
-------------------------------

Go to Window->Open Perspective->SVN Repositories
Right-click on the view and select New -> Repository location.

The URL is: 

http://[username]@svn.kualasoft.com/svn/icebreaker 
(The SVN username should be known). 

Then expand the location, the SVN repository will be opened and the netxforge plugins will be visible. 
Select all the plugins which are needed and right-clik and select: Checkout.... Follow the wizard with default
settings. the plugins will be checkout into your workspace.

Getting the eclipse plugins
---------------------------

In the list above a URL is provided, it's better to download an eclipse distribution which has EMF already
included so less needs to be added. The following distribution is recommended: 

http://www.eclipse.org/downloads/

Select: Eclipse for RCP/Plugin-Developers. (Includes GEF, EMF core but not EMF Transaction, validation and Query). 


A more productive way to get all the needed plugins is to download the plugins by hand 
and put them in the applications /dropins folder. 

In this way, the latest dependencies can be downloaded. (Also the ones not available through update sites). 








Getting started:
----------------

The model is a good point to start go to the model plugin and open the files ending .xsd and .ecore, these 
are respectively the XML schemas and the EMF representations of the models.

Original Model:

networkdata.xsd
networkplan.xsd
geodata.xsd

Converted to Ecore model:

networkdata.ecore
networkplan.ecore
geodata.ecore

Converted to a diagram

...idem ending on ecore_diagram

networkplan.genmodel => This is the generator model, needed to generate the EMF, edit and Editor model. 

Diagram models:

networkplan.gmfgraph => Graphical definitions
networkplan.gmftool => Graphical tool definitions
networkplan.gmfmap => Mapping of model, graph and tools. 
networkplan.gmfgen => This is the generated model, needed to generate the Diagram Editor. 



Launching the application:
--------------------------

1. The application can be launched from com.netxforge.planner.emf.diagram. 
There is a file named 

netxstudio.product

Open this file and select the "overview" tab. 
2. Here select "Launch an Application in Debug Mode", This will like render an error, but will create a launching configuration. 
3. Go to the menu Run -> Debug Configurations. Under Eclipse Application, you should see netxstudio.product, select it and choose the
"Plug-ins" tab on the right. Press "Deselect-all" and then "Add required-plugins". All required plugins should now be known to the launch config. 
4. Press "Debug" to launch the application.

Requirements for runtime:
------------------------

Not all features and plugins are needed at runtime, sofar the list of plugins in runtime are listed below, 
this list is however not correct, as the target config is not optimized. (Various plugins are not needed). 

(Note this configuration is for MacOSX - COCOA, for win32, linux etc.., see Eclipse RCP target deployment). 

<plugin id="com.ibm.icu"/>
<plugin id="com.netxforge.hb"/>
<plugin id="com.netxforge.planner.connect"/>
<plugin id="com.netxforge.planner.emf"/>
<plugin id="com.netxforge.planner.emf.diagram"/>
<plugin id="com.netxforge.planner.emf.edit"/>
<plugin id="com.netxforge.planner.emf.editor"/>
<plugin id="com.netxforge.planner.emf.query"/>
<plugin id="com.netxforge.planner.maps"/>
<plugin id="com.netxforge.planner.query.ocl"/>
<plugin id="net.sourceforge.lpg.lpgjavaruntime"/>
<plugin id="org.antlr.runtime"/>
<plugin id="org.apache.batik.bridge"/>
<plugin id="org.apache.batik.css"/>
<plugin id="org.apache.batik.dom"/>
<plugin id="org.apache.batik.dom.svg"/>
<plugin id="org.apache.batik.ext.awt"/>
<plugin id="org.apache.batik.parser"/>
<plugin id="org.apache.batik.pdf"/>
<plugin id="org.apache.batik.svggen"/>
<plugin id="org.apache.batik.transcoder"/>
<plugin id="org.apache.batik.util"/>
<plugin id="org.apache.batik.util.gui"/>
<plugin id="org.apache.batik.xml"/>
<plugin id="org.apache.commons.codec"/>
<plugin id="org.apache.commons.httpclient"/>
<plugin id="org.apache.commons.logging"/>
<plugin id="org.eclipse.core.commands"/>
<plugin id="org.eclipse.core.contenttype"/>
<plugin id="org.eclipse.core.databinding"/>
<plugin id="org.eclipse.core.databinding.beans"/>
<plugin id="org.eclipse.core.expressions"/>
<plugin id="org.eclipse.core.filebuffers"/>
<plugin id="org.eclipse.core.filesystem"/>
<plugin id="org.eclipse.core.filesystem.macosx" fragment="true"/>
<plugin id="org.eclipse.core.jobs"/>
<plugin id="org.eclipse.core.resources"/>
<plugin id="org.eclipse.core.resources.compatibility" fragment="true"/>
<plugin id="org.eclipse.core.runtime"/>
<plugin id="org.eclipse.core.runtime.compatibility.registry" fragment="true"/>
<plugin id="org.eclipse.core.variables"/>
<plugin id="org.eclipse.draw2d"/>
<plugin id="org.eclipse.ecf"/>
<plugin id="org.eclipse.ecf.filetransfer"/>
<plugin id="org.eclipse.ecf.identity"/>
<plugin id="org.eclipse.ecf.ssl" fragment="true"/>
<plugin id="org.eclipse.emf.common"/>
<plugin id="org.eclipse.emf.common.ui"/>
<plugin id="org.eclipse.emf.ecore"/>
<plugin id="org.eclipse.emf.ecore.change"/>
<plugin id="org.eclipse.emf.ecore.edit"/>
<plugin id="org.eclipse.emf.ecore.xmi"/>
<plugin id="org.eclipse.emf.edit"/>
<plugin id="org.eclipse.emf.edit.ui"/>
<plugin id="org.eclipse.emf.mapping.ecore2xml"/>
<plugin id="org.eclipse.emf.teneo"/>
<plugin id="org.eclipse.emf.teneo.annotations"/>
<plugin id="org.eclipse.emf.teneo.hibernate"/>
<plugin id="org.eclipse.emf.teneo.hibernate.mapper"/>
<plugin id="org.eclipse.emf.transaction"/>
<plugin id="org.eclipse.emf.validation"/>
<plugin id="org.eclipse.emf.workspace"/>
<plugin id="org.eclipse.equinox.app"/>
<plugin id="org.eclipse.equinox.common"/>
<plugin id="org.eclipse.equinox.p2.artifact.repository"/>
<plugin id="org.eclipse.equinox.p2.core"/>
<plugin id="org.eclipse.equinox.p2.engine"/>
<plugin id="org.eclipse.equinox.p2.jarprocessor"/>
<plugin id="org.eclipse.equinox.p2.metadata"/>
<plugin id="org.eclipse.equinox.p2.metadata.repository"/>
<plugin id="org.eclipse.equinox.preferences"/>
<plugin id="org.eclipse.equinox.registry"/>
<plugin id="org.eclipse.equinox.security"/>
<plugin id="org.eclipse.equinox.security.macosx" fragment="true"/>
<plugin id="org.eclipse.gef"/>
<plugin id="org.eclipse.gmf.runtime.common.core"/>
<plugin id="org.eclipse.gmf.runtime.common.ui"/>
<plugin id="org.eclipse.gmf.runtime.common.ui.action"/>
<plugin id="org.eclipse.gmf.runtime.common.ui.printing"/>
<plugin id="org.eclipse.gmf.runtime.common.ui.printing.win32" fragment="true"/>
<plugin id="org.eclipse.gmf.runtime.common.ui.services"/>
<plugin id="org.eclipse.gmf.runtime.common.ui.services.action"/>
<plugin id="org.eclipse.gmf.runtime.common.ui.services.properties"/>
<plugin id="org.eclipse.gmf.runtime.diagram.core"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui.actions"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui.printing"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui.printing.render"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui.properties"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui.providers"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui.render"/>
<plugin id="org.eclipse.gmf.runtime.diagram.ui.resources.editor"/>
<plugin id="org.eclipse.gmf.runtime.draw2d.ui"/>
<plugin id="org.eclipse.gmf.runtime.draw2d.ui.render"/>
<plugin id="org.eclipse.gmf.runtime.draw2d.ui.render.awt"/>
<plugin id="org.eclipse.gmf.runtime.emf.clipboard.core"/>
<plugin id="org.eclipse.gmf.runtime.emf.commands.core"/>
<plugin id="org.eclipse.gmf.runtime.emf.core"/>
<plugin id="org.eclipse.gmf.runtime.emf.type.core"/>
<plugin id="org.eclipse.gmf.runtime.emf.ui"/>
<plugin id="org.eclipse.gmf.runtime.emf.ui.properties"/>
<plugin id="org.eclipse.gmf.runtime.gef.ui"/>
<plugin id="org.eclipse.gmf.runtime.notation"/>
<plugin id="org.eclipse.help"/>
<plugin id="org.eclipse.jface"/>
<plugin id="org.eclipse.jface.databinding"/>
<plugin id="org.eclipse.jface.text"/>
<plugin id="org.eclipse.ocl"/>
<plugin id="org.eclipse.ocl.ecore"/>
<plugin id="org.eclipse.ocl.uml"/>
<plugin id="org.eclipse.osgi"/>
<plugin id="org.eclipse.osgi.services"/>
<plugin id="org.eclipse.swt"/>
<plugin id="org.eclipse.swt.cocoa.macosx" fragment="true"/>
<plugin id="org.eclipse.team.core"/>
<plugin id="org.eclipse.text"/>
<plugin id="org.eclipse.ui"/>
<plugin id="org.eclipse.ui.cocoa" fragment="true"/>
<plugin id="org.eclipse.ui.console"/>
<plugin id="org.eclipse.ui.editors"/>
<plugin id="org.eclipse.ui.forms"/>
<plugin id="org.eclipse.ui.ide"/>
<plugin id="org.eclipse.ui.views"/>
<plugin id="org.eclipse.ui.views.properties.tabbed"/>
<plugin id="org.eclipse.ui.workbench"/>
<plugin id="org.eclipse.ui.workbench.texteditor"/>
<plugin id="org.eclipse.uml2.common"/>
<plugin id="org.eclipse.uml2.uml"/>
<plugin id="org.w3c.css.sac"/>
<plugin id="org.w3c.dom.smil"/>
<plugin id="org.w3c.dom.svg"/>
 





