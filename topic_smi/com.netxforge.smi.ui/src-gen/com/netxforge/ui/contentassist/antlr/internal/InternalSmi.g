/*
* generated by Xtext
*/
grammar InternalSmi;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package com.netxforge.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.netxforge.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.netxforge.services.SmiGrammarAccess;

}

@parser::members {
 
 	private SmiGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SmiGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives()); }
(rule__Assignment__Alternatives)
{ after(grammarAccess.getAssignmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacro
entryRuleMacro 
:
{ before(grammarAccess.getMacroRule()); }
	 ruleMacro
{ after(grammarAccess.getMacroRule()); } 
	 EOF 
;

// Rule Macro
ruleMacro
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroAccess().getGroup()); }
(rule__Macro__Group__0)
{ after(grammarAccess.getMacroAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacroDescriptor
entryRuleMacroDescriptor 
:
{ before(grammarAccess.getMacroDescriptorRule()); }
	 ruleMacroDescriptor
{ after(grammarAccess.getMacroDescriptorRule()); } 
	 EOF 
;

// Rule MacroDescriptor
ruleMacroDescriptor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroDescriptorAccess().getMODULE_IDTerminalRuleCall()); }
	RULE_MODULE_ID
{ after(grammarAccess.getMacroDescriptorAccess().getMODULE_IDTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMacroValue
entryRuleMacroValue 
:
{ before(grammarAccess.getMacroValueRule()); }
	 ruleMacroValue
{ after(grammarAccess.getMacroValueRule()); } 
	 EOF 
;

// Rule MacroValue
ruleMacroValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMacroValueAccess().getGroup()); }
(rule__MacroValue__Group__0)
{ after(grammarAccess.getMacroValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueAssignment
entryRuleValueAssignment 
:
{ before(grammarAccess.getValueAssignmentRule()); }
	 ruleValueAssignment
{ after(grammarAccess.getValueAssignmentRule()); } 
	 EOF 
;

// Rule ValueAssignment
ruleValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAssignmentAccess().getGroup()); }
(rule__ValueAssignment__Group__0)
{ after(grammarAccess.getValueAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueType
entryRuleValueType 
:
{ before(grammarAccess.getValueTypeRule()); }
	 ruleValueType
{ after(grammarAccess.getValueTypeRule()); } 
	 EOF 
;

// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueTypeAccess().getGroup()); }
(rule__ValueType__Group__0)
{ after(grammarAccess.getValueTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_TYPE
entryRuleASN1_TYPE 
:
{ before(grammarAccess.getASN1_TYPERule()); }
	 ruleASN1_TYPE
{ after(grammarAccess.getASN1_TYPERule()); } 
	 EOF 
;

// Rule ASN1_TYPE
ruleASN1_TYPE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_TYPEAccess().getAlternatives()); }
(rule__ASN1_TYPE__Alternatives)
{ after(grammarAccess.getASN1_TYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_SIMPLE
entryRuleASN1_SIMPLE 
:
{ before(grammarAccess.getASN1_SIMPLERule()); }
	 ruleASN1_SIMPLE
{ after(grammarAccess.getASN1_SIMPLERule()); } 
	 EOF 
;

// Rule ASN1_SIMPLE
ruleASN1_SIMPLE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getAlternatives()); }
(rule__ASN1_SIMPLE__Alternatives)
{ after(grammarAccess.getASN1_SIMPLEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_OCTET_STRING
entryRuleASN1_OCTET_STRING 
:
{ before(grammarAccess.getASN1_OCTET_STRINGRule()); }
	 ruleASN1_OCTET_STRING
{ after(grammarAccess.getASN1_OCTET_STRINGRule()); } 
	 EOF 
;

// Rule ASN1_OCTET_STRING
ruleASN1_OCTET_STRING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getGroup()); }
(rule__ASN1_OCTET_STRING__Group__0)
{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_INTEGER
entryRuleASN1_INTEGER 
:
{ before(grammarAccess.getASN1_INTEGERRule()); }
	 ruleASN1_INTEGER
{ after(grammarAccess.getASN1_INTEGERRule()); } 
	 EOF 
;

// Rule ASN1_INTEGER
ruleASN1_INTEGER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getGroup()); }
(rule__ASN1_INTEGER__Group__0)
{ after(grammarAccess.getASN1_INTEGERAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_VALUEPAIR
entryRuleASN1_VALUEPAIR 
:
{ before(grammarAccess.getASN1_VALUEPAIRRule()); }
	 ruleASN1_VALUEPAIR
{ after(grammarAccess.getASN1_VALUEPAIRRule()); } 
	 EOF 
;

// Rule ASN1_VALUEPAIR
ruleASN1_VALUEPAIR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_VALUEPAIRAccess().getGroup()); }
(rule__ASN1_VALUEPAIR__Group__0)
{ after(grammarAccess.getASN1_VALUEPAIRAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_CHOICE
entryRuleASN1_CHOICE 
:
{ before(grammarAccess.getASN1_CHOICERule()); }
	 ruleASN1_CHOICE
{ after(grammarAccess.getASN1_CHOICERule()); } 
	 EOF 
;

// Rule ASN1_CHOICE
ruleASN1_CHOICE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getGroup()); }
(rule__ASN1_CHOICE__Group__0)
{ after(grammarAccess.getASN1_CHOICEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_CHOICE_ENTRY
entryRuleASN1_CHOICE_ENTRY 
:
{ before(grammarAccess.getASN1_CHOICE_ENTRYRule()); }
	 ruleASN1_CHOICE_ENTRY
{ after(grammarAccess.getASN1_CHOICE_ENTRYRule()); } 
	 EOF 
;

// Rule ASN1_CHOICE_ENTRY
ruleASN1_CHOICE_ENTRY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getGroup()); }
(rule__ASN1_CHOICE_ENTRY__Group__0)
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_SUBTYPE
entryRuleASN1_SUBTYPE 
:
{ before(grammarAccess.getASN1_SUBTYPERule()); }
	 ruleASN1_SUBTYPE
{ after(grammarAccess.getASN1_SUBTYPERule()); } 
	 EOF 
;

// Rule ASN1_SUBTYPE
ruleASN1_SUBTYPE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getAlternatives()); }
(rule__ASN1_SUBTYPE__Alternatives)
{ after(grammarAccess.getASN1_SUBTYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASN1_RANGE
entryRuleASN1_RANGE 
:
{ before(grammarAccess.getASN1_RANGERule()); }
	 ruleASN1_RANGE
{ after(grammarAccess.getASN1_RANGERule()); } 
	 EOF 
;

// Rule ASN1_RANGE
ruleASN1_RANGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASN1_RANGEAccess().getGroup()); }
(rule__ASN1_RANGE__Group__0)
{ after(grammarAccess.getASN1_RANGEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectIdentifier
entryRuleObjectIdentifier 
:
{ before(grammarAccess.getObjectIdentifierRule()); }
	 ruleObjectIdentifier
{ after(grammarAccess.getObjectIdentifierRule()); } 
	 EOF 
;

// Rule ObjectIdentifier
ruleObjectIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectIdentifierAccess().getGroup()); }
(rule__ObjectIdentifier__Group__0)
{ after(grammarAccess.getObjectIdentifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleObjectIdentifierValue
entryRuleObjectIdentifierValue 
:
{ before(grammarAccess.getObjectIdentifierValueRule()); }
	 ruleObjectIdentifierValue
{ after(grammarAccess.getObjectIdentifierValueRule()); } 
	 EOF 
;

// Rule ObjectIdentifierValue
ruleObjectIdentifierValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getGroup()); }
(rule__ObjectIdentifierValue__Group__0)
{ after(grammarAccess.getObjectIdentifierValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule MACRO_VALUE_TYPE
ruleMACRO_VALUE_TYPE
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getAlternatives()); }
(rule__MACRO_VALUE_TYPE__Alternatives)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Assignment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getMacrosAssignment_0()); }
(rule__Assignment__MacrosAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getMacrosAssignment_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getTypesAssignment_1()); }
(rule__Assignment__TypesAssignment_1)
{ after(grammarAccess.getAssignmentAccess().getTypesAssignment_1()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getObjectIdentifierParserRuleCall_2()); }
	ruleObjectIdentifier
{ after(grammarAccess.getAssignmentAccess().getObjectIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getTypeAssignment_1_0()); }
(rule__ValueType__TypeAssignment_1_0)
{ after(grammarAccess.getValueTypeAccess().getTypeAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getSimpleTypeAssignment_1_1()); }
(rule__ValueType__SimpleTypeAssignment_1_1)
{ after(grammarAccess.getValueTypeAccess().getSimpleTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_TYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_TYPEAccess().getASN1_SIMPLEParserRuleCall_0()); }
	ruleASN1_SIMPLE
{ after(grammarAccess.getASN1_TYPEAccess().getASN1_SIMPLEParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getASN1_TYPEAccess().getASN1_CHOICEParserRuleCall_1()); }
	ruleASN1_CHOICE
{ after(grammarAccess.getASN1_TYPEAccess().getASN1_CHOICEParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getGroup_0()); }
(rule__ASN1_SIMPLE__Group_0__0)
{ after(grammarAccess.getASN1_SIMPLEAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getASN1_SIMPLEAccess().getASN1_OCTET_STRINGParserRuleCall_1()); }
	ruleASN1_OCTET_STRING
{ after(grammarAccess.getASN1_SIMPLEAccess().getASN1_OCTET_STRINGParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getASN1_SIMPLEAccess().getGroup_2()); }
(rule__ASN1_SIMPLE__Group_2__0)
{ after(grammarAccess.getASN1_SIMPLEAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getGroup_0()); }
(rule__ASN1_SUBTYPE__Group_0__0)
{ after(grammarAccess.getASN1_SUBTYPEAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getValueAssignment_1()); }
(rule__ASN1_SUBTYPE__ValueAssignment_1)
{ after(grammarAccess.getASN1_SUBTYPEAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MACRO_VALUE_TYPE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getVALUEEnumLiteralDeclaration_0()); }
(	'VALUE' 
)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getVALUEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMACRO_VALUE_TYPEAccess().getUpdateEnumLiteralDeclaration_1()); }
(	'Update' 
)
{ after(grammarAccess.getMACRO_VALUE_TYPEAccess().getUpdateEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIdAssignment_0()); }
(rule__Module__IdAssignment_0)
{ after(grammarAccess.getModuleAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getDEFINITIONSKeyword_1()); }

	'DEFINITIONS' 

{ after(grammarAccess.getModuleAccess().getDEFINITIONSKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getColonColonEqualsSignKeyword_2()); }

	'::=' 

{ after(grammarAccess.getModuleAccess().getColonColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getBEGINKeyword_3()); }

	'BEGIN' 

{ after(grammarAccess.getModuleAccess().getBEGINKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAssignmentsAssignment_4()); }
(rule__Module__AssignmentsAssignment_4)*
{ after(grammarAccess.getModuleAccess().getAssignmentsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getENDKeyword_5()); }

	'END' 

{ after(grammarAccess.getModuleAccess().getENDKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Macro__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__0__Impl
	rule__Macro__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getDescriptorAssignment_0()); }
(rule__Macro__DescriptorAssignment_0)
{ after(grammarAccess.getMacroAccess().getDescriptorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__1__Impl
	rule__Macro__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getMACROKeyword_1()); }

	'MACRO' 

{ after(grammarAccess.getMacroAccess().getMACROKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__2__Impl
	rule__Macro__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getColonColonEqualsSignKeyword_2()); }

	'::=' 

{ after(grammarAccess.getMacroAccess().getColonColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__3__Impl
	rule__Macro__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getBEGINKeyword_3()); }

	'BEGIN' 

{ after(grammarAccess.getMacroAccess().getBEGINKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__4__Impl
	rule__Macro__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getTYPENOTATIONKeyword_4()); }

	'TYPE NOTATION' 

{ after(grammarAccess.getMacroAccess().getTYPENOTATIONKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__5__Impl
	rule__Macro__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMacroAccess().getTypeNotationsAssignment_5()); }
(rule__Macro__TypeNotationsAssignment_5)
{ after(grammarAccess.getMacroAccess().getTypeNotationsAssignment_5()); }
)
(
{ before(grammarAccess.getMacroAccess().getTypeNotationsAssignment_5()); }
(rule__Macro__TypeNotationsAssignment_5)*
{ after(grammarAccess.getMacroAccess().getTypeNotationsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__6__Impl
	rule__Macro__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getVALUENOTATIONKeyword_6()); }

	'VALUE NOTATION' 

{ after(grammarAccess.getMacroAccess().getVALUENOTATIONKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__7__Impl
	rule__Macro__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getValueNotationAssignment_7()); }
(rule__Macro__ValueNotationAssignment_7)
{ after(grammarAccess.getMacroAccess().getValueNotationAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__8__Impl
	rule__Macro__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
(rule__Macro__InnerTypesAssignment_8)
{ after(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
)
(
{ before(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
(rule__Macro__InnerTypesAssignment_8)*
{ after(grammarAccess.getMacroAccess().getInnerTypesAssignment_8()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Macro__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Macro__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getENDKeyword_9()); }

	'END' 

{ after(grammarAccess.getMacroAccess().getENDKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__MacroValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__0__Impl
	rule__MacroValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getMacroValueAction_0()); }
(

)
{ after(grammarAccess.getMacroValueAccess().getMacroValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__1__Impl
	rule__MacroValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getValueKeyword_1()); }

	'value(' 

{ after(grammarAccess.getMacroValueAccess().getValueKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__2__Impl
	rule__MacroValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getTypeAssignment_2()); }
(rule__MacroValue__TypeAssignment_2)?
{ after(grammarAccess.getMacroValueAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__3__Impl
	rule__MacroValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getANY_OTHERTerminalRuleCall_3()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getMacroValueAccess().getANY_OTHERTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MacroValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MacroValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getMacroValueAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ValueAssignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__0__Impl
	rule__ValueAssignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getTypeReferenceAssignment_0()); }
(rule__ValueAssignment__TypeReferenceAssignment_0)
{ after(grammarAccess.getValueAssignmentAccess().getTypeReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueAssignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__1__Impl
	rule__ValueAssignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getColonColonEqualsSignKeyword_1()); }

	'::=' 

{ after(grammarAccess.getValueAssignmentAccess().getColonColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueAssignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueAssignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getValueAssignment_2()); }
(rule__ValueAssignment__ValueAssignment_2)
{ after(grammarAccess.getValueAssignmentAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getValueTypeParserRuleCall_0()); }
	ruleValueType
{ after(grammarAccess.getOrAccess().getValueTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1()); }
(rule__Or__Group_1__0)*
{ after(grammarAccess.getOrAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__0__Impl
	rule__Or__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getGroup_1_0()); }
(rule__Or__Group_1_0__0)
{ after(grammarAccess.getOrAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightAssignment_1_1()); }
(rule__Or__RightAssignment_1_1)
{ after(grammarAccess.getOrAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1_0__0__Impl
	rule__Or__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getOrLeftAction_1_0_0()); }
(

)
{ after(grammarAccess.getOrAccess().getOrLeftAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getVerticalLineKeyword_1_0_1()); }

	'|' 

{ after(grammarAccess.getOrAccess().getVerticalLineKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueType__Group__0__Impl
	rule__ValueType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getNameAssignment_0()); }
(rule__ValueType__NameAssignment_0)?
{ after(grammarAccess.getValueTypeAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives_1()); }
(rule__ValueType__Alternatives_1)
{ after(grammarAccess.getValueTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_SIMPLE__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_0__0__Impl
	rule__ASN1_SIMPLE__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getASN1_SIMPLEAction_0_0()); }
(

)
{ after(grammarAccess.getASN1_SIMPLEAccess().getASN1_SIMPLEAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SIMPLE__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getIA5STRINGTerminalRuleCall_0_1()); }
	RULE_IA5STRING
{ after(grammarAccess.getASN1_SIMPLEAccess().getIA5STRINGTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_SIMPLE__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_2__0__Impl
	rule__ASN1_SIMPLE__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getASN1_INTEGERParserRuleCall_2_0()); }
	ruleASN1_INTEGER
{ after(grammarAccess.getASN1_SIMPLEAccess().getASN1_INTEGERParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SIMPLE__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getGroup_2_1()); }
(rule__ASN1_SIMPLE__Group_2_1__0)?
{ after(grammarAccess.getASN1_SIMPLEAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_SIMPLE__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_2_1__0__Impl
	rule__ASN1_SIMPLE__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getLeftParenthesisKeyword_2_1_0()); }

	'(' 

{ after(grammarAccess.getASN1_SIMPLEAccess().getLeftParenthesisKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SIMPLE__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_2_1__1__Impl
	rule__ASN1_SIMPLE__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getConstraintAssignment_2_1_1()); }
(rule__ASN1_SIMPLE__ConstraintAssignment_2_1_1)
{ after(grammarAccess.getASN1_SIMPLEAccess().getConstraintAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SIMPLE__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SIMPLE__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getRightParenthesisKeyword_2_1_2()); }

	')' 

{ after(grammarAccess.getASN1_SIMPLEAccess().getRightParenthesisKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ASN1_OCTET_STRING__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_OCTET_STRING__Group__0__Impl
	rule__ASN1_OCTET_STRING__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_OCTET_STRING__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getASN1_OCTET_STRINGAction_0()); }
(

)
{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getASN1_OCTET_STRINGAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_OCTET_STRING__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_OCTET_STRING__Group__1__Impl
	rule__ASN1_OCTET_STRING__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_OCTET_STRING__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getOCTETSTRINGKeyword_1()); }

	'OCTET STRING' 

{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getOCTETSTRINGKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_OCTET_STRING__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_OCTET_STRING__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_OCTET_STRING__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_OCTET_STRINGAccess().getTODODefintionsKeyword_2()); }

	'TODO defintions.' 

{ after(grammarAccess.getASN1_OCTET_STRINGAccess().getTODODefintionsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ASN1_INTEGER__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group__0__Impl
	rule__ASN1_INTEGER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getINTEGERKeyword_0()); }

	'INTEGER' 

{ after(grammarAccess.getASN1_INTEGERAccess().getINTEGERKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_INTEGER__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group__1__Impl
	rule__ASN1_INTEGER__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getASN1_INTEGERAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_INTEGER__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group__2__Impl
	rule__ASN1_INTEGER__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getASN1_INTEGERAccess().getValuePairsAssignment_2()); }
(rule__ASN1_INTEGER__ValuePairsAssignment_2)
{ after(grammarAccess.getASN1_INTEGERAccess().getValuePairsAssignment_2()); }
)
(
{ before(grammarAccess.getASN1_INTEGERAccess().getValuePairsAssignment_2()); }
(rule__ASN1_INTEGER__ValuePairsAssignment_2)*
{ after(grammarAccess.getASN1_INTEGERAccess().getValuePairsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_INTEGER__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_INTEGER__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getASN1_INTEGERAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ASN1_VALUEPAIR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_VALUEPAIR__Group__0__Impl
	rule__ASN1_VALUEPAIR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_VALUEPAIR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_VALUEPAIRAccess().getIDTerminalRuleCall_0()); }
(	RULE_ID)?
{ after(grammarAccess.getASN1_VALUEPAIRAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_VALUEPAIR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_VALUEPAIR__Group__1__Impl
	rule__ASN1_VALUEPAIR__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_VALUEPAIR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_VALUEPAIRAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getASN1_VALUEPAIRAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_VALUEPAIR__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_VALUEPAIR__Group__2__Impl
	rule__ASN1_VALUEPAIR__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_VALUEPAIR__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_VALUEPAIRAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
{ after(grammarAccess.getASN1_VALUEPAIRAccess().getINTTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_VALUEPAIR__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_VALUEPAIR__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_VALUEPAIR__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_VALUEPAIRAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getASN1_VALUEPAIRAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ASN1_CHOICE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__0__Impl
	rule__ASN1_CHOICE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getCHOICEKeyword_0()); }

	'CHOICE' 

{ after(grammarAccess.getASN1_CHOICEAccess().getCHOICEKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__1__Impl
	rule__ASN1_CHOICE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getASN1_CHOICEAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__2__Impl
	rule__ASN1_CHOICE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoicesAssignment_2()); }
(rule__ASN1_CHOICE__ChoicesAssignment_2)
{ after(grammarAccess.getASN1_CHOICEAccess().getChoicesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__3__Impl
	rule__ASN1_CHOICE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getGroup_3()); }
(rule__ASN1_CHOICE__Group_3__0)*
{ after(grammarAccess.getASN1_CHOICEAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getASN1_CHOICEAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ASN1_CHOICE__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group_3__0__Impl
	rule__ASN1_CHOICE__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getASN1_CHOICEAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoicesAssignment_3_1()); }
(rule__ASN1_CHOICE__ChoicesAssignment_3_1)
{ after(grammarAccess.getASN1_CHOICEAccess().getChoicesAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_CHOICE_ENTRY__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE_ENTRY__Group__0__Impl
	rule__ASN1_CHOICE_ENTRY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdAssignment_0()); }
(rule__ASN1_CHOICE_ENTRY__IdAssignment_0)
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_CHOICE_ENTRY__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_CHOICE_ENTRY__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeAssignment_1()); }
(rule__ASN1_CHOICE_ENTRY__ValueTypeAssignment_1)
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_SUBTYPE__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group_0__0__Impl
	rule__ASN1_SUBTYPE__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getSIZEKeyword_0_0()); }

	'SIZE' 

{ after(grammarAccess.getASN1_SUBTYPEAccess().getSIZEKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_SUBTYPE__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_SUBTYPE__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRangeAssignment_0_1()); }
(rule__ASN1_SUBTYPE__RangeAssignment_0_1)
{ after(grammarAccess.getASN1_SUBTYPEAccess().getRangeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASN1_RANGE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group__0__Impl
	rule__ASN1_RANGE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getASN1_RANGEAction_0()); }
(

)
{ after(grammarAccess.getASN1_RANGEAccess().getASN1_RANGEAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group__1__Impl
	rule__ASN1_RANGE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getASN1_RANGEAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group__2__Impl
	rule__ASN1_RANGE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getGroup_2()); }
(rule__ASN1_RANGE__Group_2__0)
{ after(grammarAccess.getASN1_RANGEAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getASN1_RANGEAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ASN1_RANGE__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_2__0__Impl
	rule__ASN1_RANGE__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getStartAssignment_2_0()); }
(rule__ASN1_RANGE__StartAssignment_2_0)
{ after(grammarAccess.getASN1_RANGEAccess().getStartAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_2__1__Impl
	rule__ASN1_RANGE__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getFullStopFullStopKeyword_2_1()); }

	'..' 

{ after(grammarAccess.getASN1_RANGEAccess().getFullStopFullStopKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASN1_RANGE__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASN1_RANGE__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getEndAssignment_2_2()); }
(rule__ASN1_RANGE__EndAssignment_2_2)
{ after(grammarAccess.getASN1_RANGEAccess().getEndAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ObjectIdentifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__0__Impl
	rule__ObjectIdentifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getDescriptorAssignment_0()); }
(rule__ObjectIdentifier__DescriptorAssignment_0)
{ after(grammarAccess.getObjectIdentifierAccess().getDescriptorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__1__Impl
	rule__ObjectIdentifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getOBJECTIDENTIFIERKeyword_1()); }

	'OBJECT IDENTIFIER' 

{ after(grammarAccess.getObjectIdentifierAccess().getOBJECTIDENTIFIERKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__2__Impl
	rule__ObjectIdentifier__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getColonColonEqualsSignKeyword_2()); }

	'::=' 

{ after(grammarAccess.getObjectIdentifierAccess().getColonColonEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__3__Impl
	rule__ObjectIdentifier__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getObjectIdentifierAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__4__Impl
	rule__ObjectIdentifier__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getOidValueAssignment_4()); }
(rule__ObjectIdentifier__OidValueAssignment_4)
{ after(grammarAccess.getObjectIdentifierAccess().getOidValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifier__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifier__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getObjectIdentifierAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ObjectIdentifierValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifierValue__Group__0__Impl
	rule__ObjectIdentifierValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceAssignment_0()); }
(rule__ObjectIdentifierValue__DescriptorReferenceAssignment_0)?
{ after(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifierValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifierValue__Group__1__Impl
	rule__ObjectIdentifierValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_1()); }
(rule__ObjectIdentifierValue__SubIdsAssignment_1)
{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectIdentifierValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ObjectIdentifierValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_2()); }
(rule__ObjectIdentifierValue__SubIdsAssignment_2)*
{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Module__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getIdMODULE_IDTerminalRuleCall_0_0()); }
	RULE_MODULE_ID{ after(grammarAccess.getModuleAccess().getIdMODULE_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__AssignmentsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getAssignmentsAssignmentParserRuleCall_4_0()); }
	ruleAssignment{ after(grammarAccess.getModuleAccess().getAssignmentsAssignmentParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__MacrosAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getMacrosMacroParserRuleCall_0_0()); }
	ruleMacro{ after(grammarAccess.getAssignmentAccess().getMacrosMacroParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__TypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getTypesValueAssignmentParserRuleCall_1_0()); }
	ruleValueAssignment{ after(grammarAccess.getAssignmentAccess().getTypesValueAssignmentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__DescriptorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getDescriptorMacroDescriptorParserRuleCall_0_0()); }
	ruleMacroDescriptor{ after(grammarAccess.getMacroAccess().getDescriptorMacroDescriptorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__TypeNotationsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getTypeNotationsValueAssignmentCrossReference_5_0()); }
(
{ before(grammarAccess.getMacroAccess().getTypeNotationsValueAssignmentIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getMacroAccess().getTypeNotationsValueAssignmentIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getMacroAccess().getTypeNotationsValueAssignmentCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__ValueNotationAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getValueNotationMacroValueParserRuleCall_7_0()); }
	ruleMacroValue{ after(grammarAccess.getMacroAccess().getValueNotationMacroValueParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Macro__InnerTypesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroAccess().getInnerTypesValueAssignmentParserRuleCall_8_0()); }
	ruleValueAssignment{ after(grammarAccess.getMacroAccess().getInnerTypesValueAssignmentParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MacroValue__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMacroValueAccess().getTypeMACRO_VALUE_TYPEEnumRuleCall_2_0()); }
	ruleMACRO_VALUE_TYPE{ after(grammarAccess.getMacroValueAccess().getTypeMACRO_VALUE_TYPEEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__TypeReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getTypeReferenceMODULE_IDTerminalRuleCall_0_0()); }
	RULE_MODULE_ID{ after(grammarAccess.getValueAssignmentAccess().getTypeReferenceMODULE_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueAssignment__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAssignmentAccess().getValueOrParserRuleCall_2_0()); }
	ruleOr{ after(grammarAccess.getValueAssignmentAccess().getValueOrParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getRightValueTypeParserRuleCall_1_1_0()); }
	ruleValueType{ after(grammarAccess.getOrAccess().getRightValueTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getNameIA5STRINGTerminalRuleCall_0_0()); }
	RULE_IA5STRING{ after(grammarAccess.getValueTypeAccess().getNameIA5STRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__TypeAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getTypeValueAssignmentCrossReference_1_0_0()); }
(
{ before(grammarAccess.getValueTypeAccess().getTypeValueAssignmentIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getValueTypeAccess().getTypeValueAssignmentIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getValueTypeAccess().getTypeValueAssignmentCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__SimpleTypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getSimpleTypeASN1_TYPEParserRuleCall_1_1_0()); }
	ruleASN1_TYPE{ after(grammarAccess.getValueTypeAccess().getSimpleTypeASN1_TYPEParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SIMPLE__ConstraintAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SIMPLEAccess().getConstraintASN1_SUBTYPEParserRuleCall_2_1_1_0()); }
	ruleASN1_SUBTYPE{ after(grammarAccess.getASN1_SIMPLEAccess().getConstraintASN1_SUBTYPEParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_INTEGER__ValuePairsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_INTEGERAccess().getValuePairsASN1_VALUEPAIRParserRuleCall_2_0()); }
	ruleASN1_VALUEPAIR{ after(grammarAccess.getASN1_INTEGERAccess().getValuePairsASN1_VALUEPAIRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__ChoicesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoicesASN1_CHOICE_ENTRYParserRuleCall_2_0()); }
	ruleASN1_CHOICE_ENTRY{ after(grammarAccess.getASN1_CHOICEAccess().getChoicesASN1_CHOICE_ENTRYParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE__ChoicesAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICEAccess().getChoicesASN1_CHOICE_ENTRYParserRuleCall_3_1_0()); }
	ruleASN1_CHOICE_ENTRY{ after(grammarAccess.getASN1_CHOICEAccess().getChoicesASN1_CHOICE_ENTRYParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdASN1_IDTerminalRuleCall_0_0()); }
	RULE_ASN1_ID{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getIdASN1_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_CHOICE_ENTRY__ValueTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeValueTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeValueTypeIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeValueTypeIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getASN1_CHOICE_ENTRYAccess().getValueTypeValueTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__RangeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getRangeASN1_RANGEParserRuleCall_0_1_0()); }
	ruleASN1_RANGE{ after(grammarAccess.getASN1_SUBTYPEAccess().getRangeASN1_RANGEParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_SUBTYPE__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_SUBTYPEAccess().getValueINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getASN1_SUBTYPEAccess().getValueINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__StartAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getStartINTTerminalRuleCall_2_0_0()); }
	RULE_INT{ after(grammarAccess.getASN1_RANGEAccess().getStartINTTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASN1_RANGE__EndAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASN1_RANGEAccess().getEndINTTerminalRuleCall_2_2_0()); }
	RULE_INT{ after(grammarAccess.getASN1_RANGEAccess().getEndINTTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__DescriptorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getDescriptorASN1_IDTerminalRuleCall_0_0()); }
	RULE_ASN1_ID{ after(grammarAccess.getObjectIdentifierAccess().getDescriptorASN1_IDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifier__OidValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierAccess().getOidValueObjectIdentifierValueParserRuleCall_4_0()); }
	ruleObjectIdentifierValue{ after(grammarAccess.getObjectIdentifierAccess().getOidValueObjectIdentifierValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__DescriptorReferenceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierCrossReference_0_0()); }
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierASN1_IDTerminalRuleCall_0_0_1()); }
	RULE_ASN1_ID{ after(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierASN1_IDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getObjectIdentifierValueAccess().getDescriptorReferenceObjectIdentifierCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__SubIdsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsINTTerminalRuleCall_1_0()); }
	RULE_INT{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectIdentifierValue__SubIdsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getObjectIdentifierValueAccess().getSubIdsINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getObjectIdentifierValueAccess().getSubIdsINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


fragment RULE_NUMERIC : '0'..'9';

fragment RULE_ALPHA : 'a'..'z';

fragment RULE_ALPHA_CAP : 'A'..'Z';

RULE_MODULE_ID : RULE_ALPHA_CAP (RULE_ALPHA|RULE_ALPHA_CAP|'-'|RULE_NUMERIC)* (RULE_ALPHA_CAP|RULE_ALPHA|RULE_NUMERIC);

RULE_ASN1_ID : RULE_ALPHA (RULE_ALPHA|RULE_ALPHA_CAP|'-'|RULE_NUMERIC)*;

RULE_IA5STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_SL_ASN1_COMMENT : '--' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


